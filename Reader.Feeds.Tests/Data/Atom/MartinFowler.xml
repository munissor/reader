<?xml version="1.0" encoding="UTF-8"?>
<feed
    xmlns="http://www.w3.org/2005/Atom">
  <link href="http://martinfowler.com/feed.atom" rel="self"/>
  <link href="http://martinfowler.com"/>
  <id>http://martinfowler.com/feed.atom</id>
  <title>Martin Fowler</title>
  <subtitle>Master feed of news and updates from martinfowler.com</subtitle>
  <author>
    <name>Martin Fowler</name>
    <email>fowler@acm.org</email>
    <uri>http://martinfowler.com</uri>
  </author>
  <updated>2014-11-04T08:49:00-05:00</updated>
  <entry>
    <title>Updates to Collection Pipelines</title>
    <link href="http://martinfowler.com/articles/collection-pipeline"/>
    <updated>2014-11-04T08:49:00-05:00</updated>
    <id>tag:martinfowler.com,2014-11-04:Updates-to-Collection-Pipelines</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/collection-pipeline'&gt;&lt;img src = 'http://martinfowler.com/articles/collection-pipeline/collection-pipeline/sketch.png' width = '150px' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Over the last few weeks I&#x2019;ve been quietly making a bunch of small updates to &lt;a href="http://martinfowler.com/articles/collection-pipeline"&gt;my article on collection pipelines&lt;/a&gt;. To the main text I&#x2019;ve added a subsection contrasting them with &lt;a href="http://martinfowler.com/articles/collection-pipeline/#NestedOperatorExpressions"&gt;Nested Operator Expressions&lt;/a&gt;. I&#x2019;ve also added several operators to the &lt;a href="http://martinfowler.com/articles/collection-pipeline/#op-catalog"&gt;operation catalog&lt;/a&gt;, including slice and various set operations.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Architecture of Morrisons OrderPad</title>
    <link href="http://martinfowler.com/articles/orderPad/"/>
    <updated>2014-10-28T09:40:00-04:00</updated>
    <id>tag:martinfowler.com,2014-10-28:Architecture-of-Morrisons-OrderPad</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/orderPad/'&gt;&lt;img src = 'http://martinfowler.com/articles/orderPad/meta-image.png' width = '200px' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Morrisons OrderPad is a tablet web-application that helps staff in supermarkets place orders for new stock as they walk around the store. My colleague Rob Miles and I felt that the resulting application makes a good expositional architecture for a tablet web application backed by a lightweight java server. We highlight the separation of application control and DOM interaction on the client, using small, focused frameworks on the server, the broad-stack testing environment, and the use of a pilot project to understand what features were needed.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 76</title>
    <link href="http://martinfowler.com/photos/76.html"/>
    <updated>2014-10-25T15:55:00-04:00</updated>
    <id>tag:martinfowler.com,2014-10-25:photostream-76</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/76.html'&gt;&lt;img src = 'http://martinfowler.com/photos/76.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Acadia N.P., ME&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Talking about Refactoring on the Ruby Rogues Podcast</title>
    <link href="http://rubyrogues.com/178-rr-book-club-refactoring-ruby-with-martin-fowler/"/>
    <updated>2014-10-22T09:59:00-04:00</updated>
    <id>tag:martinfowler.com,2014-10-22:Talking-about-Refactoring-on-the-Ruby-Rogues-Podcast</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://rubyrogues.com/178-rr-book-club-refactoring-ruby-with-martin-fowler/'&gt;&lt;img src = 'http://martinfowler.com/snips/rubyrogues6.png' width = '200px' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Last week I sat with the &lt;a href="http://rubyrogues.com/178-rr-book-club-refactoring-ruby-with-martin-fowler/"&gt;Ruby Rogues&lt;/a&gt; - a podcast about development in the Ruby and Rails world (&lt;a href="http://devblog.avdi.org/"&gt;Avdi Grimm&lt;/a&gt;,  &lt;a href="http://blog.jessitron.com/"&gt;Jessica Kerr&lt;/a&gt; and host &lt;a href="https://twitter.com/cmaxw"&gt;Charles Max Wood&lt;/a&gt;). They have a regular book club, and their book this time was the &lt;a href="http://martinfowler.com/books/refactoringRubyEd.html"&gt;Ruby edition&lt;/a&gt; of &lt;a href="http://martinfowler.com/books/refactoring.html"&gt;Refactoring&lt;/a&gt; We talked about the definition of refactoring, why we find we don&#x2019;t use debuggers much, what might be done to modernize the book, the role of refactoring tools, whether comments can be used for good, the trade-off between refactoring and rewriting, modularity and microservices, and how the software industry has changed over the last twenty years.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: SacrificialArchitecture</title>
    <link href="http://martinfowler.com/bliki/SacrificialArchitecture.html"/>
    <updated>2014-10-20T09:39:00-04:00</updated>
    <id>http://martinfowler.com/bliki/SacrificialArchitecture.html</id>
    <category term="bliki"/>
    <content type="html">
      &lt;p&gt;You're sitting in a meeting, contemplating the code that your
      team has been working on for the last couple of years. You've come
      to the decision that the best thing you can do now is to throw away
      all that code, and rebuild on a totally new architecture. How does that
      make you feel about that doomed code, about the time you spent
      working on it, about the decisions you made all that time ago?&lt;/p&gt;

      &lt;p&gt;For many people throwing away a code base is a sign of failure,
      perhaps understandable given the inherent exploratory nature of
      software development, but still failure.&lt;/p&gt;

      &lt;p&gt;But often the best code you can write now is code you'll discard in a
      couple of years time.&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/sacrificialArchitecture/sketch.png"/&gt;
      &lt;p&gt;Often we think of great code as long-lived software. I'm writing
      this article in an editor which dates back to the 1980's. Much
      thinking on software architecture is how to facilitate that kind of
      longevity. Yet success can also be built on the top of code long since
      sent to &lt;code&gt;/dev/null&lt;/code&gt;.&lt;/p&gt;

      &lt;p&gt;Consider the story of eBay, one of the web's most successful large
      businesses. It started as a set of perl scripts built over a weekend in
      1995. In 1997 it was all torn down and replaced with a system
      written in C++ on top of the windows tools of the time. Then in 2002
      the application was rewritten again in Java. Were these early
      versions an error because the were replaced? Hardly. Ebay is one of
      the great successes of the web so far, but much of that success was
      built on the discarded software of the 90's. Like many successful
      websites, ebay has seen exponential growth - and exponential growth
      isn't kind to architectural decisions. The right architecture to
      support 1996-ebay isn't going to be the right architecture for
      2006-ebay. The 1996 one won't handle 2006's load but the 2006
      version is too complex to build, maintain, and evolve for
      the needs of 1996.&lt;/p&gt;

      &lt;p&gt;Indeed this guideline can be baked into an organization's way of
      working. At Google, the explicit rule is to design a
      system for ten times its current needs, with the implication
      that if the needs exceed an order of magnitude then it's often better
      to throw away and replace from scratch &lt;a href="#footnote-dean"&gt;[1]&lt;/a&gt;. It's common for
      subsystems to be redesigned and thrown away every few years.&lt;/p&gt;

      &lt;p&gt;Indeed it's a common pattern to see people coming into a maturing
      code base denigrating its lack of performance or scalability. But
      often in the early period of a software system you're less sure of
      what it really needs to do, so it's important to put more focus on
      flexibility for changing features rather than performance or
      availability. Later on you need to switch priorities as you get more
      users, but getting too many users on an unperforment code base is
      usually the better problem than its inverse. Jeff Atwood coined the
      phrase "performance is a feature", which some people read as saying
      the performance is always priority number 1. But any feature is
      something you have to choose versus other features. That's not
      saying you should ignore things like performance - software can get
      sufficiently slow and unreliable to kill a business - but the team
      has to make the difficult trade-offs with other needs. Often these
      are more business decisions rather than technology ones.&lt;/p&gt;

      &lt;p&gt;So what does it mean to deliberately choose a sacrificial
      architecture? Essentially it means accepting now that in a few years
      time you'll (hopefully) need to throw away what you're currently building. This
      can mean accepting limits to the cross-functional needs of what
      you're putting together. It can mean thinking now about things that
      can make it easier to replace when the time comes - software
      designers rarely think about how to design their creation to support
      its graceful replacement. It also means recognizing that software
      that's thrown away in a relatively short time can still deliver
      plenty of value.&lt;/p&gt;

      &lt;p&gt;Knowing your architecture is sacrificial doesn't mean abandoning
      the internal quality of the software. Usually sacrificing internal
      quality will bite you more rapidly than the replacement time, unless
      you're already working on retiring the code base. Good modularity is
      a vital part of a healthy code base, and modularity is usually a big
      help when replacing a system. Indeed one of the best things to do
      with an early version of a system is to explore what the best
      modular structure should be so that you can build on that knowledge
      for the replacement. While it can be reasonable to sacrifice an entire
      system in its early days, as a system grows it's more effective to
      sacrifice individual modules - which you can only do if you have
      good module boundaries.&lt;/p&gt;

      &lt;p&gt;One thing that's easily missed when it comes to handling this
      problem is accounting. Yes, really &#x2014; we've run into situations where
      people have been reluctant to replace a clearly unviable system
      because of the way they were amortizing the codebase. This is more
      likely to be an issue for big enterprises, but don't forget to check
      it if you live in that world. &lt;/p&gt;

      &lt;p&gt;You can also apply this principle to features within an existing
      system. If you're building a new feature it's often wise to make it
      available to only a subset of your users, so you can get feedback on
      whether it's a good idea. To do that you may initially build it in a
      sacrificial way, so that you don't invest the full effort on a feature that
      you find isn't worth full deployment.&lt;/p&gt;

      &lt;p&gt;Modular replaceability is a principal argument in favor of a
      microservices architecture, but I'm wary to recommend that for a
      sacrificial architecture. Microservices imply distribution and
      asynchrony, which are both complexity boosters. I've already run
      into a couple of projects that took the microservice path without
      really needing to &#x2014; seriously slowing down their feature pipeline as a
      result.  So a monolith is often a good sacrificial architecture,
      with microservices introduced later to gradually pull it apart.&lt;/p&gt;

      &lt;p&gt;The team that writes the sacrificial architecture is the team
      that decides it's time to sacrifice it. This is a different case to
      a new team coming in, hating the existing code, and wanting to
      rewrite it. It's easy to hate code you didn't write, without an
      understanding of the context in which it was written. Knowingly
      sacrificing your own code is a very different dynamic, and knowing
      you going to be sacrificing the code you're about to write is a
      useful variant on that.&lt;/p&gt;

      &lt;div class="acknowledgements"&gt;
      &lt;h2&gt;Acknowledgements&lt;/h2&gt;

      &lt;p&gt;Conversations with Randy Shoup encouraged and helped me
      formulate this post, in particular describing the history of eBay
      (and some similar stories from Google). Jonny Leroy pointed out
      the accounting issue. Keif Morris, Jason Yip, Mahendra Kariya,
      Jessica Kerr, Rahul Jain, Andrew Kiellor, Fabio Pereira, Pramod
      Sadalage, Jen Smith, Charles Haynes, Scott Robinson and Paul
      Hammant provided useful comments.&lt;/p&gt;
      &lt;/div&gt;

      &lt;div class="footnote-list"&gt;
      &lt;h2&gt;Notes&lt;/h2&gt;

      &lt;div class="footnote-list-item" id="footnote-dean"&gt;
      &lt;p&gt;&lt;span class="num"&gt;1: &lt;/span&gt;
      As &lt;a href="http://static.googleusercontent.com/media/research.google.com/en//people/jeff/WSDM09-keynote.pdf"&gt;Jeff Dean puts it&lt;/a&gt; "design for ~10X growth, but plan to
      rewrite before ~100X"
      &lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/SacrificialArchitecture.html&amp;amp;text=Bliki: SacrificialArchitecture" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/SacrificialArchitecture.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/SacrificialArchitecture.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 75</title>
    <link href="http://martinfowler.com/photos/75.html"/>
    <updated>2014-10-11T10:33:00-04:00</updated>
    <id>tag:martinfowler.com,2014-10-11:photostream-75</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/75.html'&gt;&lt;img src = 'http://martinfowler.com/photos/75.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Iona, Scotland&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Keynote from goto: Our Responsibility to Defeat Mass Surveillance</title>
    <link href="https://www.youtube.com/watch?v=aNaeVQhrsyY"/>
    <updated>2014-10-09T08:57:00-04:00</updated>
    <id>tag:martinfowler.com,2014-10-09:Keynote-from-goto--Our-Responsibility-to-Defeat-Mass-Surveillance</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'https://www.youtube.com/watch?v=aNaeVQhrsyY'&gt;&lt;img src = 'http://martinfowler.com/articles/gotoaar-2014-keynote.png' width = '150px' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=aNaeVQhrsyY"&gt;In our keynote for goto 2014&lt;/a&gt;, Erik and I consider our responsibilities as software professionals towards combatting the growing tide of mass surveillance. We talk about how software professionals should take a greater role in deciding what software to build, which requires us to have a greater knowledge of the domain and responsibility towards our users and the greater society.  We say why privacy is important, both as a human need and &lt;a href="http://martinfowler.com/articles/bothersome-privacy.html"&gt;for the maintenance of a democratic society&lt;/a&gt;. We use the example of email to explore the importance of an open, collaborative development approach for key infrastructure, and argue our freedoms require a greater level of encryption for all of us together with move to decentralize. We finish with a brief mention of &#x201C;Pixelated&#x201D;, a project ThoughtWorks is doing to increase the use of encrypted email and why its challenges are much more about UX than the details of cryptography.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Building a two-stack CMS</title>
    <link href="http://martinfowler.com/articles/two-stack-cms"/>
    <updated>2014-10-06T10:18:00-04:00</updated>
    <id>tag:martinfowler.com,2014-10-06:Building-a-two-stack-CMS</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/two-stack-cms'&gt;&lt;img src = 'http://martinfowler.com/articles/two-stack-cms/ccs-n-cds.png' width = '150px' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Our Pune office recently did a project with a large manufacturer to build its global marketing website. The site involved complex content, lots of traffic (two million page views a day), localization to nearly a hundred locales, and high availability. &lt;a href="http://martinfowler.com/articles/two-stack-cms"&gt;In this infodeck&lt;/a&gt; my colleague &lt;a href="http://www.sunitparekh.in/home"&gt;Sunit Parekh&lt;/a&gt; and I dig into a key feature of the system - taking on the principle of &lt;a href="http://martinfowler.com/bliki/EditingPublishingSeparation.html"&gt;Editing-Publishing Separation&lt;/a&gt; by building a two-stack architecture. This allowed the client to continue to use a wide range of software for their complex content editing needs, but at the same time providing a content delivery platform that supported a global site with high traffic and availability. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 74</title>
    <link href="http://martinfowler.com/photos/74.html"/>
    <updated>2014-09-07T14:37:00-04:00</updated>
    <id>tag:martinfowler.com,2014-09-07:photostream-74</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/74.html'&gt;&lt;img src = 'http://martinfowler.com/photos/74.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Going to the Sun Road, Glacier N.P., MT&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Setting up a ruby development VM with Vagrant, Chef, and rbenv</title>
    <link href="http://martinfowler.com/articles/vagrant-chef-rbenv.html"/>
    <updated>2014-09-04T10:33:00-04:00</updated>
    <id>tag:martinfowler.com,2014-09-04:Setting-up-a-ruby-development-VM-with-Vagrant--Chef--and-rbenv</id>
    <content type="html">
      &lt;p&gt;Some notes from my experiences in setting up a Vagrant VM to help collaborators use my web publishing toolchain. I used Chef to provision the VM and rbenv to install and control the right version of ruby.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Restoring a deleted note in Apple's notes app</title>
    <link href="http://martinfowler.com/articles/apple-notes-restore.html"/>
    <updated>2014-08-31T10:48:00-04:00</updated>
    <id>tag:martinfowler.com,2014-08-31:Restoring-a-deleted-note-in-Apple-s-notes-app</id>
    <content type="html">
      &lt;p&gt;I recently deleted a note on my Notes app on my apple laptop. As someone who is a paranoid keeper of backups, and usually commits all my work to a repository like git, I don&#x2019;t worry much about accidental deletion. But Apple&#x2019;s notes app doesn&#x2019;t have any form of version control, and it&#x2019;s all too easy to delete something by accident. I have a daily rsync backup and run time machine, but googling couldn&#x2019;t uncover a simple way of getting the note back. So in case someone else needs to do this, &lt;a href="http://martinfowler.com/articles/apple-notes-restore.html"&gt;here&#x2019;s what I did&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 73</title>
    <link href="http://martinfowler.com/photos/73.html"/>
    <updated>2014-08-30T16:00:00-04:00</updated>
    <id>tag:martinfowler.com,2014-08-30:photostream-73</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/73.html'&gt;&lt;img src = 'http://martinfowler.com/photos/73.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Monument Valley&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: MicroservicePrerequisites</title>
    <link href="http://martinfowler.com/bliki/MicroservicePrerequisites.html"/>
    <updated>2014-08-28T10:11:00-04:00</updated>
    <id>http://martinfowler.com/bliki/MicroservicePrerequisites.html</id>
    <category term="bliki"/>
    <content type="html">
      &lt;p&gt;As I talk to people about using a &lt;a href="/articles/microservices.html"&gt;microservices architectural
      style&lt;/a&gt; I hear a lot of optimism. Developers enjoy working with
      smaller units and have expectations of better modularity than with
      monoliths. But as with any architectural decision there are
      trade-offs. In particular with microservices there are serious
      consequences for operations, who now have to handle an ecosystem of
      small services rather than a single, well-defined monolith.
      Consequently if you don't have certain baseline competencies, you
      shouldn't consider using the microservice style.&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/microservicePrerequisites/sketch.png"/&gt;
      &lt;p&gt;&lt;b&gt;Rapid provisioning&lt;/b&gt;: you should be able to fire up a new server in
      a matter of hours. Naturally this fits in with
      &lt;a href="http://martinfowler.com/bliki/CloudComputing.html"&gt;CloudComputing&lt;/a&gt;,  but it's also something that can be done
      without a full cloud service. To be able to do such rapid
      provisioning, you'll need a lot of automation - it may not have to
      be fully automated to start with, but to do serious microservices
      later it will need to get that way.&lt;/p&gt;

      &lt;p&gt;&lt;b&gt;Basic Monitoring:&lt;/b&gt; with many loosely-coupled services
      collaborating in production, things are bound to go wrong in ways
      that are difficult to detect in test environments. As a result it's
      essential that a monitoring regime is in place to detect serious
      problems quickly. The baseline here is detecting technical issues
      (counting errors, service availability, etc) but it's also worth
      monitoring business issues (such as detecting a drop in orders). If
      a sudden problem appears then you need to ensure you can quickly
      rollback, hence&#x2026; &lt;/p&gt;

      &lt;p&gt;&lt;b&gt;Rapid application deployment:&lt;/b&gt; with many services to mangage, you
      need to be able to quickly deploy them, both to test environments
      and to production. Usually this will involve a
      &lt;a href="http://martinfowler.com/bliki/DeploymentPipeline.html"&gt;DeploymentPipeline&lt;/a&gt; that can execute in no more than a
      couple of hours. Some manual intervention is alright in the early
      stages, but you'll be looking to fully automate it soon.&lt;/p&gt;

      &lt;p&gt;These capabilities imply an important organizational shift -
      close collaboration between developers and operations: the &lt;b&gt;DevOps
      culture&lt;/b&gt;. This collaboration is needed to ensure that provisioning
      and deployment can be done rapidly, it's also important to ensure
      you can react quickly when your monitoring indicates a problem. In
      particular any incident management needs to involve the development
      team and operations, both in fixing the immediate problem and the
      root-cause analysis to ensure the underlying problems are fixed.&lt;/p&gt;

      &lt;p&gt;With this kind of setup in place, you're ready for a first system
      using a handful of microservices. Deploy this system and use it in
      production, expect to learn a lot about keeping it healthy and
      ensuring the devops collaboration is working well. Give yourself
      time to do this, learn from it, and grow more capability
      before you ramp up your number of services.&lt;/p&gt;

      &lt;p&gt;If you don't have these capabilities now, you should ensure you
      develop them so they are ready by the time you put a microservice
      system into production. Indeed these are capabilities that you
      really ought to have for monolithic systems too. While they aren't universally
      present across software organizations, there are very few
      places where they shouldn't be a high priority.&lt;/p&gt;

      &lt;p&gt;Going beyond a handful of services requires more. You'll need to
      trace business transactions though multiple services and
      automate your provisioning and deployment by fully embracing
      &lt;a href="http://martinfowler.com/bliki/ContinuousDelivery.html"&gt;ContinuousDelivery&lt;/a&gt;. There's also the shift to &lt;a href="/articles/microservices.html#OrganizedAroundBusinessCapabilities"&gt;product
      centered teams&lt;/a&gt; that needs to be started. You'll need to organize
      your development environment so developers can easily swap between
      multiple repositories, libraries, and languages. Some of my contacts are
      sensing that there could be a useful &lt;a href="http://martinfowler.com/bliki/MaturityModel.html"&gt;MaturityModel&lt;/a&gt; here that can
      help organizations as they take on more microservice implementations -
      we should see more conversation on that in the next few years.&lt;/p&gt;

      &lt;div class="acknowledgements"&gt;
      &lt;h2&gt;Acknowledgements&lt;/h2&gt;

      &lt;p&gt;This list originated in discussions with my ThoughtWorks
      colleagues, particularly those who attended the microservice
      summit earlier this year. I then structured and finalized the
      list in discussion with &lt;b&gt;Evan Bottcher, Thiyagu Palanisamy, Sam
      Newman, and James Lewis&lt;/b&gt;. &lt;/p&gt;

      &lt;p&gt;And as usual there were valuable
      comments from our internal mailing list from Chris Ford, Kief
      Morris, Premanand Chandrasekaran, Rebecca Parsons, Sarah
      Taraporewalla, and Ian Cartwright.&lt;/p&gt;
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/MicroservicePrerequisites.html&amp;amp;text=Bliki: MicroservicePrerequisites" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/MicroservicePrerequisites.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/MicroservicePrerequisites.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: CourtesyImplementation</title>
    <link href="http://martinfowler.com/bliki/CourtesyImplementation.html"/>
    <updated>2014-08-27T08:35:00-04:00</updated>
    <id>tag:martinfowler.com,2014-08-27:Retreaded--CourtesyImplementation</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 12 Aug 2004&lt;/p&gt;

      &lt;p&gt;When you a write a class, you mostly strive to ensure that the
      features of that class make sense for that class. But there are
      occasions when it makes sense to add a feature to allow a class to
      conform to a richer interface that it naturally should.&lt;/p&gt;

      &lt;p&gt;The most common and obvious example of this is one that comes up
      when you use the composite pattern. Let's consider a simple example
      of containers. You have boxes which can contain other boxes and
      elephants (that's an advantage of virtual elephants.) You want
      to know how many elephants are in a box, considering that you need
      to count the elephants inside boxes inside boxes inside the box. The
      solution, of course, is a simple recursion.&lt;/p&gt;

      &lt;pre&gt;
      # Ruby
      class Node
      end

      class Box &amp;lt; Node
      def initialize
      @children = []
      end
      def &amp;lt;&amp;lt; aNode
      @children &amp;lt;&amp;lt; aNode
      end
      def num_elephants
      result = 0
      @children.each do |c|
      if c.kind_of? Elephant
      result += 1
      else
      result += c.num_elephants
      end
      end
      return result
      end
      end

      class Elephant &amp;lt; Node
      end
      &lt;/pre&gt;

      &lt;p&gt;Now the &lt;code&gt;kind_of?&lt;/code&gt; test in &lt;code&gt;num_elephants&lt;/code&gt; is a smell, since we
      should be  wary of any conditional that tests the type of an
      object. On the other hand is there an alternative? After all we are
      making the test because elephants can't contain boxes or elephants, so it doesn't
      make sense to ask them how many elephants are inside them. It
      doesn't fit our model of the world to ask elephants how many
      elephants they contain because they can't contain any. We might say
      it doesn't model the real world, but my example feels a touch too
      whimsical for that argument.&lt;/p&gt;

      &lt;p&gt;However when people use the composite pattern they often do
      provide a method to avoid the conditional - in other words they do
      this.&lt;/p&gt;

      &lt;pre&gt;
      class Node
      #if this is a strongly typed language I define an abstract
      #num_elephants here
      end

      class Box &amp;lt; Node
      def initialize
      @children = []
      end
      def &amp;lt;&amp;lt; aNode
      @children &amp;lt;&amp;lt; aNode
      end
      def num_elephants
      result = 0
      @children.each do |c|
      result += c.num_elephants
      end
      return result
      end
      end

      class Elephant &amp;lt; Node
      def num_elephants
      return 1
      end
      end
      &lt;/pre&gt;

      &lt;p&gt;Many people get very disturbed by this kind of thing, but it does
      a great deal to simplify the logic of code that sweeps through the
      composite structure. I think of it as getting the leaf class
      (elephant) to provide a simple implementation as a courtesy to its
      role as a node in the hierarchy.&lt;/p&gt;

      &lt;p&gt;The analogy I like to draw is the definition of raising a number
      to the power of 0 in mathematics. The definition is that any number
      raised to the power of 0 is 1. But intuitively I don't think it
      makes sense to say that any number multiplied by itself 0 times is
      1 - why not zero? But the definition makes all the mathematics work
      out nicely - so we suspend our disbelief and follow the definition.&lt;/p&gt;

      &lt;p&gt;Whenever we build a model we are designing a model to suit how we
      want to perceive the world. Courtesy Implementations are worthwhile
      if they simplify our model.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 27 Aug 2014&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/CourtesyImplementation.html&amp;amp;text=Bliki: CourtesyImplementation" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/CourtesyImplementation.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/CourtesyImplementation.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: MaturityModel</title>
    <link href="http://martinfowler.com/bliki/MaturityModel.html"/>
    <updated>2014-08-26T09:22:00-04:00</updated>
    <id>http://martinfowler.com/bliki/MaturityModel.html</id>
    <category term="bliki"/>
    <content type="html">
      &lt;p&gt;A maturity model is a tool that helps people assess the current
      effectiveness of a person or group and supports figuring out what
      capabilities they need to acquire next in order to improve their
      performance. In many circles maturity models have gained a bad
      reputation, but although they can easily be misused, in proper hands
      they can be helpful.&lt;/p&gt;

      &lt;p&gt;Maturity models are structured as a series of levels of
      effectiveness. It's assumed that anyone in the field will pass
      through the levels in sequence as they become more capable.&lt;/p&gt;

      &lt;p&gt;So a whimsical example might be that of mixology (a fancy term
      for someone who makes cocktails). We might define levels like
      this:&lt;/p&gt;

      &lt;ol&gt;
      &lt;li&gt;Knows how to make a dozen basic drinks (eg "make me a Manhattan")&lt;/li&gt;

      &lt;li&gt;Knows at least 100 recipes, can substitute ingredients (eg
      "make me a Vieux Carre in a bar that lacks Peychaud's")&lt;/li&gt;

      &lt;li&gt;Able to come up with cocktails (either invented or recalled)
      with a few simple constraints on ingredients and styles (eg
      "make me something with sherry and tequila that's moderately sweet").&lt;/li&gt;
      &lt;/ol&gt;

      &lt;p&gt;Working with a maturity model begins with assessment, determining
      which level the subject is currently performing in. Once you've
      carried out an assessment to determine your level, then you use the
      level above your own to prioritize what capabilities you need to
      learn next. This prioritization of learning is really the big
      benefit of using a maturity model. It's founded on the notion that
      if you are at level 2 in something, it's much more important to
      learn the things at level 3 than level 4. The model thus acts as
      guide to what to learn, putting some structure on what otherwise
      would be a more complex process.&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/maturityModel/sketch.png"/&gt;
      &lt;p&gt;The vital point here is that &lt;b&gt;the true outcome of a maturity model
      assessment isn't what level you are but the list of things you need
      to work on to improve&lt;/b&gt;. Your current level is merely a piece of
      intermediate work in order to determine that list of skills to
      acquire next.&lt;/p&gt;

      &lt;p&gt;Any maturity model, like any model, is a simplification: wrong
      but hopefully useful. Sometimes even a crude model can help you
      figure out what the next step is to take, but if your needed mix of
      capabilities varies too much in different contexts, then this form
      of simplification isn't likely to be worthwhile. &lt;/p&gt;

      &lt;p&gt;A maturity model may have only a single dimension, or may have
      multiple dimensions. In this way you might be level 2 in 19th
      century cocktails but level 3 in tiki drinks. Adding dimensions
      makes the model more nuanced, but also makes it more complex - and
      much of the value of a model comes from simplification, even if it's
      a bit of an over-simplification.&lt;/p&gt;

      &lt;p&gt;As well as using a maturity model for prioritizing learning, it
      can also be helpful in the investment decisions involved. A maturity
      model can contain generalized estimates of progress, such as "to get
      from level 4 to 5 usually takes around 6 months and a 25%
      productivity reduction". Such estimates are, of course, as crude as
      the model, and like any estimation you should only use it when you have a
      clear &lt;a href="http://martinfowler.com/bliki/PurposeOfEstimation.html"&gt;PurposeOfEstimation&lt;/a&gt;. Timing estimates can also be
      helpful in dealing with impatience, particularly with level changes
      that take many months. The model can help structure such
      generalizations by being applied to past work ("we've done 7 level
      2-3 shifts and they took 3-7 months"). &lt;/p&gt;

      &lt;p&gt;Most people I know in the software world treat maturity models
      with an inherent feeling of disdain, most of which you can understand
      by looking at the &lt;a href="http://en.wikipedia.org/wiki/Capability_Maturity_Model"&gt;Capability
      Maturity Model&lt;/a&gt; (CMM) - the best known maturity
      model in the software world. The disdain for the CMM sprung from two
      main roots. The first problem was the CMM was very much associated
      with a document-heavy, plan-driven culture which was very much in
      opposition to the agile software community.&lt;/p&gt;

      &lt;p&gt;But the more serious problem with the CMM was the corruption of
      its core value by certification. Software development companies
      realized that they could gain a competitive advantage by having
      themselves certified at a higher level than their competitors - this
      led to a whole world of often-bogus certification levels,
      levels that lacked a &lt;a href="http://martinfowler.com/bliki/CertificationCompetenceCorrelation.html"&gt;CertificationCompetenceCorrelation&lt;/a&gt;. Using a
      maturity model to say one group is better than another is a classic
      example of ruining an informational metric by incentivizing it. My
      feeling that anyone doing an assessment should never publicize the
      current level outside of the group they are working with. &lt;/p&gt;

      &lt;p&gt;It may be that this tendency to compare levels to judge worth is a
      fundamentally destructive feature of a maturity model, one that will
      always undermine any positive value that comes from it. Certainly it
      feels too easy to see maturity models as catnip for consultants
      looking to sell performance improvement efforts - which is why
      there's always lots of pushback on our internal mailing list whenever
      someone suggests a maturity model to add some structure to our
      consulting work.&lt;/p&gt;

      &lt;p&gt;In an email discussion over a draft of this article, &lt;a href="http://jchyip.blogspot.com/"&gt;Jason Yip&lt;/a&gt;
      observed a more fundamental problem with maturity models: &lt;/p&gt;

      &lt;blockquote&gt;
      &lt;p&gt;"One of my
      main annoyances with most maturity models is not so much that
      they're simplified and linear, but more that they're suggesting a
      poor learning order, usually reflecting what's easier to what's
      harder rather than you should typically learn following this
      path, which may start with some difficult things. &lt;/p&gt;

      &lt;p&gt;In other words,
      the &lt;i&gt;maturity model conflates level of effectiveness with
      learning path&lt;/i&gt;"&lt;/p&gt;

      &lt;p class="quote-attribution"/&gt;
      &lt;/blockquote&gt;

      &lt;p&gt;Jason's observation doesn't mean maturity models are never a good
      idea, but they do raise extra questions when assessing their
      fitness. Whenever you use any kind of model to understand a
      situation and draw inferences, you need to first ensure that the
      model is a good fit to the circumstances. If the model doesn't fit,
      that doesn't mean it's a bad model, but it does mean it's
      inappropriate for this situation. Too often, people don't put enough
      care in evaluating the fitness of a model for a situation before
      they leap to using it.&lt;/p&gt;

      &lt;div class="acknowledgements"&gt;
      &lt;h2&gt;Acknowledgements&lt;/h2&gt;

      Jeff Xiong reminded me that a model can be helpful for investment
      decisions. Sriram Narayan and Jason Yip contributed some helpful feedback.
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/MaturityModel.html&amp;amp;text=Bliki: MaturityModel" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/MaturityModel.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/MaturityModel.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 72</title>
    <link href="http://martinfowler.com/photos/72.html"/>
    <updated>2014-08-23T15:28:00-04:00</updated>
    <id>tag:martinfowler.com,2014-08-23:photostream-72</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/72.html'&gt;&lt;img src = 'http://martinfowler.com/photos/72.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Crested Butte, CO&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Microservices and the First Law of Distributed Objects</title>
    <link href="http://martinfowler.com/articles/distributed-objects-microservices.html"/>
    <updated>2014-08-13T09:52:00-04:00</updated>
    <id>tag:martinfowler.com,2014-08-13:Microservices-and-the-First-Law-of-Distributed-Objects</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/distributed-objects-microservices.html'&gt;&lt;img src = 'http://martinfowler.com/articles/images/distributed-objects-microservices/local-remote.png' width = '100px' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;When I wrote Patterns of Enterprise Application Architecture, I
      coined what I called the First Law of Distributed Object Design:
      &#x201C;don&#x2019;t distribute your objects&#x201D;. In recent months there&#x2019;s been a lot
      of interest in microservices, which has led a few people to ask
      whether microservices are in contravention to this law, and if so
      why I am in favor of them?&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 71</title>
    <link href="http://martinfowler.com/photos/71.html"/>
    <updated>2014-08-09T09:29:00-04:00</updated>
    <id>tag:martinfowler.com,2014-08-09:photostream-71</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/71.html'&gt;&lt;img src = 'http://martinfowler.com/photos/71.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Oxbow Turnout, Two Ocean Lake Trail, Grand Tetons N.P., WY&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: FaultyTechniqueDichotomy</title>
    <link href="http://martinfowler.com/bliki/FaultyTechniqueDichotomy.html"/>
    <updated>2014-08-06T09:34:00-04:00</updated>
    <id>tag:martinfowler.com,2014-08-06:Retreaded--FaultyTechniqueDichotomy</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 05 Aug 2004&lt;/p&gt;

      &lt;p&gt;My main inspiration in life  is trying to capture and improve the
      way in which we do software development. So I spend a lot of time
      talking to people about various techniques they've used, which ones
      work well and which ones suck.&lt;/p&gt;

      &lt;p&gt;As I do this, I often hear about faulty techniques: "FIT wasn't
      worth the effort", "never put any logic in stored procedures", "test
      driven design led to a chaotic mess". The problem with any report of a
      faulty technique is to figure out if the technique itself is faulty,
      or whether the application of the technique was faulty.&lt;/p&gt;

      &lt;p&gt;Let's take a couple of  examples. Several friends of mine
      commented how stored procedures were a disaster because they weren't
      kept in version control (instead they had names like GetCust01,
      GetCust02, GetCust02B etc). That's not a problem with stored
      procedures, that's a problem with people not using them properly.
      Similar a criticism that TDD led to a brittle design on further
      questioning led to the discovery that the team in question hadn't done
      any refactoring - and refactoring is a critical step in TDD. &lt;/p&gt;

      &lt;p&gt;Of course if you take all this too far, you get the opposite
      effect. I often say "no methodology has ever failed". My reason for
      this is that given any failure (assuming you can know
      &lt;a href="http://martinfowler.com/bliki/WhatIsFailure.html"&gt;WhatIsFailure&lt;/a&gt;) you can find some variation from the
      methodology. Hence the methodology wasn't followed and therefore
      didn't fail. This issue is compounded even further with self-adaptive
      agile methods.&lt;/p&gt;

      &lt;p&gt;So when you hear of techniques failing, you need to ask a lot
      more questions.&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;Was it the technique itself that had problems, or was some
      other thing being missed out. Does the technique have an influence on
      this? (Version control is a separate thing to stored procedures, but
      it can be harder to use version control with stored procedures due to
      nature of tools involved.)&lt;/li&gt;

      &lt;li&gt;Was the technique used in a context that wasn't suitable for
      it? (Don't use wide-scale manual refactoring when you don't have
      tests.) Remember that software development is a very human activity,
      often techniques aren't suitable for a context because of culture and
      personality.&lt;/li&gt;

      &lt;li&gt;Were important pieces missed out of the technique?&lt;/li&gt;

      &lt;li&gt;Were people focused on outward signs that didn't correspond to
      the reality? This kind of thing is what Steve McConnell called &lt;a href="http://www.stevemcconnell.com/ieeesoftware/eic10.htm"&gt;Cargo Cult
      Software Engineering&lt;/a&gt;..&lt;/li&gt;
      &lt;/ul&gt;

      &lt;p&gt;An interesting aspect of this is whether certain techniques are
      fragile; that is they are hard to apply correctly and thus more prone
      to a faulty application. If it's hard to use a technique properly,
      that's a reasonable limitation on the technique, reducing the context
      when it can be used.&lt;/p&gt;

      &lt;p&gt;There's no simple answer to this problem, since with these
      techniques we are as unable to measure compliance as we are unable to
      measure their successfulness. The important thing to do is whenever
      you hear of a technique failing - always remember the dichotomy.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 06 Aug 2014&lt;/p&gt;

      &lt;div class="translations"&gt;&lt;b&gt;Translations: &lt;/b&gt;&lt;a href="http://www.autoteiledirekt.de/science/faultytechniquedichotomy"&gt;French&lt;/a&gt; &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/FaultyTechniqueDichotomy.html&amp;amp;text=Bliki: FaultyTechniqueDichotomy" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/FaultyTechniqueDichotomy.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/FaultyTechniqueDichotomy.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: PreferFunctionalStaffOrganization</title>
    <link href="http://martinfowler.com/bliki/PreferFunctionalStaffOrganization.html"/>
    <updated>2014-08-04T11:16:00-04:00</updated>
    <id>tag:martinfowler.com,2014-08-04:Retreaded--PreferFunctionalStaffOrganization</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 02 Aug 2004&lt;/p&gt;

      &lt;p&gt;For as long as I've been in software there's been a debate
      between &lt;a href="http://martinfowler.com/bliki/FunctionalStaffOrganization.html"&gt;FunctionalStaffOrganization&lt;/a&gt; and
      &lt;a href="http://martinfowler.com/bliki/TechnicalStaffOrganization.html"&gt;TechnicalStaffOrganization&lt;/a&gt;. The debate occurs within project teams,
      and across whole IT organizations. It's a constant debate because
      both sides have good logical arguments to support them, and there's
      no real way to test which has an advantage in practice.&lt;/p&gt;

      &lt;p&gt;Despite the fact that I acknowledge this, I greatly prefer a
      functional organization. I say this knowing there are exceptions and
      you can't follow one route all the time. But I'd rather side with
      too much functional orientation than the other way around.&lt;/p&gt;

      &lt;p&gt;For me the compelling factor is that of the aligning of
      application teams to business value. I very much believe in the
      irresistibility of &lt;a href="http://catb.org/~esr/jargon/html/C/Conways-Law.html"&gt;Conway's
      Law&lt;/a&gt; and see the setting of an &lt;a href="http://martinfowler.com/bliki/ApplicationBoundary.html"&gt;ApplicationBoundary&lt;/a&gt; to be
      primarily a social construct. Since the whole point of software
      development is to serve its customers, then the organization should
      reflect this - yielding teams that are focused on providing business
      value rather than delving deep into technical esoterica.&lt;/p&gt;

      &lt;p&gt;Fundamentally the argument of
      &lt;a href="http://martinfowler.com/bliki/TechnicalStaffOrganization.html"&gt;TechnicalStaffOrganization&lt;/a&gt; rests on efficiency - that it's
      wasteful to duplicate systems and that people are more efficient if
      they specialize. I won't deny that you get duplication if you use a
      functional organization, but I'm not so convinced it's so
      wasteful. After all many people believed a centralized, planned
      economy was bound to be more efficient than the wasteful duplication
      of capitalist competition. I'm wary of stretching too much of a parallel
      between macro-economics and software development, but I suspect the
      same issue underlies each of them - human motivation. When people are
      focused away from solving business problems, all sorts of factors
      creep in that introduce inefficiencies far greater than the
      duplication that a technical organization is designed to solve.&lt;/p&gt;

      &lt;p&gt;I also think there's an inevitability here. Business units need
      applications, if they don't get them they will build their own,
      creating a functional organization by default. After all they have
      the money and power - essentially the same dynamics as drive the
      boom-bust cycle of &lt;a href="http://martinfowler.com/bliki/EnterpriseArchitecture.html"&gt;EnterpriseArchitecture&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;So I think that &lt;i&gt;most&lt;/i&gt; of the time you should organize
      functionally. But that doesn't mean that you should be blind to the
      problems of the approach. Duplicate work and lack of technical
      specialization will be serious problems, and you'll need to do things to
      counter those problems. They're just better problems to have than
      the alternative. &lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 04 Aug 2014&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/PreferFunctionalStaffOrganization.html&amp;amp;text=Bliki: PreferFunctionalStaffOrganization" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/PreferFunctionalStaffOrganization.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/PreferFunctionalStaffOrganization.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: ComposedRegex</title>
    <link href="http://martinfowler.com/bliki/ComposedRegex.html"/>
    <updated>2014-07-31T08:26:00-04:00</updated>
    <id>tag:martinfowler.com,2014-07-31:Retreaded--ComposedRegex</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 24 Jul 2009&lt;/p&gt;

      &lt;p&gt;One of the most powerful tools in writing maintainable code is
      break large methods into well-named smaller methods - a technique
      Kent Beck refers to as the Composed Method pattern. &lt;/p&gt;

      &lt;blockquote&gt;
      &lt;p&gt;People can read your programs much more quickly and accurately
      if they can understand them in detail, then chunk those details
      into higher level structures.&lt;/p&gt;

      &lt;p class="quote-attribution"&gt;-- &lt;a href="http://www.amazon.com/Smalltalk-Best-Practice-Patterns-Kent/dp/013476904X"&gt;Kent Beck&lt;/a&gt;&lt;/p&gt;
      &lt;/blockquote&gt;

      &lt;p&gt;What works for methods often works for other things as well. One
      area that I've run into a couple of times where people fail to do
      this is with regular expressions.&lt;/p&gt;

      &lt;p&gt;Let's say you have a file full of rules for scoring frequent
      sleeper points for a hotel chain. The rules all look rather like:&lt;/p&gt;

      &lt;pre&gt;
      score 400 for 2 nights at Minas Tirith Airport
      &lt;/pre&gt;

      &lt;p&gt;We need to pull out the points (400) the number of nights (2) and
      the hotel name (Minas Tirith Airport) for each of these rows.&lt;/p&gt;

      &lt;p&gt;This is an obvious task for a regex, and I'm sure right now
      you're thinking - oh yes we need:&lt;/p&gt;

      &lt;pre&gt;const string pattern =
      @"^score\s+(\d+)\s+for\s+(\d+)\s+nights?\s+at\s+(.*)";
      &lt;/pre&gt;

      &lt;p&gt;Then our three values just pop out of the groups.&lt;/p&gt;

      &lt;p&gt;I don't know whether or not you're comfortable in understanding
      how that regex works and whether it's correct. If you're like me you
      have to look at a regex like this and carefully figure out what it's
      saying. I often find myself counting parentheses so I can see where
      the groups line up (not actually that hard in this case, but I've
      seen plenty of others where it's tougher).&lt;/p&gt;

      &lt;p&gt;You may have read advice to take a pattern like this and to
      comment it. (Often needs a switch when you turn it into a regex.)
      That way you can write it like this.&lt;/p&gt;

      &lt;pre&gt;
      protected override string GetPattern() {
      const string pattern =
      @"^score
      \s+
      (\d+)          # points
      \s+
      for
      \s+
      (\d+)          # number of nights
      \s+
      night
      s?             #optional plural
      \s+
      at
      \s+
      (.*)           # hotel name
      ";

      return pattern;
      }
      }
      &lt;/pre&gt;

      &lt;p&gt;This is easier to follow, but comments never quite satisfy
      me. Occasionally I've been accused of saying comments are bad, and
      that you shouldn't use them. This is wrong, in both senses.
      Comments are not bad - but there are often better options. I always
      try to write code that doesn't need comments, usually by good
      naming and structure. (I can't always succeed, but I feel I do more
      often than not.)&lt;/p&gt;

      &lt;p&gt;People often don't try to structure regexs, but I find it
      useful. Here's one way of doing this one.&lt;/p&gt;

      &lt;pre&gt;
      const string scoreKeyword = @"^score\s+";
      const string numberOfPoints = @"(\d+)";
      const string forKeyword = @"\s+for\s+";
      const string numberOfNights = @"(\d+)";
      const string nightsAtKeyword = @"\s+nights?\s+at\s+";
      const string hotelName = @"(.*)";

      const string pattern =  scoreKeyword + numberOfPoints +
      forKeyword + numberOfNights + nightsAtKeyword + hotelName;
      &lt;/pre&gt;

      &lt;p&gt;I've broken down the pattern into logical chunks and put them
      together again at the end. I can now look at that final expression
      and understand the basic chunks of the expression, diving into the
      regex for each one to see the details. &lt;/p&gt;

      &lt;p&gt;Here another alternative that seeks to separate the whitespace to
      make the actual regexs look more like tokens.&lt;/p&gt;

      &lt;pre&gt;
      const string space = @"\s+";
      const string start = "^";
      const string numberOfPoints = @"(\d+)";
      const string numberOfNights = @"(\d+)";
      const string nightsAtKeyword = @"nights?\s+at";
      const string hotelName = @"(.*)";

      const string pattern =  start + "score" + space + numberOfPoints + space +
      "for" + space + numberOfNights + space + nightsAtKeyword +
      space + hotelName;
      &lt;/pre&gt;

      &lt;p&gt;I find this makes the individual tokens a bit clearer, but all
      those space variables makes the overall structure harder to
      follow. So I prefer the previous one.&lt;/p&gt;

      &lt;p&gt;But this does raise a question. All of the elements are separated
      by space, and putting in lots of space variables or &lt;code&gt;\s+&lt;/code&gt;
      in the patterns feels wet. The nice thing about breaking out the
      regexs into sub-strings is that I can now use the programming logic
      to come up with abstractions that suit my particular purpose
      better. I can write a method that will take sub strings and join
      them up with whitespace.&lt;/p&gt;

      &lt;pre&gt;
      private String composePattern(params String[] arg) {
      return "^" + String.Join(@"\s+", arg);
      }
      &lt;/pre&gt;

      &lt;p&gt;Using this method, I then have.&lt;/p&gt;

      &lt;pre&gt;
      const string numberOfPoints = @"(\d+)";
      const string numberOfNights = @"(\d+)";
      const string hotelName = @"(.*)";

      const string pattern =  composePattern("score", numberOfPoints,
      "for", numberOfNights, "nights?", "at", hotelName);
      &lt;/pre&gt;

      &lt;p&gt;You may not use exactly any of these alternative yourself, but I
      do urge you to think about how to make regular expressions
      clearer. Code should not need to be figured out, it should be just
      read.&lt;/p&gt;

      &lt;hr/&gt;

      &lt;div id="Updates"&gt;&lt;hr class="topSection"/&gt;
      &lt;h2&gt;Updates&lt;/h2&gt;

      &lt;p&gt;In this discussion I've made the elements for the composed
      regexs be local variables. A variation is to take commonly used
      regex elements and use them more widely. This can be handy to use
      common regexs that are needed in lots of places. My colleague
      Carlos Villela comments that one thing to watch out for is if
      these fragments are not well-formed, ie having an opening
      parenthesis that's closed in another fragment. This can be tricky
      to debug. I've not felt the need to do it, so haven't run into
      this problem.&lt;/p&gt;

      &lt;p&gt;A few people mentioned using fluent interfaces (internal DSLs)
      as an more readable &lt;a href="http://flimflan.com/blog/ReadableRegularExpressions.aspx"&gt;alternative
      to regexs&lt;/a&gt;. I see this as a separate thing. Regexs don't bother
      me if they are small, indeed I prefer a small regex to an
      equivalent fluent interface. It's the composition that counts,
      which you can do with either technique.&lt;/p&gt;

      &lt;p&gt;Some others mentioned named capture groups. Like comments, I
      find these are better than the raw regex, but still find a
      composed structure more readable. The point of composition is that
      it breaks the overall regex into small pieces that are easier to
      understand.&lt;/p&gt;
      &lt;/div&gt;

      &lt;p class="repost"&gt;reposted on 31 Jul 2014&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/ComposedRegex.html&amp;amp;text=Bliki: ComposedRegex" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/ComposedRegex.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/ComposedRegex.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Final part of  Collection Pipelines</title>
    <link href="http://martinfowler.com/articles/collection-pipeline/#Laziness"/>
    <updated>2014-07-28T09:56:00-04:00</updated>
    <id>tag:martinfowler.com,2014-07-28:Final-part-of--Collection-Pipelines</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/collection-pipeline/#Laziness'&gt;&lt;img src = 'http://martinfowler.com/articles/collection-pipeline/collection-pipeline/group-by.png' width = '150px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;In this &lt;a href="http://martinfowler.com/articles/collection-pipeline/#Laziness"&gt;final installment&lt;/a&gt; I touch on laziness, parallelism, and immutability then conclude by outlining when we should use collection pipelines. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 70</title>
    <link href="http://martinfowler.com/photos/70.html"/>
    <updated>2014-07-26T16:34:00-04:00</updated>
    <id>tag:martinfowler.com,2014-07-26:photostream-70</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/70.html'&gt;&lt;img src = 'http://martinfowler.com/photos/70.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Cape Arago, OR&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Part 4 of Collection Pipelines: alternatives</title>
    <link href="http://martinfowler.com/articles/collection-pipeline/#Alternatives"/>
    <updated>2014-07-24T08:57:00-04:00</updated>
    <id>tag:martinfowler.com,2014-07-24:Part-4-of-Collection-Pipelines--alternatives</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/collection-pipeline/#Alternatives'&gt;&lt;img src = 'http://martinfowler.com/articles/collection-pipeline/collection-pipeline/reduce.png' width = '150px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;In this installment I look at &lt;a href="http://martinfowler.com/articles/collection-pipeline/#Alternatives"&gt;alternatives to using a collection pipeline&lt;/a&gt;: loops and comprehensions.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Part 3 of Collection Pipelines: complex example inverting a many-to-many relationship</title>
    <link href="http://martinfowler.com/articles/collection-pipeline/#GettingTheNumberOfArticlesForEachTag"/>
    <updated>2014-07-23T09:20:00-04:00</updated>
    <id>tag:martinfowler.com,2014-07-23:Part-3-of-Collection-Pipelines--complex-example-inverting-a-many-to-many-relationship</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/collection-pipeline/#GettingTheNumberOfArticlesForEachTag'&gt;&lt;img src = 'http://martinfowler.com/articles/collection-pipeline/collection-pipeline/flat-map.png' width = '150px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;ve added &lt;a href="http://martinfowler.com/articles/collection-pipeline/#GettingTheNumberOfArticlesForEachTag"&gt;a more complex example&lt;/a&gt; to the article, one that inverts a many-to-many relationship. This also raises the question of how to factor more complex pipelines&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Part 2 of Collection Pipelines: a couple more examples</title>
    <link href="http://martinfowler.com/articles/collection-pipeline/#ExploringMorePipelinesAndOperations"/>
    <updated>2014-07-22T10:04:00-04:00</updated>
    <id>tag:martinfowler.com,2014-07-22:Part-2-of-Collection-Pipelines--a-couple-more-examples</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/collection-pipeline/#ExploringMorePipelinesAndOperations'&gt;&lt;img src = 'http://martinfowler.com/articles/collection-pipeline/collection-pipeline/map.png' width = '150px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;ve added two more examples of collection pipelines with &lt;a href="http://martinfowler.com/articles/collection-pipeline/#ExploringMorePipelinesAndOperations"&gt;this second installment&lt;/a&gt;. The first is the classic combination of map and reduce, also introducing specifying functions with names as well as lambdas. The second introduces the group-by operation and treating hashmaps as key-value pairs.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Collection Pipelines</title>
    <link href="http://martinfowler.com/articles/collection-pipeline"/>
    <updated>2014-07-21T09:12:00-04:00</updated>
    <id>tag:martinfowler.com,2014-07-21:Collection-Pipelines</id>
    <content type="html">
      &lt;p&gt;I&#x2019;ve often come across a pattern in code where you organize some computation by passing collections through a pipeline of operations. I first came across it in Unix, did it in Smalltalk and Ruby, and find it common in functional programming. I&#x2019;ve written &lt;a href="http://martinfowler.com/articles/collection-pipeline"&gt;an article&lt;/a&gt; to describe this pattern, and this is the first installment which contains an initial introduction and a definition of the pattern.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 69</title>
    <link href="http://martinfowler.com/photos/69.html"/>
    <updated>2014-07-06T13:07:00-04:00</updated>
    <id>tag:martinfowler.com,2014-07-06:photostream-69</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/69.html'&gt;&lt;img src = 'http://martinfowler.com/photos/69.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Stonington, CT&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: StranglerApplication</title>
    <link href="http://martinfowler.com/bliki/StranglerApplication.html"/>
    <updated>2014-06-30T09:19:00-04:00</updated>
    <id>tag:martinfowler.com,2014-06-30:Retreaded--StranglerApplication</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 29 Jun 2004&lt;/p&gt;

      &lt;p&gt;When Cindy and I went to Australia, we spent some time in the
      rain forests on the Queensland coast. One of the natural wonders of
      this area are the huge strangler vines. They seed in the upper
      branches of a fig tree and gradually work their way down the tree
      until they root in the soil. Over many years they grow into fantastic
      and beautiful shapes, meanwhile strangling and killing the tree that
      was their host.&lt;/p&gt;

      &lt;p&gt;This metaphor struck me as a way of describing a way of doing a
      rewrite of an important system. Much of my career has involved
      rewrites of critical systems. You would think such a thing as easy -
      just make the new one do what the old one did. Yet they are always
      much more complex than they seem, and overflowing with risk. The big
      cut-over date looms, the pressure is on. While new features (there are
      always new features) are liked, old stuff has to remain. Even old bugs
      often need to be added to the rewritten system.&lt;/p&gt;

      &lt;p&gt;An alternative route is to gradually create a new system around
      the edges of the old, letting it grow slowly over several years until
      the old system is strangled. Doing this sounds hard, but increasingly
      I think it's one of those things that isn't tried enough. In
      particular I've noticed a couple of basic strategies that work well.
      The fundamental strategy is &lt;a href="http://martinfowler.com/bliki/EventInterception.html"&gt;EventInterception&lt;/a&gt;, which
      can be used to gradually move functionality to the strangler and to
      enable &lt;a href="http://martinfowler.com/bliki/AssetCapture.html"&gt;AssetCapture&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;My colleague &lt;a href="https://twitter.com/#!/search/%22chris%20stevenson%22z/"&gt;Chris Stevenson&lt;/a&gt;
      was involved in a project that did this recently with a great deal of
      success. They published a &lt;a href="http://cdn.pols.co.uk/papers/agile-approach-to-legacy-systems.pdf"&gt;first

      paper&lt;/a&gt; on this at &lt;a href="http://www.xp2004.org/"&gt;XP 2004&lt;/a&gt;, and
      I'm hoping for more that describe more aspects of this project. They
      aren't yet at the point where the old application is strangled - but
      they've delivered  valuable functionality to the business that gives
      the team the credibility to go further. And even if they stop now,
      they have a huge return on investment - which is more than many
      cut-over rewrites achieve.&lt;/p&gt;

      &lt;p&gt;The most important reason to consider a strangler application
      over a cut-over rewrite is reduced risk. A strangler can give value
      steadily and the frequent releases allow you to monitor its progress more carefully. Many people still
      don't consider a strangler since they think it will cost more - I'm
      not convinced about that. Since you can use shorter release cycles
      with a strangler you can avoid a lot of the unnecessary features that
      cut over rewrites often generate.  &lt;/p&gt;

      &lt;p&gt;There's another important idea here - when designing a new
      application you should design it in such a way as to make it easier
      for it to be strangled in the future. Let's face it, all we are doing
      is writing tomorrow's legacy software today. By making it easy to be
      strangled in the future, you are enabling the graceful fading away of
      today's work.&lt;/p&gt;

      &lt;div class="furtherReading"&gt;
      &lt;h2&gt;Further Reading&lt;/h2&gt;

      &lt;p&gt;Paul Hammant has a &lt;a href="http://paulhammant.com/2013/07/14/legacy-application-strangulation-case-studies/"&gt;good summary of case studies&lt;/a&gt; using this approach.&lt;/p&gt;
      &lt;/div&gt;

      &lt;p class="repost"&gt;reposted on 30 Jun 2014&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/StranglerApplication.html&amp;amp;text=Bliki: StranglerApplication" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/StranglerApplication.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/StranglerApplication.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: ThrownEstimate</title>
    <link href="http://martinfowler.com/bliki/ThrownEstimate.html"/>
    <updated>2014-06-26T09:11:00-04:00</updated>
    <id>tag:martinfowler.com,2014-06-26:Retreaded--ThrownEstimate</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 22 Jun 2004&lt;/p&gt;

      &lt;p&gt;If you're using XP style planning, you need to get rapid consensus
      estimates from developers. Throwing the estimates lets you quickly
      tell when developers have same similar views on an estimate (so you
      can note it and move on) or if there is disagreement (when you need
      to talk about the &lt;a href="http://martinfowler.com/bliki/UserStory.html"&gt;UserStory&lt;/a&gt; in more detail.&lt;/p&gt;

      &lt;p&gt;Here's the basic sequence. The customer puts together the list of
      stories that need to estimated. With each story:&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;The customer briefly describes the stories to the developers&lt;/li&gt;

      &lt;li&gt;Developers ask clarifying questions about the story. They
      shouldn't discuss technical issues about how to implement, just
      ask about scope from the customer's point of view.&lt;/li&gt;

      &lt;li&gt;On the count of three, the developers show fingers to indicate
      their estimate of how many &lt;a href="http://martinfowler.com/bliki/XpVelocity.html"&gt;NUTs&lt;/a&gt; there are in the story. I call
      this a thrown estimate because you can use the same style of pacing
      throws that you use
      for &lt;a href="http://www.worldrps.com/gbasics.html"&gt;Rock Paper
      Scissors.&lt;/a&gt;.&lt;/li&gt;

      &lt;li&gt;If most estimates are similar the scribe notes down the
      estimate. If you get a significant variation in estimate then you
      should discuss the story further - bringing in the technical issues of
      how to implement it.&lt;/li&gt;
      &lt;/ul&gt;

      &lt;p&gt;You can use different conventions for how many fingers to
      use. One project I've seen uses 1 or 2 fingers to indicate 1 or 2
      NUTs and three fingers to indicate the story is too big and needs
      splitting up. Another group uses fingers for 1-4 NUTs and five
      fingers to indicate it's too large. Notice that it's important to
      have a convention to say that a story has a problem and can't be
      estimated - most often because it's too big, but also if it can't be
      tested or there's some other problem.&lt;/p&gt;

      &lt;p&gt;Teams using this report that they are able to estimate stories at
      a very rapid rate, avoiding much discussion on stories that are
      straightforward to estimate and concentrating time on those that are
      more problematic. This keeps everyone engaged in the estimating
      process. It also helps that it's fun.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 26 Jun 2014&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/ThrownEstimate.html&amp;amp;text=Bliki: ThrownEstimate" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/ThrownEstimate.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/ThrownEstimate.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: CanaryRelease</title>
    <link href="http://martinfowler.com/bliki/CanaryRelease.html"/>
    <updated>2014-06-25T09:36:00-04:00</updated>
    <id>http://martinfowler.com/bliki/CanaryRelease.html</id>
    <category term="bliki"/>
    <author>
      <name>Danilo Sato</name>
      <uri>http://www.dtsato.com/</uri>
    </author>
    <content type="html">
      &lt;p&gt;&lt;b&gt;Canary release&lt;/b&gt; is a technique to reduce the risk of
      introducing a new software version in production by slowly rolling out the
      change to a small subset of users before rolling it out to the entire
      infrastructure and making it available to everybody.
      &lt;/p&gt;

      &lt;p&gt;
      Similar to a &lt;a href="http://martinfowler.com/bliki/BlueGreenDeployment.html"&gt;BlueGreenDeployment&lt;/a&gt;, you start by deploying the
      new version of your software to a subset of your infrastructure, to which no
      users are routed.
      &lt;/p&gt;

      &lt;p&gt;&lt;img src="http://martinfowler.com/bliki/images/canaryRelease/canary-release-1.png"/&gt;&lt;/p&gt;

      &lt;p&gt;
      When you are happy with the new version, you can start routing a few
      selected users to it. There are different strategies to choose which users
      will see the new version: a simple strategy is to use a random sample; some
      companies choose to release the new version to their internal users and
      employees before releasing to the world; another more sophisticated approach
      is to choose users based on their profile and other demographics.
      &lt;/p&gt;

      &lt;p&gt;&lt;img src="http://martinfowler.com/bliki/images/canaryRelease/canary-release-2.png"/&gt;&lt;/p&gt;

      &lt;p&gt;
      As you gain more confidence in the new version, you can start releasing it
      to more servers in your infrastructure and routing more users to it. A good
      practice to rollout the new version is to repurpose your existing
      infrastructure using &lt;a href="http://martinfowler.com/bliki/PhoenixServer.html"&gt;PhoenixServers&lt;/a&gt; or to provision new
      infrastructure and decommission the old one using &lt;a href="http://martinfowler.com/bliki/ImmutableServer.html"&gt;ImmutableServers&lt;/a&gt;.
      &lt;/p&gt;

      &lt;p&gt;
      Canary release is an application of &lt;a href="http://martinfowler.com/bliki/ParallelChange.html"&gt;ParallelChange&lt;/a&gt;, where the
      migrate phase lasts until all the users have been routed to the new version.
      At that point, you can decomission the old infrastructure. If you find any
      problems with the new version, the rollback strategy is simply to reroute
      users back to the old version until you have fixed the problem.
      &lt;/p&gt;

      &lt;p&gt;&lt;img src="http://martinfowler.com/bliki/images/canaryRelease/canary-release-3.png"/&gt;&lt;/p&gt;

      &lt;p&gt;
      A benefit of using canary releases is the ability to do capacity testing of
      the new version in a production environment with a safe rollback strategy if
      issues are found. By slowly ramping up the load, you can monitor and capture
      metrics about how the new version impacts the production environment. This
      is an alternative approach to creating an entirely separate capacity testing
      environment, because the environment will be as production-like as it can be.
      &lt;/p&gt;

      &lt;p&gt;
      Although the name for this technique might not be familiar &lt;a href="#footnote-origin"&gt;[1]&lt;/a&gt;,
      the practice of canary releasing has been adopted for some time. Sometimes
      it is referred to as a &lt;b&gt;phased rollout&lt;/b&gt; or an &lt;b&gt;incremental
      rollout&lt;/b&gt;.
      &lt;/p&gt;

      &lt;p&gt;
      In large, distributed scenarios, instead of using a router to decide which
      users will be redirected to the new version, it is also common to use
      different partitioning strategies. For example: if you have geographically
      distributed users, you can rollout the new version to a region or a specific
      location first; if you have multiple brands you can rollout to a single
      brand first, etc. Facebook chooses to use a strategy with multiple canaries,
      the first one being visible only to their internal employees and having all
      the &lt;a href="http://martinfowler.com/bliki/FeatureToggle.html"&gt;FeatureToggles&lt;/a&gt; turned on so they can detect problems with new
      features early.
      &lt;/p&gt;

      &lt;p&gt;&lt;img src="http://martinfowler.com/bliki/images/canaryRelease/facebook-canary-strategy.jpg"/&gt;&lt;/p&gt;

      &lt;p&gt;
      Canary releases can be used as a way to implement A/B testing due to
      similarities in the technical implementation. However, it is preferable to
      avoid conflating these two concerns: while canary releases are a good way
      to detect problems and regressions, A/B testing is a way to test a hypothesis
      using variant implementations. If you monitor business metrics to detect
      regressions with a canary &lt;a href="#footnote-cluster-immune-system"&gt;[2]&lt;/a&gt;, also using
      it for A/B testing could interfere with the results. On a more practical
      note, it can take days to gather enough data to demonstrate statistical
      significance from an A/B test, while you would want a canary rollout to
      complete in minutes or hours.
      &lt;/p&gt;

      &lt;p&gt;
      One drawback of using canary releases is that you have to manage multiple
      versions of your software at once. You can even decide to have more than two
      versions running in production at the same time, however it is best to keep
      the number of concurrent versions to a minimum.
      &lt;/p&gt;

      &lt;p&gt;
      Another scenario where using canary releases is hard is when you distribute
      software that is installed in the users' computers or mobile devices. In
      this case, you have less control over when the upgrade to the new version
      happens. If the distributed software communicates with a backend, you can
      use &lt;a href="http://martinfowler.com/bliki/ParallelChange.html"&gt;ParallelChange&lt;/a&gt; to support both versions and monitor which
      client versions are being used. Once the usage numbers fall to a certain
      level, you can then contract the backend to only support the new version.
      &lt;/p&gt;

      &lt;p&gt;
      Managing database changes also requires attention when doing canary releases.
      Again, using &lt;a href="http://martinfowler.com/bliki/ParallelChange.html"&gt;ParallelChange&lt;/a&gt; is a technique to mitigate this
      problem. It allows the database to support both versions of the application
      during the rollout phase.
      &lt;/p&gt;

      &lt;div class="furtherReading"&gt;
      &lt;h2&gt;Further Reading&lt;/h2&gt;

      &lt;p&gt;
      Canary release is described by Jez Humble and Dave Farley in the book
      &lt;a href="/books/continuousDelivery.html"&gt;Continuous Delivery&lt;/a&gt;.
      &lt;/p&gt;

      &lt;p&gt;
      In &lt;a href="http://www.infoq.com/presentations/Facebook-Release-Process"&gt;this talk&lt;/a&gt;,
      Chuck Rossi describes Facebook's release process and their use of canary
      releases in more detail.
      &lt;/p&gt;
      &lt;/div&gt;

      &lt;div class="acknowledgements"&gt;
      &lt;h2&gt;Acknowledgements&lt;/h2&gt;

      &lt;p&gt;
      Thanks to many ThoughtWorks colleagues for their feedback: Jez Humble,
      Rohith Rajagopal, Charles Haynes, Andrew Maddison, Mark Taylor, Sunit
      Parekh, and Sam Newman.
      &lt;/p&gt;
      &lt;/div&gt;

      &lt;div class="footnote-list"&gt;
      &lt;h2&gt;Notes&lt;/h2&gt;

      &lt;div class="footnote-list-item" id="footnote-origin"&gt;
      &lt;p&gt;&lt;span class="num"&gt;1: &lt;/span&gt;
      The name for this technique originates from miners who would carry a
      canary in a cage down the coal mines. If toxic gases leaked into the mine,
      it would kill the canary before killing the miners. A canary release
      provides a similar form of early warning for potential problems before
      impacting your entire production infrastructure or user base.
      &lt;/p&gt;
      &lt;/div&gt;

      &lt;div class="footnote-list-item" id="footnote-cluster-immune-system"&gt;
      &lt;p&gt;&lt;span class="num"&gt;2: &lt;/span&gt;
      The technique of monitoring business metrics and automatically rolling
      back a release on a statistically significant regression is known as
      a &lt;b&gt;cluster immune system&lt;/b&gt; and was pioneered by IMVU. They
      describe this and other practices in their Continuous Deployment approach
      in this &lt;a href="http://engineering.imvu.com/2010/04/09/imvus-approach-to-integrating-quality-assurance-with-continuous-deployment/"&gt;blog post&lt;/a&gt;.
      &lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/CanaryRelease.html&amp;amp;text=Bliki: CanaryRelease" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/CanaryRelease.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/CanaryRelease.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 68</title>
    <link href="http://martinfowler.com/photos/68.html"/>
    <updated>2014-06-12T19:43:00-04:00</updated>
    <id>tag:martinfowler.com,2014-06-12:photostream-68</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/68.html'&gt;&lt;img src = 'http://martinfowler.com/photos/68.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Amsterdam&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Rails: a platform or a suite of components?</title>
    <link href="http://martinfowler.com/articles/badri-hexagonal"/>
    <updated>2014-06-12T09:58:00-04:00</updated>
    <id>tag:martinfowler.com,2014-06-12:Rails--a-platform-or-a-suite-of-components-</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/badri-hexagonal'&gt;&lt;img src = 'http://martinfowler.com/snips/badri.jpg' width = '100px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://twitter.com/badrij"&gt;Badri Janakiraman&lt;/a&gt; and I continue &lt;a href="http://martinfowler.com/articles/badri-hexagonal"&gt;our video conversation about hexagonal Rails&lt;/a&gt; by looking into how we should work with the Rails framework. We posit that when you work with a framework like Rails you should decide to either treat it as a platform, meaning you embrace it into your application, or as suite of components, treating each aspect as an independently replaceable unit.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Summary for final "Is TDD Dead" hangout</title>
    <link href="http://martinfowler.com/articles/is-tdd-dead/"/>
    <updated>2014-06-12T09:46:00-04:00</updated>
    <id>tag:martinfowler.com,2014-06-12:Summary-for-final--Is-TDD-Dead--hangout</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/is-tdd-dead/'&gt;&lt;img src = 'http://martinfowler.com/snips/hangout-kb-dhh-mf.png' width = '80' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;ve written up the summary for the final &lt;a href="http://martinfowler.com/articles/is-tdd-dead/"&gt;Is TDD Dead&lt;/a&gt; hangout. In this episode we answered questions that viewers submitted via the Google Q&amp;amp;A system. We discussed the dearth of real open-source examples of applications and how this made it harder to examine these questions. We looked at our experiences with TDD and the different kinds of value we&#x2019;ve drawn from it. We also examined the value of TDD to less experienced developers. We finished by looking at TDD&#x2019;s place in software development.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Badri Janakiraman on Hexagonal Rails and Databases</title>
    <link href="http://martinfowler.com/articles/badri-hexagonal"/>
    <updated>2014-06-05T08:53:00-04:00</updated>
    <id>tag:martinfowler.com,2014-06-05:Badri-Janakiraman-on-Hexagonal-Rails-and-Databases</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/badri-hexagonal'&gt;&lt;img src = 'http://martinfowler.com/snips/badri.jpg' width = '100px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The recent series of videos on &lt;a href="http://martinfowler.com/articles/is-tdd-dead/"&gt;Is TDD Dead&lt;/a&gt; has led to many interesting discussions. One of these was an email exchange I had with my colleague &lt;a href="https://twitter.com/badrij"&gt;Badri Janakiraman&lt;/a&gt;, who is a long-time ThoughtWorker with a lot of experience in Rails and other development stacks. We decided to video this conversation, as I thought some other people would enjoy it too. Our conversation looks at the Hexagonal Rails approach, what it is, and when it&#x2019;s appropriate. &lt;a href="http://martinfowler.com/articles/badri-hexagonal"&gt;This first video&lt;/a&gt; introduces the notion of Hexagonal Architecture, and talks about how it effects the relationship with the database - which ends up being a choice between the Active Record and Data Mapper patterns.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>How to Change a Culture</title>
    <link href="http://martinfowler.com/articles/testing-culture.html#culture-change"/>
    <updated>2014-06-03T10:03:00-04:00</updated>
    <id>tag:martinfowler.com,2014-06-03:How-to-Change-a-Culture</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/testing-culture.html#culture-change'&gt;&lt;img src = 'http://martinfowler.com/articles/testing-culture/msb.jpg' width = '80px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://plus.google.com/+MikeBland/posts"&gt;Mike Bland&lt;/a&gt; concludes his article on testing culture with some general advice on &lt;a href="http://martinfowler.com/articles/testing-culture.html#culture-change"&gt;how to change a culture to introduce testing&lt;/a&gt;, generalized from his experience at Google and elsewhere. This finishes what&#x2019;s been a long and fascinating article that really gets into the nitty-gritty of unit testing at a scale of a large software development organization. He finishes with a call to action arguing that it is our professional duty to use techniques like unit testing to prevent catastrophic bugs like goto fail and heartbleed. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 67</title>
    <link href="http://martinfowler.com/photos/67.html"/>
    <updated>2014-05-31T11:40:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-31:photostream-67</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/67.html'&gt;&lt;img src = 'http://martinfowler.com/photos/67.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Coastal Maine Botanical Gardens, ME&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retrofitting a testing culture into Google</title>
    <link href="http://martinfowler.com/articles/testing-culture.html#google"/>
    <updated>2014-05-29T09:49:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-29:Retrofitting-a-testing-culture-into-Google</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/testing-culture.html#google'&gt;&lt;img src = 'http://martinfowler.com/articles/testing-culture/msb.jpg' width = '80px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://plus.google.com/+MikeBland/posts"&gt;Mike Bland&lt;/a&gt; has talked about serious bugs and how a testing culture is a vital tool to prevent them and build the confidence you need to evolve and sustain a code-base. But his story is not just about theory, it&#x2019;s built on practice - and here is the experience of him and his colleagues in installing a testing culture into Google.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Summary and links for fourth "Is TDD Dead" hangout, final will be on June 4th</title>
    <link href="http://martinfowler.com/articles/is-tdd-dead/"/>
    <updated>2014-05-28T10:19:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-28:Summary-and-links-for-fourth--Is-TDD-Dead--hangout--final-will-be-on-June-4th</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/is-tdd-dead/'&gt;&lt;img src = 'http://martinfowler.com/snips/hangout-kb-dhh-mf.png' width = '80' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;ve added summary and links from our fourth &#x201C;Is TDD Dead&#x201D; podcast to my &lt;a href="http://martinfowler.com/articles/is-tdd-dead/"&gt;overview page&lt;/a&gt;. This discussion looked at the downsides of testing and TDD: can you do too much testing, and is there a problem with teams valuing tests more than they value the functional code? We&#x2019;ve set the time for &lt;a href="https://plus.google.com/events/cco30ri6dpkej4h4d8mejmat98o"&gt;our fifth and final hangout&lt;/a&gt; to be on Wednesday June 4th at 1100 Eastern time. This one will be a Q&amp;amp;A - to submit and vote on questions go to the &lt;a href="https://plus.google.com/events/cco30ri6dpkej4h4d8mejmat98o"&gt;event page&lt;/a&gt; and press the play button. We&#x2019;ll also do some final thoughts and wrap up, which will make this discussion run longer than we&#x2019;ve done so far (maybe going up to an hour). &lt;/p&gt;

      &lt;p&gt;ThoughtWorks has also put audio for all the episodes onto its newly relaunched &lt;a href="https://itunes.apple.com/us/podcast/thoughtworks/id881136697?mt=2"&gt;podcast feed&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Unit Testing Culture: other useful tools</title>
    <link href="http://martinfowler.com/articles/testing-culture.html#other-useful-tools-and-practices"/>
    <updated>2014-05-27T09:45:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-27:Unit-Testing-Culture--other-useful-tools</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/testing-culture.html#other-useful-tools-and-practices'&gt;&lt;img src = 'http://martinfowler.com/articles/testing-culture/msb.jpg' width = '80px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Unit testing, while valuable, isn&#x2019;t the only tool to consider to reduce the chances of catastrophic bugs. In this fourth installment of his &lt;a href="http://martinfowler.com/articles/testing-culture.html"&gt;article on Goto Fail, Heartbleed, and Unit Testing Culture&lt;/a&gt;
      &lt;a href="https://plus.google.com/+MikeBland/posts"&gt;Mike Bland&lt;/a&gt; discusses these other tools both in contrast to, and as allies to unit testing.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Audio and Video for Third "Is TDD Dead" hangout, fourth will be on May 27</title>
    <link href="http://martinfowler.com/articles/is-tdd-dead/"/>
    <updated>2014-05-20T14:37:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-20:Audio-and-Video-for-Third--Is-TDD-Dead--hangout--fourth-will-be-on-May-27</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/is-tdd-dead/'&gt;&lt;img src = 'http://martinfowler.com/snips/hangout-kb-dhh-mf.png' width = '80' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The &lt;a href="http://martinfowler.com/articles/is-tdd-dead/"&gt;hangout overview page&lt;/a&gt; now has links to the video and audio from the 3rd &#x201C;Is TDD Dead&#x201D; hangout, together with my written summary of the hangout. In this session we talk about the trade-offs and nature of feedback and the  TDD&#x2019;s influence on QA. The &lt;a href="http://bit.ly/1tfAWmk"&gt;next hangout&lt;/a&gt; will be next Tuesday May 27th at 1100 Eastern time.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>The Costs and Benefits of a Unit Testing Culture</title>
    <link href="http://martinfowler.com/articles/testing-culture.html#costs"/>
    <updated>2014-05-20T09:34:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-20:The-Costs-and-Benefits-of-a-Unit-Testing-Culture</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/testing-culture.html#costs'&gt;&lt;img src = 'http://martinfowler.com/articles/testing-culture/msb.jpg' width = '80px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://plus.google.com/+MikeBland/posts"&gt;Mike Bland&lt;/a&gt; moves on to the &lt;a href="http://martinfowler.com/articles/testing-culture.html"&gt;third installment of his article on Goto Fail, Heartbleed, and Unit Testing Culture&lt;/a&gt;. Here he looks at the significant costs of installing a unit testing culture and compares them to the benefits you gain by doing it - benefits that go beyond just reducing the chances of catastrophic bugs.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Overview page for "Is TDD Dead"</title>
    <link href="http://martinfowler.com/articles/is-tdd-dead/"/>
    <updated>2014-05-19T13:35:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-19:Overview-page-for--Is-TDD-Dead-</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/is-tdd-dead/'&gt;&lt;img src = 'http://martinfowler.com/snips/hangout-kb-dhh-mf.png' width = '80' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;ve put together &lt;a href="http://martinfowler.com/articles/is-tdd-dead/"&gt;an overview page for our &#x201C;Is TDD Dead&#x201D; discussions&lt;/a&gt;. It includes links to all the video and audio downloads, summaries of the discussions, and links to things we refer to.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 66</title>
    <link href="http://martinfowler.com/photos/66.html"/>
    <updated>2014-05-17T09:20:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-17:photostream-66</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/66.html'&gt;&lt;img src = 'http://martinfowler.com/photos/66.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Duilhac-sous-Peyrepertuse, Languedoc, France&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Second "Is TDD Dead" Hangout video and audio available, third hangout scheduled</title>
    <link href="http://martinfowler.com/snips/2014-is-tdd-hangout-2-video.html"/>
    <updated>2014-05-16T18:33:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-16:Second--Is-TDD-Dead--Hangout-video-and-audio-available--third-hangout-scheduled</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/2014-is-tdd-hangout-2-video.html'&gt;&lt;img src = 'http://martinfowler.com/snips/hangout-kb-dhh-mf.png' width = '80' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;We&#x2019;ve now completed the second &#x201C;Is TDD Dead&#x201D; hangout. You can &lt;a href="https://www.youtube.com/watch?v=JoTB2mcjU7w"&gt;watch it on YouTube&lt;/a&gt; or download &lt;a href="http://assets.thoughtworks.com/podcast/is-tdd-dead-episode-2-16-may-2014.mp3"&gt;an mp3 file&lt;/a&gt; if you&#x2019;d rather not look at our faces. We&#x2019;ve scheduled &lt;a href="https://plus.google.com/u/0/events/cf6e4486cs7ejh5632ldf2ks0eo"&gt;the next one for Tuesday May 20th at 1100 Eastern time&lt;/a&gt; (same time, but a different day next week, due to our scheduling constraints).&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Second Installment of "Goto Fail, Heartbleed, and Unit Testing Culture"</title>
    <link href="http://martinfowler.com/articles/testing-culture.html#heartbleed"/>
    <updated>2014-05-14T10:22:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-14:Second-Installment-of--Goto-Fail--Heartbleed--and-Unit-Testing-Culture-</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/testing-culture.html#heartbleed'&gt;&lt;img src = 'http://martinfowler.com/articles/testing-culture/msb.jpg' width = '70px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;In this second installment &lt;a href="https://plus.google.com/+MikeBland/posts"&gt;Mike Bland&lt;/a&gt; takes &lt;a href="http://martinfowler.com/articles/testing-culture.html"&gt;a look at the Heartbleed bug&lt;/a&gt;, showing what kind of unit tests would expose the bug and the testing culture that would encourage these tests to be written. He further stresses that a testing culture wouldn&#x2019;t consider a bug to be fixed without additional tests and posits a corollary to Linus&#x2019;s Law.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: ParallelChange</title>
    <link href="http://martinfowler.com/bliki/ParallelChange.html"/>
    <updated>2014-05-13T09:44:00-04:00</updated>
    <id>http://martinfowler.com/bliki/ParallelChange.html</id>
    <category term="bliki"/>
    <author>
      <name>Danilo Sato</name>
      <uri>http://www.dtsato.com/</uri>
    </author>
    <content type="html">
      &lt;p&gt;
      Making a change to an interface that impacts all its consumers requires two thinking modes:
      implementing the change itself, and then updating all its usages. This can be hard when you
      try to do both at the same time, especially if the change is on a &lt;a href="http://martinfowler.com/bliki/PublishedInterface.html"&gt;PublishedInterface&lt;/a&gt;
      with multiple or external clients.
      &lt;/p&gt;

      &lt;p&gt;&lt;b&gt;Parallel change&lt;/b&gt;, also known as &lt;b&gt;expand and contract&lt;/b&gt;, is a pattern to
      implement backward-incompatible changes to an interface in a safe manner, by breaking the
      change into three distinct phases: expand, migrate, and contract.
      &lt;/p&gt;

      &lt;p&gt;
      To understand the pattern, let's use an example of a simple &lt;code&gt;Grid&lt;/code&gt; class that stores
      and provides information about its cells using a pair of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;
      integer coordinates. Cells are stored internally in a two-dimentional array and clients can use
      the &lt;code&gt;addCell()&lt;/code&gt;, &lt;code&gt;fetchCell()&lt;/code&gt; and &lt;code&gt;isEmpty()&lt;/code&gt; methods to
      interact with the grid.
      &lt;/p&gt;

      &lt;pre&gt;
      class Grid {
      private Cell[][] cells;
      &#x2026;

      public void addCell(int x, int y, Cell cell) {
      cells[x][y] = cell;
      }

      public Cell fetchCell(int x, int y) {
      return cells[x][y];
      }

      public boolean isEmpty(int x, int y) {
      return cells[x][y] == null;
      }
      }
      &lt;/pre&gt;

      &lt;p&gt;
      As part of refactoring, we detect that &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are a &lt;a href="http://martinfowler.com/bliki/DataClump.html"&gt;DataClump&lt;/a&gt;
      and decide to introduce a new &lt;code&gt;Coordinate&lt;/code&gt; class. However, this will be a
      backwards-incompatible change to clients of the &lt;code&gt;Grid&lt;/code&gt; class. Instead
      of changing all the methods and the internal data structure at once, we decide to apply the
      parallel change pattern.
      &lt;/p&gt;

      &lt;p&gt;
      In the &lt;i&gt;expand&lt;/i&gt; phase you augment the interface to support both the old and the new
      versions. In our example, we introduce a new &lt;code&gt;Map&amp;lt;Coordinate, Cell&amp;gt;&lt;/code&gt; data
      structure and the new methods that can receive &lt;code&gt;Coordinate&lt;/code&gt; instances without
      changing the existing code.
      &lt;/p&gt;

      &lt;pre&gt;
      class Grid {
      private Cell[][] cells;
      private Map&amp;lt;Coordinate, Cell&amp;gt; newCells;
      &#x2026;

      public void addCell(int x, int y, Cell cell) {
      cells[x][y] = cell;
      }

      public void addCell(Coordinate coordinate, Cell cell) {
      newCells.put(coordinate, cell);
      }

      public Cell fetchCell(int x, int y) {
      return cells[x][y];
      }

      public Cell fetchCell(Coordinate coordinate) {
      return newCells.get(coordinate);
      }

      public boolean isEmpty(int x, int y) {
      return cells[x][y] == null;
      }

      public boolean isEmpty(Coordinate coordinate) {
      return !newCells.containsKey(coordinate);
      }
      }
      &lt;/pre&gt;

      &lt;p&gt;
      Existing clients will continue to consume the old version, and the new changes can be introduced
      incrementally without affecting them.
      &lt;/p&gt;

      &lt;p&gt;&lt;img src="http://martinfowler.com/bliki/images/parallelChange/expand.png"/&gt;&lt;/p&gt;

      &lt;p&gt;
      During the &lt;i&gt;migrate&lt;/i&gt; phase you update all clients using the old version to the new
      version. This can be done incrementally and, in the case of external clients, this will be the
      longest phase.
      &lt;/p&gt;

      &lt;p&gt;&lt;img src="http://martinfowler.com/bliki/images/parallelChange/migrate.png"/&gt;&lt;/p&gt;

      &lt;p&gt;
      Once all usages have been migrated to the new version, you perform the &lt;i&gt;contract&lt;/i&gt; phase to
      remove the old version and change the interface so that it only supports the new version.
      &lt;/p&gt;

      &lt;p&gt;&lt;img src="http://martinfowler.com/bliki/images/parallelChange/contract.png"/&gt;&lt;/p&gt;

      &lt;p&gt;
      In our example, since the internal two-dimentional array is not used anymore after the old
      methods have been deleted, we can safely remove that data structure and rename &lt;code&gt;newCells&lt;/code&gt;
      back to &lt;code&gt;cells&lt;/code&gt;.
      &lt;/p&gt;

      &lt;pre&gt;
      class Grid {
      private Map&amp;lt;Coordinate, Cell&amp;gt; cells;
      &#x2026;

      public void addCell(Coordinate coordinate, Cell cell) {
      cells.put(coordinate, cell);
      }

      public Cell fetchCell(Coordinate coordinate) {
      return cells.get(coordinate);
      }

      public boolean isEmpty(Coordinate coordinate) {
      return !cells.containsKey(coordinate);
      }
      }
      &lt;/pre&gt;

      &lt;p&gt;
      This pattern is particularly useful when practicing &lt;a href="http://martinfowler.com/bliki/ContinuousDelivery.html"&gt;ContinuousDelivery&lt;/a&gt; because it
      allows your code to be released in any of these three phases. It also lowers the risk of change
      by allowing you to migrate clients and to test the new version incrementally.
      &lt;/p&gt;

      &lt;p&gt;
      Even when you have control over all usages of the interface, following this pattern is still
      useful because it prevents you from spreading breakage across the entire codebase all at once.
      The migrate phase can be short, but it is an alternative to leaning on the compiler to find all
      the usages that need to be fixed.
      &lt;/p&gt;

      &lt;p&gt;Some example applications of this pattern are:&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;&lt;i&gt;Refactoring&lt;/i&gt;: when changing a method or function signature, especially when doing a
      &lt;a href="http://martinfowler.com/articles/workflowsOfRefactoring/#long-term"&gt;Long Term
      Refactoring&lt;/a&gt; or when changing a &lt;a href="http://martinfowler.com/bliki/PublishedInterface.html"&gt;PublishedInterface&lt;/a&gt;. A variant implementation of
      this pattern during a refactoring is to implement the old method in terms of the new API and
      use &lt;a href="http://refactoring.com/catalog/inlineMethod.html"&gt;Inline Method&lt;/a&gt; to update
      all usages at once. Delegating the old method to the new method is also a way to break the
      migrate phase into smaller and safer steps, allowing you to change the internal implementation
      first before changing the exposed API to clients. This is useful when the migrate phase is longer
      so you don't have to maintain two separate implementations.
      &lt;/li&gt;

      &lt;li&gt;&lt;i&gt;Database refactoring&lt;/i&gt;: this is a key component to
      &lt;a href="http://martinfowler.com/articles/evodb.html"&gt;evolutionary database design&lt;/a&gt;. Most
      database refactorings follow the parallel change pattern, where the migrate phase is the
      transition period between the original and the new schema, until all database access code has
      been updated to work with the new schema.
      &lt;/li&gt;

      &lt;li&gt;&lt;i&gt;Deployments&lt;/i&gt;: deployment techniques such as canary
      releases  and
      &lt;a href="http://martinfowler.com/bliki/BlueGreenDeployment.html"&gt;BlueGreenDeployment&lt;/a&gt; are applications of the parallel change pattern where you
      have both old and new versions of the code deployed side by side, and you incrementally
      migrate users from one version to another, therefore lowering the risk of change. In a
      &lt;a href="http://martinfowler.com/articles/microservices.html"&gt;microservices&lt;/a&gt; architecture,
      it can also remove the need for complex deployment orchestration of different services due to
      version dependencies between them.
      &lt;/li&gt;

      &lt;li&gt;&lt;i&gt;Remote API evolution&lt;/i&gt;: parallel change can be used to evolve a remote API (e.g.
      a REST web service) when you can't make the change in a backwards compatible manner. This
      is an alternative to using an explicit version in the exposed API. You can apply the
      pattern when making a change to the payload accepted or returned by the API on a given
      endpoint, or you can introduce a new endpoint to distinguish between the old and new
      versions. In the case of using parallel change in the same endpoint, following
      &lt;a href="http://en.wikipedia.org/wiki/Robustness_principle"&gt;Postel's Law&lt;/a&gt; is a good
      technique to avoid consumers breaking when the payload is expanded.
      &lt;/li&gt;
      &lt;/ul&gt;

      &lt;p&gt;
      During the migrate phase, a &lt;a href="http://martinfowler.com/bliki/FeatureToggle.html"&gt;FeatureToggle&lt;/a&gt; can be used to control which version of
      the interface is used. A feature toggle on the client side allows it to be forward-compatible
      with the new version of the supplier, which decouples the release of the supplier from the
      client.
      &lt;/p&gt;

      &lt;p&gt;
      When implementing &lt;a href="http://martinfowler.com/bliki/BranchByAbstraction.html"&gt;BranchByAbstraction&lt;/a&gt;, parallel change is a good way to introduce
      the abstraction layer between the clients and the supplier. It is also an alternative way to
      perform a large-scale change without introducing the abstraction layer as a seam for
      replacement on the supplier side. However, when you have a large number of clients, using branch
      by abstraction is a better strategy to narrow the surface of change and reduce confusion during
      the migrate phase.
      &lt;/p&gt;

      &lt;p&gt;
      The downside of using parallel change is that during the migrate phase the supplier has to
      support two different versions, and clients could get confused about which version is new
      versus old. If the contract phase is not executed you might end up in a worse state than you
      started, therefore you need discipline to finish the transition successfully. Adding deprecation
      notes, documentation or TODO notes might help inform clients and other developers working on
      the same codebase about which version is in the process of being replaced.
      &lt;/p&gt;

      &lt;div class="furtherReading"&gt;
      &lt;h2&gt;Further Reading&lt;/h2&gt;

      &lt;p&gt;
      Industrial Logic's
      &lt;a href="https://elearning.industriallogic.com/gh/submit?Action=AlbumContentsAction&amp;amp;album=foundations&amp;amp;devLanguage=Java"&gt;
      refactoring album&lt;/a&gt; documents and demonstrates an example of performing a parallel change.
      &lt;/p&gt;
      &lt;/div&gt;

      &lt;div class="acknowledgements"&gt;
      &lt;h2&gt;Acknowledgements&lt;/h2&gt;

      &lt;p&gt;
      This technique was first documented as a refactoring strategy by Joshua Kerievsky in 2006
      and presented in his talk &lt;a href="http://www.infoq.com/presentations/The-Limited-Red-Society"&gt;The
      Limited Red Society&lt;/a&gt; presented at the Lean Software and Systems Conference in 2010.
      &lt;/p&gt;

      &lt;p&gt;
      Thanks to Joshua Kerievsky for giving feedback on the first draft of this post. Also thanks to
      many ThoughtWorks colleagues for their feedback: Greg Dutcher, Badrinath Janakiraman, Praful Todkar,
      Rick Carragher, Filipe Esperandio, Jason Yip, Tushar Madhukar, Pete Hodgson, and Kief Morris.
      &lt;/p&gt;
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/ParallelChange.html&amp;amp;text=Bliki: ParallelChange" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/ParallelChange.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/ParallelChange.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Audio version of first "Is TDD Dead" Hangout</title>
    <link href="http://martinfowler.com/snips/201405121609.html"/>
    <updated>2014-05-12T16:09:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-12:Audio-version-of-first--Is-TDD-Dead--Hangout</id>
    <content type="html">
      &lt;p&gt;Here is &lt;a href="http://assets.thoughtworks.com/podcast/is-tdd-dead-episode-1-09-may-2014.mp3"&gt;an audio version of our first hangout&lt;/a&gt;, for those of you who, like me, can&#x2019;t stand watching video. It&#x2019;s a raw translation of the video&#x2019;s audio. We may try to do something more refined later, such as sorting out a podcast feed, but it&#x2019;s not something we&#x2019;ve done before so it may take a while for us to get around to it. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Second "Is TDD Dead" Hangout with Kent Beck and David Heinemeier Hansson</title>
    <link href="https://plus.google.com/u/0/events/couv627cogaue9dahj08feoa6b8"/>
    <updated>2014-05-12T15:31:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-12:Second--Is-TDD-Dead--Hangout-with-Kent-Beck-and-David-Heinemeier-Hansson</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'https://plus.google.com/u/0/events/couv627cogaue9dahj08feoa6b8'&gt;&lt;img src = 'http://martinfowler.com/snips/hangout-kb-dhh-mf.png' width = '80' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;We&#x2019;ve sorted out the time and &lt;a href="https://plus.google.com/u/0/events/couv627cogaue9dahj08feoa6b8"&gt;link for the second part of our hangout &lt;/a&gt;on &#x201C;Is TDD Dead&#x201D;. It will be on Friday May 16 at 11:00 Eastern time. As before the video will be posted on YouTube shortly afterwards. Again it will be about 30 minutes long, with me playing Time Cop to shut us up. The lead-in from last time is to discuss David&#x2019;s notion of &lt;a href="http://david.heinemeierhansson.com/2014/test-induced-design-damage.html"&gt;test-induced design damage&lt;/a&gt;. David hopes to prepare an example for the base for our discussion, if so we&#x2019;ll let you know via this feed and our twitter stream so you can do the pre-reading.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Goto Fail, Heartbleed, and Unit Testing Culture</title>
    <link href="http://martinfowler.com/articles/testing-culture.html"/>
    <updated>2014-05-12T09:24:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-12:Goto-Fail--Heartbleed--and-Unit-Testing-Culture</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/testing-culture.html'&gt;&lt;img src = 'http://martinfowler.com/articles/testing-culture/msb.jpg' width = '80px;' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The &#x201C;goto fail&#x201D; and heartbleed bugs have shaken our confidence in the security and privacy of the internet. &lt;a href="https://plus.google.com/+MikeBland/posts"&gt;Mike Bland&lt;/a&gt; believes that a culture of unit testing would greatly reduce the chances that such bugs would escape into production. As part of a group that spread such a culture inside Google, he believes that it&#x2019;s important for software teams to take on such a culture. He is writing an article that will look at how unit testing could catch the &#x201C;goto fail&#x201D; and heartbleed bugs, the costs and benefits of a testing culture, and the experience of instilling this culture at Google. &lt;a href="http://martinfowler.com/articles/testing-culture.html"&gt;This first installment looks in detail at the &#x201C;goto fail&#x201D; bug&lt;/a&gt; and how a testing culture would examine that code.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 65</title>
    <link href="http://martinfowler.com/photos/65.html"/>
    <updated>2014-05-10T10:51:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-10:photostream-65</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/65.html'&gt;&lt;img src = 'http://martinfowler.com/photos/65.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Hallerbos, Belgium&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Video of First "Is TDD Dead" hangout on YouTube</title>
    <link href="https://www.youtube.com/watch?v=z9quxZsLcfo"/>
    <updated>2014-05-09T15:52:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-09:Video-of-First--Is-TDD-Dead--hangout-on-YouTube</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'https://www.youtube.com/watch?v=z9quxZsLcfo'&gt;&lt;img src = 'http://martinfowler.com/snips/isTDDDead-hangout1.png' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;We&#x2019;ve finished the first of the &#x201C;Is TDD Dead?&#x201D; conversations between Kent Beck, David Heinemeier Hansson (DHH) and myself which &lt;a href="https://www.youtube.com/watch?v=z9quxZsLcfo"&gt;you can watch on YouTube&lt;/a&gt;. We intend to do another hangout next Friday (May 16) at the same time (we&#x2019;ll post the details early next week). We&#x2019;re using the twitter hashtag &lt;a href="https://twitter.com/search?q=%23isTddDead&amp;amp;src=hash"&gt;#isTDDDead&lt;/a&gt; for twitter discussions on the topic. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Hangout on TDD with Kent Beck and David Heinemeier Hansson</title>
    <link href="http://martinfowler.com/snips/201405071053.html"/>
    <updated>2014-05-07T11:53:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-07:Hangout-on-TDD-with-Kent-Beck-and-David-Heinemeier-Hansson</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201405071053.html'&gt;&lt;img src = 'http://martinfowler.com/snips/hangout-kb-dhh-mf.png' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;As we&#x2019;ve announced via Twitter, Kent Beck, David Heinemeier Hansson (DHH) and I will be doing a &lt;a href="https://plus.google.com/events/ci2g23mk0lh9too9bgbp3rbut0k"&gt;series of video hangouts to discuss TDD&lt;/a&gt;, and the trade-offs around testing and architecture. The first one is on Friday May 9, at 11:00 Eastern time. The hangout will be around 30 minutes and will be recorded so you can watch it later. We&#x2019;ll also release an audio version via a podcast stream for those like me who hate watching videos.&lt;/p&gt;

      &lt;p&gt;The genesis of this is a couple of conversations between us that happened over the internet after &lt;a href="https://www.youtube.com/watch?v=9LfmrkyP81M"&gt;DHH&#x2019;s RailsConf keynote&lt;/a&gt;. We found the conversations really interesting so Kent suggested that we should have some more of these, and make them available to the wider internet. We&#x2019;ve done very little organisation for these -  no further than partial outline - so we&#x2019;ll be sorting out our direction as we go. &lt;/p&gt;

      &lt;p&gt;Since we announced it, there&#x2019;s been many suggestions to get more people involved, particularly Bob Martin (Uncle Bob) who has been very active in the post-RailsConf debate. We&#x2019;d prefer to stick with just the three of us, because adding extra people to the mix usually changes the chemistry of a conversation significantly. We&#x2019;re sure that if these work well there will be more hangouts with different mixes of people in the future.&lt;/p&gt;

      &lt;p&gt;We should also say that the conversation may not live up to many people&#x2019;s expectations - at least judging by many of the tweets we&#x2019;ve seen. Many people speak of looking forward to a &#x201C;death match&#x201D; fight between us. But the whole reason we&#x2019;re doing this is that our conversations have taken a very thoughtful nature. We hope to be witty and entertaining, but we are more interested in exploring these topics in a way that expands our understanding of each others&#x2019; ideas.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: UnitTest</title>
    <link href="http://martinfowler.com/bliki/UnitTest.html"/>
    <updated>2014-05-05T09:41:00-04:00</updated>
    <id>http://martinfowler.com/bliki/UnitTest.html</id>
    <category term="bliki"/>
    <content type="html">
      &lt;p&gt;Unit testing is often talked about in software development, and
      is a term that I've been familiar with during my whole time writing
      programs. Like most software development terminology, however, it's
      very ill-defined, and I see confusion can often occur when people
      think that it's more tightly defined than it actually is.&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/unitTest/sketch.png"/&gt;
      &lt;p&gt;Although I'd done plenty of unit testing before, my definitive
      exposure was when I started working with Kent Beck and used the &lt;a href="http://martinfowler.com/bliki/Xunit.html"&gt;Xunit&lt;/a&gt;
      family of unit testing tools. (Indeed I sometimes think a good term
      for this style of testing might be "xunit testing.") Unit testing
      also became a signature activity of &lt;a href="http://martinfowler.com/bliki/ExtremeProgramming.html"&gt;ExtremeProgramming&lt;/a&gt; (XP), and led
      quickly to &lt;a href="http://martinfowler.com/bliki/TestDrivenDevelopment.html"&gt;TestDrivenDevelopment&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;There were definitional concerns about XP's use
      of unit testing right from the early days. I have a distinct memory
      of a discussion on a usenet discussion group where us XPers were
      berated by a testing expert for misusing the term "unit test." We
      asked him for his definition and he replied with something like "in
      the morning of my training course I cover 24 different definitions of
      unit test."&lt;/p&gt;

      &lt;p&gt;Despite the variations, there are some common elements. Firstly
      there is a notion that unit tests are low-level, focusing on a small
      part of the software system. Secondly unit tests are usually written
      these days by the programmers themselves using their regular tools -
      the only difference being the use of some sort of unit testing
      framework &lt;a href="#footnote-dev-write"&gt;[1]&lt;/a&gt;. Thirdly unit tests are
      expected to be significantly faster than other kinds of tests. &lt;/p&gt;

      &lt;p&gt;So there's some common elements, but there are also differences.
      One difference is what people consider to be a &lt;i&gt;unit&lt;/i&gt;.
      Object-oriented design tends to treat a class as the unit,
      procedural or functional approaches might consider a single function
      as a unit. But really it's a situational thing - the team decides
      what makes sense to be a unit for the purposes of their
      understanding of the system and its testing. Although I start with
      the notion of the unit being a class, I often take a bunch of
      closely related classes and treat them as a single unit. Rarely I
      might take a subset of methods in a class as a unit. However you
      define it doesn't really matter.&lt;/p&gt;

      &lt;div id="CollaboratorIsolation"&gt;&lt;hr class="topSection"/&gt;
      &lt;h2&gt;Collaborator Isolation&lt;/h2&gt;

      &lt;p&gt;A more important distinction is whether the unit you're testing
      should be isolated from its collaborators. Imagine you're testing
      an order class's price method. The price method needs to invoke
      some functions on the product and customer classes. If you follow
      the principle of collaborator isolation you don't want to use the
      real product or customer classes here, because a fault in the
      customer class would cause the order class's tests to fail.
      Instead you use &lt;a href="http://martinfowler.com/bliki/TestDouble.html"&gt;TestDoubles&lt;/a&gt; for the collaborators. &lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/unitTest/isolate.png"/&gt;
      &lt;p&gt;But not all unit testers use this isolation. Indeed when xunit
      testing began in the 90's we made no attempt to isolate unless
      communicating with the collaborators was awkward (such as a remote
      credit card verification system). We didn't find it difficult to
      track down the actual fault, even if it caused neighboring tests
      to fail. So we felt isolation wasn't an issue in practice.&lt;/p&gt;

      &lt;p&gt;Indeed this lack of isolation was one of
      the reasons we were criticized for our use of the term "unit
      testing". I think that the term "unit testing" is appropriate because
      these tests are tests of the behavior of a single unit. We write
      the tests assuming everything other than that unit is working
      correctly.&lt;/p&gt;

      &lt;p&gt;As xunit testing became more popular in the 2000's the notion of
      isolation came back, at least for some people. We saw the rise of
      Mock Objects and frameworks to support mocking. Two schools of
      xunit testing developed, which &lt;a href="/articles/mocksArentStubs.html"&gt;I call the classic and mockist
      styles&lt;/a&gt;. Classic xunit testers don't worry about isolation but
      mockists do. Today I know and respect xunit testers of both styles
      (personally I've stayed with classic style). &lt;/p&gt;

      &lt;p&gt;Even a classic tester like myself uses test doubles when there's an
      awkward collaboration. They are invaluable to remove
      &lt;a href="/articles/nonDeterminism.html#RemoteServices"&gt;non-determinism
      when talking to remote services&lt;/a&gt;. Indeed some classicist xunit testers
      also argue that any collaboration with external resources, such as
      a database or filesystem, should use doubles. Partly this is due to
      non-determinism risk, partly due to speed. While I think this is a
      useful guideline, I don't treat using doubles for external resources
      as an absolute rule. If talking to the resource is stable and fast
      enough for you then there's no reason not to do it in your unit
      tests.&lt;/p&gt;

      &lt;p&gt;Recently Jay Fields &lt;a href="https://leanpub.com/wewut"&gt;came up with
      some useful terminology here&lt;/a&gt;, he defines &lt;b&gt;solitary&lt;/b&gt;
      tests as those that use collaborator isolation and
      &lt;b&gt;sociable&lt;/b&gt; test for those that don't. While these are
      related to the classicist/mockist distinction, in that classic
      TDDers prefer sociable tests and mockist TDDers prefer solitary
      tests, there is more to the classicist/mockist difference than their attitude to
      collaborator isolation. &lt;/p&gt;
      &lt;/div&gt;

      &lt;div id="Speed"&gt;&lt;hr class="topSection"/&gt;
      &lt;h2&gt;Speed&lt;/h2&gt;

      &lt;p&gt;The common properties of unit tests &#x2014; small scope, done by the
      programmer herself, and fast &#x2014; mean that they can be run very
      frequently when programming. Indeed this is one of the key
      characteristics of &lt;a href="http://martinfowler.com/bliki/SelfTestingCode.html"&gt;SelfTestingCode&lt;/a&gt;. In this situation
      programmers run unit tests after any change to the code. I may run unit
      tests several times a minute, any time I have code that's worth
      compiling. I do this because should I accidentally break something,
      I want to know right away. If I've introduced the defect with my
      last change it's much easier for me to spot the bug because I don't
      have far to look.&lt;/p&gt;

      &lt;p&gt;When you run unit tests so frequently, you may not run all
      the unit tests. Usually you only need to run those tests that are
      operating over the part of the code you're currently working on. As
      usual, you trade off the depth of testing with how long it takes to
      run the test suite. I'll call this suite the &lt;b&gt;compile
      suite&lt;/b&gt;, since it's what I run whenever I think of compiling -
      even in an interpreted language like Ruby.&lt;/p&gt;

      &lt;p&gt;If you are using Continuous Integration you should run a test
      suite as part of it. It's common for this suite, which I call the
      &lt;b&gt;commit suite&lt;/b&gt;, to include all the unit tests. It may
      also include a few &lt;a href="http://martinfowler.com/bliki/BroadStackTest.html"&gt;BroadStackTests&lt;/a&gt;. As a programmer you
      should run this commit suite several times a day, certainly before
      any shared commit to version control, but also at any other time you
      have the opportunity - when you take a break, or have to go to a
      meeting. The faster the commit suite is, the more often you can run
      it. &lt;a href="#footnote-pipeline"&gt;[2]&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;Different people have different standards for the speed of unit tests
      and of their test suites.  &lt;a href="http://david.heinemeierhansson.com/2014/slow-database-test-fallacy.html"&gt;David
      Heinemeier Hansson&lt;/a&gt; is happy with a compile suite that takes a few
      seconds and a commit suite that takes a few minutes. &lt;a href="https://www.destroyallsoftware.com/blog/2014/tdd-straw-men-and-rhetoric"&gt;Gary
      Bernhardt&lt;/a&gt; finds that unbearably slow, insisting on a compile suite
      of around 300ms and &lt;a href="http://dan.bodar.com/2012/02/28/crazy-fast-build-times-or-when-10-seconds-starts-to-make-you-nervous/"&gt;Dan Bodart&lt;/a&gt; doesn't want his commit suite to be
      more than ten seconds&lt;/p&gt;

      &lt;p&gt;I don't think there's an absolute answer here. Personally I don't
      notice a difference between a compile suite that's sub-second or a
      few seconds. I like Kent Beck's rule of thumb that the commit suite
      should run in no more than ten minutes. But the real point is that
      your test suites should run fast enough that you're not discouraged
      from running them frequently enough. And frequently enough is so
      that when they detect a bug there's a sufficiently small amount of
      work to look through that you can find it quickly.&lt;/p&gt;
      &lt;/div&gt;

      &lt;div class="footnote-list"&gt;
      &lt;h2&gt;Notes&lt;/h2&gt;

      &lt;div class="footnote-list-item" id="footnote-dev-write"&gt;
      &lt;p&gt;&lt;span class="num"&gt;1: &lt;/span&gt;
      I say "these days" because this is certainly something
      that has changed due to XP. In the turn-of-the-century debates,
      XPers were strongly criticized for this as the common view was that
      programmers should never test their own code. Some shops had
      specialized unit testers whose entire job would be to write unit
      tests for code written earlier by developers. The reasons for this
      included: people having a conceptual blindness to testing their own
      code, programmers not being good testers, and it was good to have a
      adversarial relationship between developers and testers. The XPer
      view was that programmers could learn to be effective testers, at
      least at the unit level, and that if you involved a separate group
      the feedback loop that tests gave you would be hopelessly slow.
      Xunit played an essential role here, it was designed specifically to
      minimize the friction for programmers writing tests.
      &lt;/p&gt;
      &lt;/div&gt;

      &lt;div class="footnote-list-item" id="footnote-pipeline"&gt;
      &lt;p&gt;&lt;span class="num"&gt;2: &lt;/span&gt;
      If you have tests that are useful, but take longer than you want
      the commit suite to run, then you should build a &lt;a href="http://martinfowler.com/bliki/DeploymentPipeline.html"&gt;DeploymentPipeline&lt;/a&gt;
      and put the slower tests in a later stage of the pipeline.
      &lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="appendix"&gt;
      &lt;p&gt;Updated on Oct 24 2014 to include the mention of Field's
      sociable/solitary vocabulary.&lt;/p&gt;
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/UnitTest.html&amp;amp;text=Bliki: UnitTest" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/UnitTest.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/UnitTest.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 64</title>
    <link href="http://martinfowler.com/photos/64.html"/>
    <updated>2014-05-03T11:12:00-04:00</updated>
    <id>tag:martinfowler.com,2014-05-03:photostream-64</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/64.html'&gt;&lt;img src = 'http://martinfowler.com/photos/64.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Path of the Gods, Italy&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: SelfTestingCode</title>
    <link href="http://martinfowler.com/bliki/SelfTestingCode.html"/>
    <updated>2014-05-01T09:50:00-04:00</updated>
    <id>http://martinfowler.com/bliki/SelfTestingCode.html</id>
    <category term="bliki"/>
    <content type="html">
      &lt;p&gt;Self-Testing Code is the name I used in &lt;a href="/books/refactoring.html"&gt;Refactoring&lt;/a&gt; to refer to the practice
      of writing comprehensive automated tests in conjunction with the
      functional software. When done well this allows you to invoke a
      single command that executes the tests - and you are confident that
      these tests will illuminate any bugs hiding in your code.&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/selfTestingCode/sketch.png"/&gt;
      &lt;p&gt;I first ran into the thought at an OOPSLA conference listening to
      &lt;a href="http://www.davethomas.net"&gt;"Beddara" Dave Thomas &lt;/a&gt; say
      that every object should be able to test itself. I suddenly had the
      vision of typing a command and having my whole software system do a
      self-test, much in the way that you used to see hardware memory tests when
      booting. Soon I was exploring this approach in my own projects and being
      very happy with the benefits. A couple of years later I did some
      work with Kent Beck and discovered he did the same thing, but in a
      much more sophisticated way than I did. This was shortly before Kent
      (and Erich Gamma) produced JUnit - a tool that became the
      underpinning of much of thinking and practice of self-testing code
      (and its sister: &lt;a href="http://martinfowler.com/bliki/TestDrivenDevelopment.html"&gt;TestDrivenDevelopment&lt;/a&gt;).&lt;/p&gt;

      &lt;p&gt;You have self-testing code when you can run a series of automated
      tests against the code base and be confident that, should the tests
      pass, your code is free of any substantial defects. One way I think
      of it is that as well as building your software system, you
      simultaneously build a bug detector that's able to detect any faults
      inside the system. Should anyone in the team accidentally introduce
      a bug, the detector goes off. By running the test suite frequently,
      at least several times a day, you're able to detect such bugs soon
      after they are introduced, so you can just look in the recent
      changes, which makes it &lt;i&gt;much&lt;/i&gt; easier to find them. No
      programming episode is complete without working code and the tests
      to keep it working. Our attitude is to assume that any non-trivial
      code without tests is broken.&lt;/p&gt;

      &lt;p&gt;Self-testing code is a key part of &lt;a href="/articles/continuousIntegration.html"&gt;Continuous Integration&lt;/a&gt;,
      indeed I say that you aren't really doing continuous integration
      unless you have self-testing code. As a pillar of Continuous
      Integration, it is also a necessary part of &lt;a href="/delivery.html"&gt;Continuous Delivery&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;One obvious benefit of self-testing code is that it can
      drastically reduce the number of bugs that get into production
      software. At the heart of this is building up a testing culture that
      where developers are naturally thinking about writing code and tests
      together.&lt;/p&gt;

      &lt;p&gt;But the biggest benefit isn't about merely avoiding production
      bugs, it's about the confidence that you get to make changes to the
      system. Old codebases are often terrifying places, where developers
      fear to change working code. Even fixing a bug can be dangerous,
      because you can create more bugs than you fix. In such circumstances
      not just is it horribly slow to add more features, you also end up
      afraid to refactor the system, thus increasing &lt;a href="http://martinfowler.com/bliki/TechnicalDebt.html"&gt;TechnicalDebt&lt;/a&gt;, and
      getting into a steadily worsening spiral where every change makes
      people more fearful of more change.&lt;/p&gt;

      &lt;p&gt;With self-testing code, it's a different picture. Here people are
      confident that fixing small problems to clean the code can be done
      safely, because should you make a mistake (or rather "when I make a
      mistake")  the bug detector will go off and you can quickly recover
      and continue. With that safety net, you can spend time keeping the
      code in good shape, and end up in a virtuous spiral where you get
      steadily faster at adding new features.&lt;/p&gt;

      &lt;p&gt;These kinds of benefits are often talked about with respect to
      &lt;a href="http://martinfowler.com/bliki/TestDrivenDevelopment.html"&gt;TestDrivenDevelopment&lt;/a&gt; (TDD), but it's useful to separate
      the concepts of TDD and self-testing code. I think of TDD as a
      particular practice whose benefits include producing self-testing
      code. It's a great way to do it, and TDD is a technique I'm a big
      fan of. But you can also produce self-testing code by writing tests
      after writing code - although you can't consider your work to be
      done until you have the tests (and they pass). The important point
      of self-testing code is that you have the tests, not how you got to
      them.&lt;/p&gt;

      &lt;p&gt;Increasingly these days we're seeing another dimension to
      self-testing, with more emphasis put on monitoring in production. &lt;a href="/delivery.html"&gt;Continuous Delivery&lt;/a&gt; allows you to
      quickly deploy new versions of software into production. In this
      situation teams put more effort into spotting bugs once
      in production and rapidly fixing them by either deploying a new
      fixed version or rolling back to the last-known-good version. &lt;/p&gt;

      &lt;div class="appendix"&gt;
      This entry was originally published (in a much smaller form) on
      May 5th 2005.
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/SelfTestingCode.html&amp;amp;text=Bliki: SelfTestingCode" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/SelfTestingCode.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/SelfTestingCode.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Keynote Talks from OOP</title>
    <link href="http://martinfowler.com/snips/201404230904.html"/>
    <updated>2014-04-23T09:04:00-04:00</updated>
    <id>tag:martinfowler.com,2014-04-23:Keynote-Talks-from-OOP</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201404230904.html'&gt;&lt;img src = 'http://martinfowler.com/snips/oop-refact.png' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Earlier this year I gave a keynote at the OOP conference in Munich. I gave two short talks (about 25 minutes each), both of which are now available on YouTube. The first talk looks at the topic of &lt;a href="https://www.youtube.com/watch?v=vqEg37e4Mkw"&gt;Workflows of Refactoring&lt;/a&gt;, where I explore various ways in which people can (but often don&#x2019;t) use refactoring in their work. In the &lt;a href="https://www.youtube.com/watch?v=Z8aECe4lp44"&gt;second talk&lt;/a&gt; I begin with my concern about the biggest aspect missing from the spread of agile and go on to explore the relationship between programmers, analysts, users and the wider society. (I have a &lt;a href="http://martinfowler.com/tags/talk%20videos.html"&gt;list of all videos of my talks&lt;/a&gt; and a &lt;a href="https://www.youtube.com/playlist?list=PLJb2p0qX8R_r3crCVAxp57dvoqGGjD3yD"&gt;YouTube playlist&lt;/a&gt; for those on YouTube.)&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 63</title>
    <link href="http://martinfowler.com/photos/63.html"/>
    <updated>2014-04-04T17:59:00-04:00</updated>
    <id>tag:martinfowler.com,2014-04-04:photostream-63</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/63.html'&gt;&lt;img src = 'http://martinfowler.com/photos/63.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Heronswood, Mornington Peninsula, Victoria, Australia&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: ReportingDatabase</title>
    <link href="http://martinfowler.com/bliki/ReportingDatabase.html"/>
    <updated>2014-04-02T14:23:00-04:00</updated>
    <id>http://martinfowler.com/bliki/ReportingDatabase.html</id>
    <category term="bliki"/>
    <content type="html">
      &lt;p&gt;Most &lt;a href="http://martinfowler.com/bliki/EnterpriseApplication.html"&gt;EnterpriseApplications&lt;/a&gt; store persistent data with a
      database. This database supports operational updates of the
      application's state, and also various reports used for decision
      support and analysis. The operational needs and the reporting needs
      are, however, often quite different - with different requirements
      from a schema and different data access patterns. When this happens
      it's often a wise idea to separate the reporting needs into a
      reporting database, which takes a copy of the essential operational data but
      represents it in a different schema.&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/reportingDatabase/reportingDatabase.png"/&gt;
      &lt;p&gt;Such a reporting database is a completely different database to
      the operational database. It may be a completely different database
      product, using &lt;a href="http://martinfowler.com/bliki/PolyglotPersistence.html"&gt;PolyglotPersistence&lt;/a&gt;. It should be
      designed around the reporting needs.&lt;/p&gt;

      &lt;p&gt;A reporting database has a number of advantages:&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;The structure of the reporting database can be specifically
      designed to make it easier to write reports. &lt;/li&gt;

      &lt;li&gt;You don't need to normalize a reporting database, because it's
      read-only. Feel free to duplicate data as much as needed to make
      queries and reporting easier.&lt;/li&gt;

      &lt;li&gt;The development team can refactor the operational database
      without needing to change the reporting database.&lt;/li&gt;

      &lt;li&gt;Queries run against the reporting database don't add to the load on
      the operational database.&lt;/li&gt;

      &lt;li&gt;You can store derived data in the database, making it easier
      to write reports that use the derived data without having to
      introduce a separate set of derivation logic.&lt;/li&gt;

      &lt;li&gt;You may have multiple reporting databases for different
      reporting needs.&lt;/li&gt;
      &lt;/ul&gt;

      &lt;p&gt;The downside to a reporting database is that its data has to be
      kept up to date. The easiest case is when you do something like use
      an overnight run to populate the reporting database. This often
      works quite well since many reporting needs work perfectly well with
      yesterday's data. If you need more timely data you can use a
      messaging system so that any changes to the operational database are
      forwarded to the reporting database. This is more complicated, but
      the data can be kept fresher. Often most reports can use slightly
      stale data and you can produce special case reports for things that
      really need to have this second's data &lt;a href="#footnote-instant"&gt;[1]&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;A variation on this is to use views. This encapsulates the
      operational data and allows you to denormalize. It doesn't allow you
      to separate the operational load from the reporting load. More
      seriously you are limited to what views can derive and you can't
      take advantage of derivations that are written in an in-memory
      programming environment.&lt;/p&gt;

      &lt;p&gt;A reporting database fits well when you have a lot of domain
      logic in a domain model or other in-memory code. The domain logic
      can be used to process updates to the operational data, but also to
      calculate derived data which to enrich the reporting database.
      &lt;/p&gt;

      &lt;div class="appendix"&gt;
      &lt;p&gt;I originally wrote this entry on April 2nd 2004. I took
      advantage of its ten-year anniversary to update the text.&lt;/p&gt;
      &lt;/div&gt;

      &lt;div class="footnote-list"&gt;
      &lt;h2&gt;Notes&lt;/h2&gt;

      &lt;div class="footnote-list-item" id="footnote-instant"&gt;
      &lt;p&gt;&lt;span class="num"&gt;1: &lt;/span&gt;
      These days the desire seems to be for near-real time analytics.
      I'm skeptical of the value of this. Often when analyzing data
      trends you don't need to react right away, and your thinking
      improves when you give it time for a proper mulling. Reacting
      too quickly leads to a form of information hysteresis, where you
      react badly to data that's changing too rapidly to get a proper
      picture of what's going on.
      &lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/ReportingDatabase.html&amp;amp;text=Bliki: ReportingDatabase" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/ReportingDatabase.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/ReportingDatabase.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Open-Sourcing ThoughtWorks Go</title>
    <link href="http://martinfowler.com/articles/go-interview.html"/>
    <updated>2014-03-25T10:52:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-25:Open-Sourcing-ThoughtWorks-Go</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/go-interview.html'&gt;&lt;img src = 'http://martinfowler.com/articles/chad.jpg' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;ThoughtWorks recently announced the open-sourcing of our product Go - which supports Continuous &lt;a href="http://martinfowler.com/delivery.html"&gt;Delivery&lt;/a&gt;. This kind of event tends to raise questions, so I organized &lt;a href="http://martinfowler.com/articles/go-interview.html"&gt;an interview with Chad Wathington&lt;/a&gt;, who is a Managing Director of ThoughtWorks Studios (our product division). He answers questions on why we did the open-sourcing, why we announced it before making the source available, about the name-clash with the go language, and our future plans for Go.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Are Microservices the Future?</title>
    <link href="http://martinfowler.com/articles/microservices.html#AreMicroservicesTheFuture"/>
    <updated>2014-03-25T09:37:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-25:Are-Microservices-the-Future-</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/microservices.html#AreMicroservicesTheFuture'&gt;&lt;img src = 'http://martinfowler.com/snips/microservices.png' width = '70' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The final installment of our article on microservices moves beyond the list of characteristics to assess the question of whether &lt;a href="http://martinfowler.com/articles/microservices.html#AreMicroservicesTheFuture"&gt;microservices should be the future of enterprise application architecture&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Microservices: Evolutionary Design</title>
    <link href="http://martinfowler.com/articles/microservices.html#EvolutionaryDesign"/>
    <updated>2014-03-24T10:17:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-24:Microservices--Evolutionary-Design</id>
    <content type="html">
      &lt;p&gt;The penultimate installment of our article on microservices looks at the last of the list of common characteristics: an &lt;a href="http://martinfowler.com/articles/microservices.html#EvolutionaryDesign"&gt;evolutionary approach to the design&lt;/a&gt; of microservice systems. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: EnterpriseApplication</title>
    <link href="http://martinfowler.com/bliki/EnterpriseApplication.html"/>
    <updated>2014-03-24T10:15:00-04:00</updated>
    <id>http://martinfowler.com/bliki/EnterpriseApplication.html</id>
    <category term="bliki"/>
    <content type="html">
      &lt;p&gt;In the early part of this century, I worked on my book &lt;a href="/books/eaa.html"&gt;Patterns
      of Enterprise Application Architecture&lt;/a&gt;. One of the problems I
      had when writing the book was how to title it, or rather what to
      call the kinds of software systems that I was writing about. I've
      always been conscious that my experience of software development has
      always been focused on one particular form of software - things like
      health care records, foreign exchange trading, payroll, and lease
      accounting. These are very different to embedded software inside
      printers, games, flight control software, or telephone switches. I
      needed a name to describe these kinds of systems and settled on the
      term "enterprise application".&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/enterpriseApplication/sketch.png"/&gt;
      &lt;p&gt;As I so often have to say, there is no formal definition for this
      term. However there are some characteristics that enterprise
      applications have in common.&lt;/p&gt;

      &lt;p&gt;Enterprise applications usually have &lt;b&gt;a lot of persistent data&lt;/b&gt;,
      usually managed by some kind of database management system. Usually
      this database is relational, but increasingly we're seeing NoSQL
      alternatives. This data will usually be longer lasting and more
      valuable than the applications that process it.&lt;/p&gt;

      &lt;p&gt;This &lt;b&gt;data is accessed and manipulated concurrently&lt;/b&gt;. The
      numbers vary a lot, in-house applications may have a few tens of
      users, but customer-facing web applications can easily have tens of
      thousands. Despite high levels of concurrency, many enterprise
      application developers don't think much about critical regions, race
      conditions and other elements of classic concurrent programming.
      Instead they build their thinking on top of transactions managed by
      databases or specialized transaction management tools.&lt;/p&gt;

      &lt;p&gt;With so much data, enterprise applications have &lt;b&gt;a lot of user
      interface screens&lt;/b&gt; to handle it. Usually the same data is
      manipulated in different ways in different contexts. Users vary from
      regular to occasional users, so the interfaces need to match
      different levels of familiarity. There is also a significant amount
      of offline (batch) processing that is easily forgotten.&lt;/p&gt;

      &lt;p&gt;Even if you are building a brand new enterprise application, you
      don't do so in isolation. Instead you'll need to &lt;b&gt;integrate with
      other enterprise applications&lt;/b&gt;. These systems are built by a wide
      range of teams, some from vendors who sell to many customers, others
      built internally just for your organization. These applications will have been written over many
      decades in a host of different technologies, some of which you'll
      have to ask your mother about. There are many
      integration mechanisms to deal with - file exchange, shared
      databases, messaging middleware. Every so often there will be an
      attempt to rationalize all this communication technology, but they
      never entirely succeed leaving behind more complexity in
      their wake.&lt;/p&gt;

      &lt;p&gt;Even when different applications access the same data there is
      considerable &lt;b&gt;conceptual dissonance&lt;/b&gt; between them, a customer may mean
      something quite different to the sales organization than it does to
      technical support. The same sounding entity has different fields in
      different contexts, or worse have fields with the same name yet
      different meanings.&lt;/p&gt;

      &lt;p&gt;And then there's so-called "business logic". When you are writing
      an operating system you strive to keep the whole thing logical and
      stive to discover and implement simplifications to keep the software
      straightforward and reliable. But business rules are given to you as
      they stand, and if you want to change them you need sixty-seven meetings and three
      vice-presidents retiring. They are usually a haphazard array of strange
      conditions that interact in surprising ways. Their insanity derives
      from a good reason, each one is a case where salesman could close a
      particular deal by offerring some special one-off condition. Do this
      a thousand times and you have the &lt;b&gt;complex business "illogic"&lt;/b&gt; that lies
      in the heart of many enterprise applications.&lt;/p&gt;

      &lt;p&gt;Enterprise applications can be large or small. Often discussion
      focuses on large, complex applications, but there is also a
      challenge for smaller applications that need to be built quickly.
      Big systems make a lot of noise when they go wrong, yet the
      cumulative effect of small systems can have a surprising effect on
      an enterprises's health.&lt;/p&gt;

      &lt;p&gt;Coming up with names for things is always tricky. You need to use
      a minimum number of words, and want them to trigger the right
      connotations in the readers' minds, so that you don't have to
      constantly remind them what the definition means. On the whole I've
      been reasonably happy with my choice, but since I finished the book
      the word enterprise has taken on connotations which don't quite fit
      my usage.&lt;/p&gt;

      &lt;p&gt;One problem that's emerged since the book is that "enterprise"
      now usually means a large, well-established company. People think of
      G.E. or Siemens rather than Facebook, Etsy, or a company of a
      hundred people producing custom T-shirts. But according to my
      definition above, even small start-ups rely on software that I would
      call an enterprise application. So even though the Ruby on Rails
      community has ended up using enterprise as an insult, I would call
      Ruby on Rails a framework for building enterprise applications and
      &lt;a href="https://basecamp.com"&gt;BaseCamp&lt;/a&gt; a classic example of
      an enterprise application. (Just don't tell DHH I said so or he'll
      turn me into a hood ornament.)&lt;/p&gt;

      &lt;p&gt;These connotations around "enterprise" have made me muse about
      whether we need a different term. When I was writing P of EAA my
      working title was "Information Systems Architecture", but we felt
      that "information systems" had its own undesirable connotations of
      elder technologies. I guess I could go really retro and use "data
      processing", but on the whole "enterprise application" still seems a
      better term than anything else I could come up with.&lt;/p&gt;

      &lt;div class="appendix"&gt;
      &lt;p&gt;This post is adapted from the definition of Enterprise
      Application in the introduction of &lt;a href="/books/eaa.html"&gt;P of EAA.&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/EnterpriseApplication.html&amp;amp;text=Bliki: EnterpriseApplication" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/EnterpriseApplication.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/EnterpriseApplication.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 62</title>
    <link href="http://martinfowler.com/photos/62.html"/>
    <updated>2014-03-22T13:43:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-22:photostream-62</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/62.html'&gt;&lt;img src = 'http://martinfowler.com/photos/62.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Casa Batll&#xF3;, Barcelona&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Microservices: Infrastructure Automation</title>
    <link href="http://martinfowler.com/articles/microservices.html#InfrastructureAutomation"/>
    <updated>2014-03-19T09:50:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-19:Microservices--Infrastructure-Automation</id>
    <content type="html">
      &lt;p&gt;To get the benefits of a microservice approach you need to able to deploy code frequently, so &lt;a href="http://martinfowler.com/articles/microservices.html#InfrastructureAutomation"&gt;deployments and infrastructure management needs to be automated&lt;/a&gt;. All this services also imply more frequent partial failures, which have to be expected as part of service design.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Microservices: Decentralized Data</title>
    <link href="http://martinfowler.com/articles/microservices.html#DecentralizedDataManagement"/>
    <updated>2014-03-18T10:03:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-18:Microservices--Decentralized-Data</id>
    <content type="html">
      &lt;p&gt;In this installment we look at the particular effects of &lt;a href="http://martinfowler.com/articles/microservices.html#DecentralizedDataManagement"&gt;decentralization on data storage&lt;/a&gt;, leading to polyglot persistance and a much reduced use of transactions to manage updates..&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Microservices: Decentralized Governance</title>
    <link href="http://martinfowler.com/articles/microservices.html#DecentralizedGovernance"/>
    <updated>2014-03-17T09:13:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-17:Microservices--Decentralized-Governance</id>
    <content type="html">
      &lt;p&gt;In this installment we talk about how microservices live in a &lt;a href="http://martinfowler.com/articles/microservices.html#DecentralizedGovernance"&gt;world of decentralized governance&lt;/a&gt;. Rather than having a governance group define standards for services, services make their own decisions and are encouraged to share common solutions. With this installment we also look at the &lt;a href="http://martinfowler.com/articles/microservices.html#MicroservicesAndSoa"&gt;relationship between microservices and SOA&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 61</title>
    <link href="http://martinfowler.com/photos/61.html"/>
    <updated>2014-03-15T11:38:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-15:photostream-61</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/61.html'&gt;&lt;img src = 'http://martinfowler.com/photos/61.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Grand Canyon du Verdon, France&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Microservices part 4: Smart Endpoints and Dumb Pipes</title>
    <link href="http://martinfowler.com/articles/microservices.html#SmartEndpointsAndDumbPipes"/>
    <updated>2014-03-14T09:22:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-14:Microservices-part-4--Smart-Endpoints-and-Dumb-Pipes</id>
    <content type="html">
      &lt;p&gt;When many people think of services, they think of service collaboration organized by a smart central communication infrastructure such as an Enterprise Service Bus (ESB). Part 4 of our microservices article explains that microservice architectures take a different approach.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Microservices part 3: Products not Projects</title>
    <link href="http://martinfowler.com/articles/microservices.html#ProductsNotProjects"/>
    <updated>2014-03-13T09:33:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-13:Microservices-part-3--Products-not-Projects</id>
    <content type="html">
      &lt;p&gt;The third part of our &lt;a href="http://martinfowler.com/articles/microservices.html#ProductsNotProjects"&gt;article on microservices&lt;/a&gt; explains that microservice architectures dislike the traditional notion of projects for organizing software development.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Second Installment of Microservices</title>
    <link href="http://martinfowler.com/articles/microservices.html#OrganizedAroundBusinessCapabilities"/>
    <updated>2014-03-12T10:04:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-12:Second-Installment-of-Microservices</id>
    <content type="html">
      &lt;p&gt;We continue our &lt;a href="http://martinfowler.com/articles/microservices.html#OrganizedAroundBusinessCapabilities"&gt;article on microservices&lt;/a&gt; by looking at how the services are organized around business function rather than technological layers. We also take a swish at the question of how large a microservice should be&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: SoftwareDevelopmentAttitude</title>
    <link href="http://martinfowler.com/bliki/SoftwareDevelopmentAttitude.html"/>
    <updated>2014-03-11T09:05:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-11:Retreaded--SoftwareDevelopmentAttitude</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 08 Mar 2004&lt;/p&gt;

      &lt;p&gt;Many debates in software development are underpinned by whether
      the speaker has a &lt;a href="http://martinfowler.com/bliki/DirectingAttitude.html"&gt;DirectingAttitude&lt;/a&gt; or an
      &lt;a href="http://martinfowler.com/bliki/EnablingAttitude.html"&gt;EnablingAttitude&lt;/a&gt;. These different attitudes affect choices
      over languages, designs, tools, processes, and lots more.&lt;/p&gt;

      &lt;p&gt;Here's some examples of this dichotomy:&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;A debate a while ago triggered by Joel Spolsky's post on &lt;a href="http://www.joelonsoftware.com/items/2003/10/13.html"&gt;exceptions&lt;/a&gt;.

      He didn't like exceptions because they could be misused badly, leading
      to confusing code (directing). Bill Caputo &lt;a href="http://www.williamcaputo.com/archives/000009.html"&gt;pointed
      out&lt;/a&gt; that exceptions, when used well, make life much easier
      (enabling).&lt;/li&gt;

      &lt;li&gt;Some of the static/dynamic typing debate brings up these
      points. Some arguments in favor of static typing talk about how they
      prevent people from making certain kinds of mistake (directing) while
      dynamic typers point out how static typing restricts some useful
      idioms (enabling).&lt;/li&gt;

      &lt;li&gt;Agile processes are &lt;a href="http://martinfowler.com/bliki/PeopleOriented.html"&gt;PeopleOriented&lt;/a&gt; (enabling),
      while plan-driven methods seek to ensure that even a poor team can do
      an acceptable job (directing).&lt;/li&gt;
      &lt;/ul&gt;

      &lt;p&gt;These aren't hard-wired attitudes. Often people are directing in
      some cases and enabling in others. But I think there is a deep strain
      running through here, often a personality issue, that runs underneath
      much discussion on how we do software. (I'm very much in the enabling
      category, as if you can't tell.)&lt;/p&gt;

      &lt;p&gt;You might think that all restrictions on what a developer does
      imply a directing attitude, but it's not that simple. As an example,
      consider memory management. You can think of this as a directing
      feature: programmers can't be trusted to manage memory correctly so
      take away their ability to allocate memory. But I look at memory
      management as an enabling technology - it takes away something I don't
      &lt;i&gt;want&lt;/i&gt; to worry about, so I can concentrate better on those
      things I do care about. Steve &lt;a href="http://stevef.truemesh.com/archives/000206.html"&gt;tied this thought nicely&lt;/a&gt; onto the
      difference between problems and difficulties.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 11 Mar 2014&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/SoftwareDevelopmentAttitude.html&amp;amp;text=Bliki: SoftwareDevelopmentAttitude" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/SoftwareDevelopmentAttitude.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/SoftwareDevelopmentAttitude.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Microservices</title>
    <link href="http://martinfowler.com/articles/microservices.html"/>
    <updated>2014-03-10T09:59:00-04:00</updated>
    <id>tag:martinfowler.com,2014-03-10:Microservices</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/microservices.html'&gt;&lt;img src = 'http://martinfowler.com/snips/microservices.png' width = '70' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;There&#x2019;s been a recent growth in interest around a style of software architecture known as &#x201C;Microservices&#x201D;. To help understand and explain what all this is about I&#x2019;ve teamed up with my colleague &lt;a href="https://twitter.com/boicy"&gt;James Lewis&lt;/a&gt;, who has been an active pioneer in this style. We&#x2019;re working on writing various materials about microservices and have &lt;a href="http://martinfowler.com/articles/microservices.html"&gt;published the first installment of an article&lt;/a&gt; that explores the common characteristics we see in microservice architectures and what role they can play in software systems. With this installment we talk about how microservices think about componentization. We&#x2019;ll release further installments to explore more characteristics over the next couple of weeks.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 60</title>
    <link href="http://martinfowler.com/photos/60.html"/>
    <updated>2014-03-08T09:46:00-05:00</updated>
    <id>tag:martinfowler.com,2014-03-08:photostream-60</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/60.html'&gt;&lt;img src = 'http://martinfowler.com/photos/60.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Locorotondo, Puglia, Italy&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Bliki: CircuitBreaker</title>
    <link href="http://martinfowler.com/bliki/CircuitBreaker.html"/>
    <updated>2014-03-06T09:28:00-05:00</updated>
    <id>http://martinfowler.com/bliki/CircuitBreaker.html</id>
    <category term="bliki"/>
    <content type="html">
      &lt;p&gt;It's common for software systems to make remote calls to software
      running in different processes, probably on different machines
      across a network. One of the big differences between in-memory calls
      and remote calls is that remote calls can fail, or hang without a
      response until some timeout limit is reached. What's worse if you
      have many callers on a unresponsive supplier, then you can run out
      of critical resources leading to cascading failures across multiple
      systems. In his excellent book &lt;a href="http://www.amazon.com/gp/product/0978739213?ie=UTF8&amp;amp;tag=martinfowlerc-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0978739213"&gt;Release
      It&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=martinfowlerc-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=0321601912" width="1" height="1" border="0" alt="" style="width: 1px !important; height: 1px !important; border:none !important; margin:0px !important;"/&gt;, Michael Nygard popularized the Circuit Breaker pattern to
      prevent this kind of catastrophic cascade.&lt;/p&gt;

      &lt;p&gt;The basic idea behind the circuit breaker is very simple. You
      wrap a protected function call in a circuit breaker object, which monitors for
      failures. Once the failures reach a certain threshold, the circuit
      breaker trips, and all further calls to the circuit breaker return
      with an error, without the protected call being made at all. Usually
      you'll also want some kind of monitor alert if the circuit breaker
      trips.&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/circuitBreaker/sketch.png"/&gt;
      &lt;p&gt;Here's a simple example of this behavior in Ruby, protecting against timeouts.&lt;/p&gt;

      &lt;p&gt;I set up the breaker with a block (&lt;a href="http://martinfowler.com/bliki/Lambda.html"&gt;Lambda&lt;/a&gt;) which is the
      protected call.&lt;/p&gt;

      &lt;pre&gt;cb = CircuitBreaker.new {|arg| @supplier.func arg}&lt;/pre&gt;

      &lt;p&gt;The breaker stores the block, initializes various parameters
      (for thresholds, timeouts, and monitoring), and resets the breaker
      into its closed state.&lt;/p&gt;

      &lt;p class="code-label"&gt;class CircuitBreaker...
      &lt;/p&gt;

      &lt;pre&gt;  attr_accessor :invocation_timeout, :failure_threshold, :monitor
      def initialize &amp;amp;block
      @circuit = block
      @invocation_timeout = 0.01
      @failure_threshold = 5
      @monitor = acquire_monitor
      reset
      end
      &lt;/pre&gt;

      &lt;p&gt;Calling the circuit breaker will call the underlying block if the
      circuit is closed, but return an error if it's open&lt;/p&gt;

      &lt;pre&gt;# client code
      aCircuitBreaker.call(5)


      &lt;/pre&gt;

      &lt;p class="code-label"&gt;class CircuitBreaker...
      &lt;/p&gt;

      &lt;pre&gt;  def call args
      case state
      when :closed
      begin
      do_call args
      rescue Timeout::Error
      record_failure
      raise $!
      end
      when :open then raise CircuitBreaker::Open
      else raise "Unreachable Code"
      end
      end
      def do_call args
      result = Timeout::timeout(@invocation_timeout) do
      @circuit.call args
      end
      reset
      return result
      end
      &lt;/pre&gt;

      &lt;p&gt;Should we get a timeout, we increment the failure counter,
      successful calls reset it back to zero. &lt;/p&gt;

      &lt;p class="code-label"&gt;class CircuitBreaker...
      &lt;/p&gt;

      &lt;pre&gt;  def record_failure
      @failure_count += 1
      @monitor.alert(:open_circuit) if :open == state
      end
      def reset
      @failure_count = 0
      @monitor.alert :reset_circuit
      end
      &lt;/pre&gt;

      &lt;p&gt;I determine the state of the breaker comparing the failure count
      to the threshold&lt;/p&gt;

      &lt;p class="code-label"&gt;class CircuitBreaker...
      &lt;/p&gt;

      &lt;pre&gt;  def state
      (@failure_count &amp;gt;= @failure_threshold) ? :open : :closed
      end
      &lt;/pre&gt;

      &lt;p&gt;This simple circuit breaker avoids making the protected call when
      the circuit is open, but would need an external intervention to
      reset it when things are well again. This is a reasonable approach
      with electrical circuit breakers in buildings, but for software
      circuit breakers we can have the breaker itself detect if the
      underlying calls are working again. We can implement this
      self-resetting behavior by trying the protected call again after a
      suitable interval, and resetting the breaker should it succeed.&lt;/p&gt;
      &lt;img src="http://martinfowler.com/bliki/images/circuitBreaker/state.png"/&gt;
      &lt;p&gt;Creating this kind of breaker means adding a threshold for trying
      the reset and setting up a variable to hold the time of the last error.&lt;/p&gt;

      &lt;p class="code-label"&gt;class ResetCircuitBreaker...
      &lt;/p&gt;

      &lt;pre&gt;  def initialize &amp;amp;block
      @circuit = block
      @invocation_timeout = 0.01
      @failure_threshold = 5
      @monitor = BreakerMonitor.new
      @reset_timeout = 0.1
      reset
      end
      def reset
      @failure_count = 0
      @last_failure_time = nil
      @monitor.alert :reset_circuit
      end
      &lt;/pre&gt;

      &lt;p&gt;There is now a third state present - half open - meaning the
      circuit is ready to make a real call as trial to see if the problem
      is fixed.&lt;/p&gt;

      &lt;p class="code-label"&gt;class ResetCircuitBreaker...
      &lt;/p&gt;

      &lt;pre&gt;  def state
      case
      when (@failure_count &amp;gt;= @failure_threshold) &amp;amp;&amp;amp;
      (Time.now - @last_failure_time) &amp;gt; @reset_timeout
      :half_open
      when (@failure_count &amp;gt;= @failure_threshold)
      :open
      else
      :closed
      end
      end
      &lt;/pre&gt;

      &lt;p&gt;Asked to call in the half-open state results in a trial call,
      which will either reset the breaker if successful or restart the
      timeout if not.&lt;/p&gt;

      &lt;p class="code-label"&gt;class ResetCircuitBreaker...
      &lt;/p&gt;

      &lt;pre&gt;  def call args
      case state
      when :closed, :half_open
      begin
      do_call args
      rescue Timeout::Error
      record_failure
      raise $!
      end
      when :open
      raise CircuitBreaker::Open
      else
      raise "Unreachable"
      end
      end
      def record_failure
      @failure_count += 1
      @monitor.alert(:open_circuit) if :open == state
      @last_failure_time = Time.now
      end
      &lt;/pre&gt;

      &lt;p&gt;This example is a simple explanatory one, in practice circuit
      breakers provide a good bit more features and parameterization.
      Often they will protect against a range of errors that protected
      call could raise, such as network connection failures. Not all
      errors should trip the circuit, some should reflect normal failures
      and be dealt with as part of regular logic. &lt;/p&gt;

      &lt;p&gt;With lots of traffic, you can have problems with many calls just
      waiting for the initial timeout. Since remote calls are often slow,
      it's often a good idea to put each call on a different thread using
      a &lt;a href="http://en.wikipedia.org/wiki/Futures_and_promises"&gt;future or
      promise&lt;/a&gt; to handle the results when they come back. By drawing
      these threads from a thread pool, you can arrange for the circuit to
      break when the thread pool is exhausted.&lt;/p&gt;

      &lt;p&gt;The example shows a simple way to trip the breaker &#x2014; a count that
      resets on a successful call. A more sophisticated approach might
      look at frequency of errors, tripping once you get, say, a 50% failure
      rate. You might also have different thresholds for different errors,
      such as a threshold of 10 for timeouts but 3 for connection failures.&lt;/p&gt;

      &lt;p&gt;The example I've shown is a circuit breaker for synchronous
      calls, but circuit breakers are also useful for asynchronous
      communications. A common technique here is to put all requests on a
      queue, which the supplier consumes at its speed - a useful technique
      to avoid overloading servers. In this case the circuit breaks when
      the queue fills up.&lt;/p&gt;

      &lt;p&gt;On their own, circuit breakers help reduce resources tied up in
      operations which are likely to fail. You avoid waiting on timeouts
      for the client, and a broken circuit avoids putting load on a
      struggling server. I talk here about remote calls, which are a
      common case for circuit breakers, but they can be used in any
      situation where you want to protect parts of a system from failures
      in other parts. &lt;/p&gt;

      &lt;p&gt;Circuit breakers are a valuable place for monitoring. Any change
      in breaker state should be logged and breakers should reveal details
      of their state for deeper monitoring. Breaker behavior is often a
      good source of warnings about deeper troubles in the environment.
      Operations staff should be able to trip or reset breakers.&lt;/p&gt;

      &lt;p&gt;Breakers on their own are valuable, but clients using them need
      to react to breaker failures. As with any remote invocation you need
      to consider what to do in case of failure. Does it fail the
      operation you're carrying out, or are there workarounds you can do?
      A credit card authorization could be put on a queue to deal with
      later, failure to get some data may be mitigated by showing some
      stale data that's good enough to display.&lt;/p&gt;

      &lt;div class="furtherReading"&gt;
      &lt;h2&gt;Further Reading&lt;/h2&gt;

      &lt;p&gt;The netflix tech blog contains a lot of useful information on
      improving reliability of systems with lots of services. &lt;a href="http://techblog.netflix.com/2012/02/fault-tolerance-in-high-volume.html"&gt;Their
      Dependency Command&lt;/a&gt; talks about using circuit breakers and
      a thread pool limit. &lt;/p&gt;

      &lt;p&gt;Netflix have open-sourced &lt;a href="https://github.com/Netflix/Hystrix/"&gt;Hystrix&lt;/a&gt;, a sophisticated
      tool for dealing with latency and fault tolerance for distributed
      systems. It includes an implementation of the circuit breaker
      pattern with the thread pool limit&lt;/p&gt;

      &lt;p&gt;There are other open-source implementations of the circuit
      breaker pattern in &lt;a href="http://github.com/wsargent/circuit_breaker/tree/master"&gt;Ruby&lt;/a&gt;,
      &lt;a href="https://github.com/Comcast/jrugged"&gt;Java&lt;/a&gt;,
      &lt;a href="http://www.grails.org/plugin/circuit-breaker"&gt;Grails
      Plugin&lt;/a&gt;, &lt;a href="http://timross.wordpress.com/2008/02/10/implementing-the-circuit-breaker-pattern-in-c/"&gt;C#&lt;/a&gt;,
      &lt;a href="http://github.com/sptz45/circuit-breaker/tree/master"&gt;AspectJ&lt;/a&gt;,
      and &lt;a href="http://github.com/FaKod/Circuit-Breaker-for-Scala"&gt;Scala&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/CircuitBreaker.html&amp;amp;text=Bliki: CircuitBreaker" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/CircuitBreaker.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/CircuitBreaker.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 59</title>
    <link href="http://martinfowler.com/photos/59.html"/>
    <updated>2014-02-20T20:42:00-05:00</updated>
    <id>tag:martinfowler.com,2014-02-20:photostream-59</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/59.html'&gt;&lt;img src = 'http://martinfowler.com/photos/59.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Marblehead, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Please call your members of Congress</title>
    <link href="http://martinfowler.com/articles/201402-call-congress.html"/>
    <updated>2014-02-11T12:34:00-05:00</updated>
    <id>tag:martinfowler.com,2014-02-11:Please-call-your-members-of-Congress</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/201402-call-congress.html'&gt;&lt;img src = 'http://martinfowler.com/snips/eyecon.png' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;If you are a U.S. voter, please take a couple of minutes and add your voice to the telephone calls being made as part of the &lt;a href="https://thedaywefightback.org/"&gt;theDayWeFightBack&lt;/a&gt;. I just did this, and explain what needs to be done.&lt;/p&gt;

      &lt;p&gt;&lt;a href="http://martinfowler.com/articles/201402-call-congress.html"&gt;more&#x2026;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>The Day We Fight Back</title>
    <link href="http://martinfowler.com/snips/201402061222.html"/>
    <updated>2014-02-06T06:22:00-05:00</updated>
    <id>tag:martinfowler.com,2014-02-06:The-Day-We-Fight-Back</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201402061222.html'&gt;&lt;img src = 'http://martinfowler.com/snips/eyecon.png' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;ThoughtWorks is joining with several organizations, including the EFF, Reddit, Mozilla, and Demand Progress in a call to the international community to fight against mass surveillance. If you are concerned about the growth of mass surveillance of our internet communications, I urge you to see how you can take part. On February 11th, many websites will be adding banners to their site encouraging people to make their opinions known, particularly those in the U.S. concerned about how our government is indulging in behavior that can lead to undermining democracy. &lt;/p&gt;

      &lt;p&gt;To find out more please visit &lt;a href="https://thedaywefightback.org"&gt;https://thedaywefightback.org&lt;/a&gt; where you can find out how to join in by adding a banner to your web site. For more background on the rationale behind this day of action, read &lt;a href="https://www.eff.org/deeplinks/2014/01/february-11-day-we-fight-back-calling-international-community"&gt;this statement from the EFF&lt;/a&gt;. Take a look at &lt;a href="http://martinfowler.com/articles/bothersome-privacy.html"&gt;my explanation on why privacy is important&lt;/a&gt;, even if you think you have nothing to hide.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>New Edition of ThoughtWorks Technology Radar</title>
    <link href="http://www.thoughtworks.com/radar/"/>
    <updated>2014-01-29T11:48:00-05:00</updated>
    <id>tag:martinfowler.com,2014-01-29:New-Edition-of-ThoughtWorks-Technology-Radar</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.thoughtworks.com/radar/'&gt;&lt;img src = 'http://martinfowler.com/snips/tw-radar.png' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Roughly twice a year the ThoughtWorks &lt;a href="http://martinfowler.com/articles/radar-faq.html#tab"&gt;Technology Advisory Board (TAB)&lt;/a&gt; produces its Technology Radar - a snapshot of technologies that we find are worth tracking. We&#x2019;ve now published the  &lt;a href="http://www.thoughtworks.com/radar"&gt;January 2014 radar&lt;/a&gt;, with a nice interactive web version in addition to the usual PDFs.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Five years of Flaccid Scrum</title>
    <link href="http://martinfowler.com/snips/201401291515.html"/>
    <updated>2014-01-29T10:15:00-05:00</updated>
    <id>tag:martinfowler.com,2014-01-29:Five-years-of-Flaccid-Scrum</id>
    <content type="html">
      &lt;p&gt;Five years ago, I wrote &lt;a href="http://martinfowler.com/bliki/FlaccidScrum.html"&gt;this post&lt;/a&gt; to highlight a particular problem we&#x2019;d been seeing with project teams using Scrum but neglecting the technical practices you need for successful software development. I&#x2019;m reposting it now as the problem is still with us, indeed it seems more common as Scrum and agile has become more popular. My advice still stands - ensure you take technical practices seriously when introducing Scrum (or indeed any agile approach).&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 58</title>
    <link href="http://martinfowler.com/photos/58.html"/>
    <updated>2014-01-25T10:53:00-05:00</updated>
    <id>tag:martinfowler.com,2014-01-25:photostream-58</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/58.html'&gt;&lt;img src = 'http://martinfowler.com/photos/58.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Breakheart, Saugus, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 57</title>
    <link href="http://martinfowler.com/photos/57.html"/>
    <updated>2014-01-12T16:33:00-05:00</updated>
    <id>tag:martinfowler.com,2014-01-12:photostream-57</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/57.html'&gt;&lt;img src = 'http://martinfowler.com/photos/57.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Tent Reef, Saba&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Workflows of Refactoring</title>
    <link href="http://martinfowler.com/articles/workflowsOfRefactoring"/>
    <updated>2014-01-08T10:27:00-05:00</updated>
    <id>tag:martinfowler.com,2014-01-08:Workflows-of-Refactoring</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/workflowsOfRefactoring'&gt;&lt;img src = 'http://martinfowler.com/articles/workflowsOfRefactoring/trilby.png' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Refactoring has turned into a well-known technique, but many teams don&#x2019;t seem to use it as much as they could. In this infodeck, I explore various workflows you can use to integrate refactoring into your programming work - helped by using the &#x201C;Two Hats&#x201D; metaphor. These include TDD Refactoring, Litter-Pickup Refactoring, Comprehension Refactoring, Preparatory Refactoring, Planned Refactoring, and Long-Term Refactoring. While not any kind of exhaustive taxonomy, I hope they&#x2019;ll give teams ideas on how they can extend the use of refactoring to improve their delivery speed.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Renovation of refactoring.com</title>
    <link href="http://refactoring.com"/>
    <updated>2013-12-10T09:43:00-05:00</updated>
    <id>tag:martinfowler.com,2013-12-10:Renovation-of-refactoring-com</id>
    <content type="html">
      &lt;p&gt;After I finished &lt;a href="http://martinfowler.com/books/refactoring.html"&gt;Refactoring&lt;/a&gt;, I created a small web site at &lt;a href="http://refactoring.com"&gt;refactoring.com&lt;/a&gt; to act as an online summary of the refactorings in the book. It&#x2019;s mainstay is a &lt;a href="http://refactoring.com/catalog/"&gt;catalog&lt;/a&gt; which provides a brief summary of each refactoring. I built it around 2000 and until today it still was very much a product of the late 90&#x2019;s. Over the last few weeks I&#x2019;ve changed its appearance, made a more dynamic catalog page with some interactive filters, redrawn the diagrams, and added some deep links to the relevant pages of &lt;a href="http://my.safaribooksonline.com/0-201-485672/ch06lev1sec1"&gt;Safari Books Online&lt;/a&gt;. I&#x2019;ve also added links and refactorings from the &lt;a href="http://martinfowler.com/books/refactoringRubyEd.html"&gt;ruby edition&lt;/a&gt; of the book.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Using epics to coordinate features across services</title>
    <link href="http://martinfowler.com/articles/enterpriseREST.html#epics"/>
    <updated>2013-11-12T08:13:00-05:00</updated>
    <id>tag:martinfowler.com,2013-11-12:Using-epics-to-coordinate-features-across-services</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/enterpriseREST.html#epics'&gt;&lt;img src = 'http://martinfowler.com/articles/enterpriseREST/images/brandon-byars.jpg ' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="http://twitter.com/BrandonByars"&gt;Brandon Byars&lt;/a&gt; concludes his &lt;a href="http://martinfowler.com/articles/enterpriseREST.html"&gt;article on using REST-style services for enterprise integration&lt;/a&gt; by describing how to coordinate features across services. His advice is to use the agile planning notions of stories and epics - using stories within a service and epics to coordinate across services. When doing this it&#x2019;s important to track progress at the program level because you only deliver business value when all the services involved in an epic are done.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 56</title>
    <link href="http://martinfowler.com/photos/56.html"/>
    <updated>2013-11-09T15:55:00-05:00</updated>
    <id>tag:martinfowler.com,2013-11-09:photostream-56</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/56.html'&gt;&lt;img src = 'http://martinfowler.com/photos/56.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Shelbourne Museum, VT&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Avoiding data monopolies in services</title>
    <link href="http://martinfowler.com/articles/enterpriseREST.html#bounded-contexts"/>
    <updated>2013-11-08T08:26:00-05:00</updated>
    <id>tag:martinfowler.com,2013-11-08:Avoiding-data-monopolies-in-services</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/enterpriseREST.html#bounded-contexts'&gt;&lt;img src = 'http://martinfowler.com/articles/enterpriseREST/images/brandon-byars.jpg ' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;A common mistake in service-oriented architectures is to let a single service own all of the data about widely used entities, such as products or customers. In his latest installment of &lt;a href="http://martinfowler.com/articles/enterpriseREST.html"&gt;enterprise REST&lt;/a&gt; &lt;a href="http://twitter.com/BrandonByars"&gt;Brandon Byars&lt;/a&gt; explains why this is an error and shows how to use the DDD notion of bounded contexts for a better approach.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Consumer-based testing</title>
    <link href="http://martinfowler.com/articles/enterpriseREST.html#consumer-based-testing"/>
    <updated>2013-10-31T05:21:00-04:00</updated>
    <id>tag:martinfowler.com,2013-10-31:Consumer-based-testing</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/enterpriseREST.html#consumer-based-testing'&gt;&lt;img src = 'http://martinfowler.com/articles/enterpriseREST/images/brandon-byars.jpg ' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;&lt;a href="http://twitter.com/BrandonByars"&gt;Brandon Byars&#x2019;s&lt;/a&gt; article on &lt;a href="http://martinfowler.com/articles/enterpriseREST.html"&gt;enterprise REST&lt;/a&gt; now turns his attention to using consumer-based testing to find integration problems. This is the approach, counter-intuitive to many, where we get service consumers to write tests which are  incorporated into the service&#x2019;s deployment pipeline.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Use versioning only as a last resort</title>
    <link href="http://martinfowler.com/articles/enterpriseREST.html#versioning"/>
    <updated>2013-10-24T08:58:00-04:00</updated>
    <id>tag:martinfowler.com,2013-10-24:Use-versioning-only-as-a-last-resort</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/enterpriseREST.html#versioning'&gt;&lt;img src = 'http://martinfowler.com/articles/enterpriseREST/images/service-diamond-dependency.png ' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="http://twitter.com/BrandonByars"&gt;Brandon Byars&lt;/a&gt; continues his article on &lt;a href="http://martinfowler.com/articles/enterpriseREST.html"&gt;using REST-style services for enterprise integration&lt;/a&gt; by discussing versioning. Or more to the point, explaining why you shouldn&#x2019;t use versioning unless you really need to. You can reduce the pain of versioning by using techniques like tolerant readers, semantic versioning, and writing stories at service boundaries.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Enterprise Integration Using REST</title>
    <link href="http://martinfowler.com/articles/enterpriseREST.html"/>
    <updated>2013-10-21T11:13:00-04:00</updated>
    <id>tag:martinfowler.com,2013-10-21:Enterprise-Integration-Using-REST</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/enterpriseREST.html'&gt;&lt;img src = 'http://martinfowler.com/articles/enterpriseREST/images/brandon-byars.jpg ' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;My colleague Brandon Byars has been involved in several projects in large enterprises where they are trying to upgrade and replace their legacy systems. A strategy that&#x2019;s been useful in these situations is using REST-style web-services as an integration mechanism. Brandon is writing an article to discuss the lessons learned from this, which talks less about things like HATEOS and more on the role of environment management, versioning, and contract evolution. This first edition of the article talks about the importance of defining logical environments, and he&#x2019;ll be publishing more sections to the article over the next few weeks.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 55</title>
    <link href="http://martinfowler.com/photos/55.html"/>
    <updated>2013-10-05T09:48:00-04:00</updated>
    <id>tag:martinfowler.com,2013-10-05:photostream-55</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/55.html'&gt;&lt;img src = 'http://martinfowler.com/photos/55.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Rock, Cornwall&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Article on Eurogames</title>
    <link href="http://martinfowler.com/articles/eurogames/"/>
    <updated>2013-10-02T09:10:00-04:00</updated>
    <id>tag:martinfowler.com,2013-10-02:Article-on-Eurogames</id>
    <content type="html">
      &lt;p&gt;I&#x2019;m a fan of Eurogames - a style of approachable, yet thoughtful board games. I like them because you can usually learn and play one in an evening, yet they provide enough strategic interest to play many times. I sometimes get asked more about them and what and what my favorites are. So here is a short article explaining them and an interactive list of the games on my shelf.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking at Agile India</title>
    <link href="http://2014.agileindia.org/"/>
    <updated>2013-10-01T23:10:00-04:00</updated>
    <id>tag:martinfowler.com,2013-10-01:Speaking-at-Agile-India</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://2014.agileindia.org/'&gt;&lt;img src = 'http://2014.agileindia.org/themes/agileindia2012/images/header_01.png' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;ll be giving a keynote at &lt;a href="http://2014.agileindia.org/"&gt;Agile India&lt;/a&gt; next year (Feb 26 - Mar 1) in Bangalore (Bengaluru). I&#x2019;ll be doing a &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;Suite of Talks&lt;/a&gt;, but naturally won&#x2019;t decide which ones to use until the day. This will be my first appearance at the Agile India conference and my first speaking trip to India for a couple of years.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>NoSQL Distilled won Jolt Finalist Award</title>
    <link href="http://www.drdobbs.com/joltawards/jolt-awards-the-best-books/240162065?pgno=2"/>
    <updated>2013-10-01T22:39:00-04:00</updated>
    <id>tag:martinfowler.com,2013-10-01:NoSQL-Distilled-won-Jolt-Finalist-Award</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.drdobbs.com/joltawards/jolt-awards-the-best-books/240162065?pgno=2'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '75' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;m chuffed to see that &lt;a href="http://martinfowler.com/books/nosql.html"&gt;NoSQL Distilled&lt;/a&gt; won an award today - as a finalist in Dr Dobb&#x2019;s Jolt Awards, marking it as one of their top 5 books of the year. This is the third book I&#x2019;ve written that&#x2019;s got this kind of award and Pramod&#x2019;s &lt;a href="http://martinfowler.com/books/refactoringDatabases.html"&gt;second award&lt;/a&gt; (but he&#x2019;s written less so has a higher average). &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Expanding "Testing Asynchronous Javascript" to include Promises</title>
    <link href="http://martinfowler.com/articles/asyncJS.html#AWhirlwindIntroductionToPromises"/>
    <updated>2013-09-18T09:52:00-04:00</updated>
    <id>tag:martinfowler.com,2013-09-18:Expanding--Testing-Asynchronous-Javascript--to-include-Promises</id>
    <content type="html">
      &lt;p&gt;&lt;a href="http://blog.thepete.net/"&gt;Pete Hodgson&lt;/a&gt; expands his article on testing asynchronous javascript by explaining how promises - together with tools like Q,  mocha-as-promised, and chai-as-promised - can make clearer to write tests of asynchronous behavior.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 54</title>
    <link href="http://martinfowler.com/photos/54.html"/>
    <updated>2013-09-14T11:52:00-04:00</updated>
    <id>tag:martinfowler.com,2013-09-14:photostream-54</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/54.html'&gt;&lt;img src = 'http://martinfowler.com/photos/54.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Isle of Mull, Scotland&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 53</title>
    <link href="http://martinfowler.com/photos/53.html"/>
    <updated>2013-09-07T09:50:00-04:00</updated>
    <id>tag:martinfowler.com,2013-09-07:photostream-53</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/53.html'&gt;&lt;img src = 'http://martinfowler.com/photos/53.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Isle of Mull, Scotland&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Keynote from Goto Amsterdam</title>
    <link href="http://www.youtube.com/watch?v=TgdFA72crHM"/>
    <updated>2013-09-04T10:06:00-04:00</updated>
    <id>tag:martinfowler.com,2013-09-04:Keynote-from-Goto-Amsterdam</id>
    <content type="html">
      &lt;p&gt;Earlier this year I gave a keynote at the Goto conference in Amsterdam. It&#x2019;s now up on YouTube. As usual it follows my &#x2018;Software Design in the 21st Century&#x2019; template with a pair of short talks. I begin with talking about &lt;a href="http://martinfowler.com/articles/schemaless"&gt;&lt;b&gt;Schemaless data structures&lt;/b&gt;&lt;/a&gt;, explaining why there is always an implicit schema and the consequences of that. Second up I talk about the &lt;a href="http://martinfowler.com/articles/newMethodology.html"&gt;&lt;b&gt;essence of agile&lt;/b&gt; software development&lt;/a&gt; and the &lt;a href="http://martinfowler.com/articles/agileFluency.html"&gt;&lt;b&gt;agile fluency&lt;/b&gt; model&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Testing Asynchronous Javascript</title>
    <link href="http://martinfowler.com/articles/asyncJS.html"/>
    <updated>2013-09-03T08:41:00-04:00</updated>
    <id>tag:martinfowler.com,2013-09-03:Testing-Asynchronous-Javascript</id>
    <content type="html">
      &lt;p&gt;Testing asynchronous behavior is often complicated, and javascript web
      applications introduce a lot of asynchrony. &lt;a href="http://blog.thepete.net/"&gt;Pete Hodgson&lt;/a&gt; explains that
      you don&#x2019;t have to tie yourself in knots as most javascript is
      async-compatible rather than inherently async.  &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 52</title>
    <link href="http://martinfowler.com/photos/52.html"/>
    <updated>2013-08-31T11:17:00-04:00</updated>
    <id>tag:martinfowler.com,2013-08-31:photostream-52</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/52.html'&gt;&lt;img src = 'http://martinfowler.com/photos/52.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Yellowstone N.P., WY&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>10 years and still Cannot Measure Productivity</title>
    <link href="http://martinfowler.com/bliki/CannotMeasureProductivity.html"/>
    <updated>2013-08-29T08:10:00-04:00</updated>
    <id>tag:martinfowler.com,2013-08-29:10-years-and-still-Cannot-Measure-Productivity</id>
    <content type="html">
      &lt;p&gt;One of the great frustrations of the software industry is that we don&#x2019;t have properly built studies to figure out whether development tools and techniques such as object-oriented programming, test-driven development, or even high-level languages are good for us. Regularly we see improperly built studies that do so - often these are done poorly because they rely on a bogus measure of productivity (such as Lines of Code per staff day). 10 years ago today, my frustration led me to publish my bliki post &lt;a href="http://martinfowler.com/bliki/CannotMeasureProductivity.html"&gt;CannotMeasureProductivity&lt;/a&gt;. I think this post is sadly just as sound today as it was a decade ago.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Interview on Working at ThoughtWorks</title>
    <link href="http://www.informit.com/articles/article.aspx?p=2121640"/>
    <updated>2013-08-20T09:53:00-04:00</updated>
    <id>tag:martinfowler.com,2013-08-20:Interview-on-Working-at-ThoughtWorks</id>
    <content type="html">
      &lt;p&gt;A short interview with InformIT about what it&#x2019;s like to work at ThoughtWorks (although I&#x2019;m hardly a representative example.) We talk about how I got there, why I stay, and what people can do to join and prosper at our interesting company.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 51</title>
    <link href="http://martinfowler.com/photos/51.html"/>
    <updated>2013-07-27T10:59:00-04:00</updated>
    <id>tag:martinfowler.com,2013-07-27:photostream-51</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/51.html'&gt;&lt;img src = 'http://martinfowler.com/photos/51.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Acadia N.P., ME&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Privacy Protects Bothersome People</title>
    <link href="http://martinfowler.com/articles/bothersome-privacy.html"/>
    <updated>2013-07-25T10:06:00-04:00</updated>
    <id>tag:martinfowler.com,2013-07-25:Privacy-Protects-Bothersome-People</id>
    <content type="html">
      &lt;p&gt;One of the consequences of the Edward Snowden story is a heightened discussion about the importance of privacy - in particular when or if privacy should be traded off in order to combat terrorism. To think about this we need to understand why privacy of individuals is important to a democracy. We often hear statements like &lt;em&gt;&#x201C;I have nothing to hide&#x201D;&lt;/em&gt;, or as a friend of mine put it &lt;em&gt;&#x201C;the NSA doesn&#x2019;t care about insignificant people like you or me&#x201D;&lt;/em&gt;. I may care about my privacy, but should my personal desire trump the needs of our broader society?&lt;/p&gt;

      &lt;p&gt;&lt;a href="http://martinfowler.com/articles/bothersome-privacy.html"&gt;more&#x2026;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking in South Africa</title>
    <link href="http://info.thoughtworks.com/agile_insights_15_aug_2013_registration.html"/>
    <updated>2013-07-23T15:42:00-04:00</updated>
    <id>tag:martinfowler.com,2013-07-23:Speaking-in-South-Africa</id>
    <content type="html">
      &lt;p&gt;I now have the information for my talk in Cape Town. It will be on Thursday August 15. If you want to come along &lt;a href="http://info.thoughtworks.com/agile_insights_15_aug_2013_registration.html"&gt;register here&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 50</title>
    <link href="http://martinfowler.com/photos/50.html"/>
    <updated>2013-07-19T18:46:00-04:00</updated>
    <id>tag:martinfowler.com,2013-07-19:photostream-50</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/50.html'&gt;&lt;img src = 'http://martinfowler.com/photos/50.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Shore Acres, Cape Arago, OR&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Evolving a Mobile Implementation Strategy</title>
    <link href="http://www.youtube.com/watch?v=o72-Br9SkdM"/>
    <updated>2013-07-17T10:58:00-04:00</updated>
    <id>tag:martinfowler.com,2013-07-17:Evolving-a-Mobile-Implementation-Strategy</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.youtube.com/watch?v=o72-Br9SkdM'&gt;&lt;img src = 'http://martinfowler.com/snips/gga-mf-twlive.png' width = '120' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Earlier this year Giles Alexander and I spoke at our ThoughtWorks live events on strategies for mobile applications. Here is the video from the London talk. We talk about the &#x201C;Lean-forward&#x201D;, &#x201C;Lean-back&#x201D;, and &#x201C;Look-down&#x201D; engagement styles; why value can be hidden by traffic, and the cover-your-bases and laser platform strategies. Giles finishes with a brief case study of using this thinking at a major airline.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 49</title>
    <link href="http://martinfowler.com/photos/49.html"/>
    <updated>2013-07-13T16:03:00-04:00</updated>
    <id>tag:martinfowler.com,2013-07-13:photostream-49</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/49.html'&gt;&lt;img src = 'http://martinfowler.com/photos/49.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Oregon Coast Highway, OR&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking in South Africa</title>
    <link href="http://martinfowler.com/snips/201307040927.html"/>
    <updated>2013-07-04T09:27:00-04:00</updated>
    <id>tag:martinfowler.com,2013-07-04:Speaking-in-South-Africa</id>
    <content type="html">
      &lt;p&gt;Next month I&#x2019;ll be travelling to South Africa again for the first time in over ten years. I&#x2019;m going down to give a keynote at the &lt;a href="http://agileafrica.jcse.org.za"&gt;Agile Africa conference&lt;/a&gt; in Johannesburg on August 12/13. I&#x2019;ll also be popping down to Cape Town on Thursday 15th (details and links to follow when I have them). &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 48</title>
    <link href="http://martinfowler.com/photos/48.html"/>
    <updated>2013-06-14T10:55:00-04:00</updated>
    <id>tag:martinfowler.com,2013-06-14:photostream-48</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/48.html'&gt;&lt;img src = 'http://martinfowler.com/photos/48.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Melrose, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Thoughts on Edward Snowden</title>
    <link href="http://martinfowler.com/snips/201306100949.html"/>
    <updated>2013-06-10T09:49:00-04:00</updated>
    <id>tag:martinfowler.com,2013-06-10:Thoughts-on-Edward-Snowden</id>
    <content type="html">
      &lt;p&gt;This last weekend was the ThoughtWorks North American awayday. Following the suicide earlier this year of Aaron Swartz, we had a theme around the role of the internet and the software profession to combat overreaching government and corporate power; featuring speeches by &lt;a href="http://joyb.blogspot.com"&gt;Birgitta Jonsdottir&lt;/a&gt;, &lt;a href="https://twitter.com/justleft"&gt;Michael Ratner&lt;/a&gt;, and (by video link) Julian Assange. It was merely a happy coincidence that this weekend corresponded with successive leaks of troubling activities by government agencies under the Obama administration. &lt;/p&gt;

      &lt;p&gt;As I boarded the flight home, I read the news of Edward Snowden&#x2019;s &lt;a href="http://www.guardian.co.uk/world/2013/jun/09/edward-snowden-nsa-whistleblower-surveillance"&gt;account of why he made these leaks&lt;/a&gt;, and furthermore, why he chose to publicly take responsibility for them. Based on the information I currently have, I am struck with admiration for the courage and thoughtfulness of Edward Snowden&#x2019;s actions. The path of a whistleblower is not an easy route, because it rests on the difficult dilemma between breaking the trust of the community we work with and our responsibility to our wider community: our country and humanity as a whole. I have had mixed feelings about some of the whistleblowing against the US government in recent years, some cases I&#x2019;ve admired, but in other cases I&#x2019;ve felt that the secrets revealed have not measured up to the high standards required by breaking that smaller trust.  &lt;/p&gt;

      &lt;p&gt;In Edward Snowden&#x2019;s case, these secrets so far have met that high standard. I am concerned both by these actions of the US government and by the secrecy that&#x2019;s obscured these actions - a secrecy that makes it impossible for we the people to debate the correctness of our representatives&#x2019; policies. I hope we the people will support a public servant who put his responsibility to us over the government that serves us.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 47</title>
    <link href="http://martinfowler.com/photos/47.html"/>
    <updated>2013-06-04T10:31:00-04:00</updated>
    <id>tag:martinfowler.com,2013-06-04:photostream-47</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/47.html'&gt;&lt;img src = 'http://martinfowler.com/photos/47.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Brooklyn, NY&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking in Amsterdam</title>
    <link href="http://gotocon.com/amsterdam-2013/"/>
    <updated>2013-06-04T10:30:00-04:00</updated>
    <id>tag:martinfowler.com,2013-06-04:Speaking-in-Amsterdam</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://gotocon.com/amsterdam-2013/'&gt;&lt;img src = 'http://martinfowler.com/snips/goto-ams.png' width = '75' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Although I do my best to limit my public speaking, I do have a fond spot for the &lt;a href="http://gotocon.com/"&gt;goto&lt;/a&gt; series of conferences. Later this month they are running &lt;a href="http://gotocon.com/amsterdam-2013/"&gt;a full conference in Amsterdam&lt;/a&gt;, and I&#x2019;ll be doing a keynote for them on Wednesday June 19. I&#x2019;ll be doing my usual &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;suite of talks&lt;/a&gt; format, but haven&#x2019;t yet decided which talks will go in the set. I hope to see some of my regular readers there.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Apple's next connector?</title>
    <link href="http://martinfowler.com/snips/201305300909.html"/>
    <updated>2013-05-30T09:09:00-04:00</updated>
    <id>tag:martinfowler.com,2013-05-30:Apple-s-next-connector-</id>
    <content type="html">
      &lt;p&gt;A couple of years ago, Apple computers started appearing with a &#x201C;Thunderbolt&#x201D; interface to connect to monitors and disks. Some time after that, new iPhones appeared with a smaller connector called &#x201C;Lightning&#x201D;. Should we thus conclude that Apple&#x2019;s next connector will be called &#x201C;Very, Very Frightening&#x201D;?&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>May 2013 edition of ThoughtWorks Technology Radar</title>
    <link href="http://www.thoughtworks.com/radar"/>
    <updated>2013-05-22T16:35:00-04:00</updated>
    <id>tag:martinfowler.com,2013-05-22:May-2013-edition-of-ThoughtWorks-Technology-Radar</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.thoughtworks.com/radar'&gt;&lt;img src = 'http://martinfowler.com/snips/radar-0513.png' width = '75' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The &lt;a href="http://martinfowler.com/articles/radar-faq.html#tab"&gt;ThoughtWorks Technology Advisory Board (TAB)&lt;/a&gt; has released the latest edition of our &lt;a href="http://www.thoughtworks.com/radar"&gt;technology radar&lt;/a&gt;. This is where we highlight some of the technologies that are currently attracting our attention and that we feel are worth you taking a look at. In this edition our themes include my long term interest in breaking down boundaries between people and groups, lightweight option for analytics, infrastructure as code, and applying the practices that have worked well for us in development to places that are missing them.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 46</title>
    <link href="http://martinfowler.com/photos/46.html"/>
    <updated>2013-05-21T09:34:00-04:00</updated>
    <id>tag:martinfowler.com,2013-05-21:photostream-46</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/46.html'&gt;&lt;img src = 'http://martinfowler.com/photos/46.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Longwood Gardens, PA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Expansion to DIP in the Wild</title>
    <link href="http://martinfowler.com/articles/dipInTheWild.html"/>
    <updated>2013-05-21T08:50:00-04:00</updated>
    <id>tag:martinfowler.com,2013-05-21:Expansion-to-DIP-in-the-Wild</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/dipInTheWild.html'&gt;&lt;img src = 'http://martinfowler.com/articles/DipInTheWild/images/BrettSchuchert.jpg' width = '75' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="http://schuchert.wikispaces.com/"&gt;Brett&#x2019;s&lt;/a&gt;  article on the Dependency Inversion Principle (DIP) and how it works in practice has been a popular read on this site (over 24,000 views since it was published at the beginning of the month). Brett has now expanded the article with two more examples from his delivery experience: questioning requirements and handling time. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>How do you estimate on an Agile project?</title>
    <link href="http://www.thoughtworks-studios.com/sites/default/files/resource/twebook-perspectives-estimation_1.pdf"/>
    <updated>2013-05-03T08:36:00-04:00</updated>
    <id>tag:martinfowler.com,2013-05-03:How-do-you-estimate-on-an-Agile-project-</id>
    <content type="html">
      &lt;p&gt;If you&#x2019;re interested in techniques for estimation, you should take a look at this pdf ebook. It contains half-a-dozen essays on estimating in agile projects, drawn from our experiences with a wide range of clients. We explain approaches based on story points and on story counting, which should give you a good overview for you to explore an approach that will work for you.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>DIP in the Wild</title>
    <link href="http://martinfowler.com/articles/dipInTheWild.html"/>
    <updated>2013-05-01T07:13:00-04:00</updated>
    <id>tag:martinfowler.com,2013-05-01:DIP-in-the-Wild</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/dipInTheWild.html'&gt;&lt;img src = 'http://martinfowler.com/articles/DipInTheWild/images/BrettSchuchert.jpg' width = '75' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The Dependency Inversion Principle (DIP) was coined by (Uncle) Bob Martin several years ago. It&#x2019;s a useful principle to help organize the dependencies in your system. Here &lt;a href="http://schuchert.wikispaces.com/"&gt;Brett Schuchert&lt;/a&gt; shows &lt;a href="http://martinfowler.com/articles/dipInTheWild.html"&gt;how this principle works in practice&lt;/a&gt; to simplify designs with a couple of real world examples from his recent ThoughtWorks projects.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 45</title>
    <link href="http://martinfowler.com/photos/45.html"/>
    <updated>2013-04-24T19:18:00-04:00</updated>
    <id>tag:martinfowler.com,2013-04-24:photostream-45</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/45.html'&gt;&lt;img src = 'http://martinfowler.com/photos/45.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Segovia, Spain&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>The Architecture of Gap Inc's SCMS-PO</title>
    <link href="http://martinfowler.com/articles/gap-scms-po"/>
    <updated>2013-04-23T11:24:00-04:00</updated>
    <id>tag:martinfowler.com,2013-04-23:The-Architecture-of-Gap-Inc-s-SCMS-PO</id>
    <content type="html">
      &lt;p&gt;I&#x2019;m hoping to spend more time writing about &lt;a href="/bliki/ExpositionalArchitecture.html"&gt;expositional architectures&lt;/a&gt;, systems that show interesting  characteristics that will act as seeds for ideas for other software systems. To make a start I&#x2019;ve written an infodeck describing the &lt;a href="/articles/gap-scms-po"&gt;SCMS-PO system of Gap Inc&lt;/a&gt;. It&#x2019;s a system for managing purchase orders with a rich javascript client talking to a java server system using a resource API. Interesting features include using knockout.js form of the Presentation Model pattern, a javascript validator running on both client and server, encapsulating data access with repositories, using MongoDB as an application database, and the testing portfolio. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 44</title>
    <link href="http://martinfowler.com/photos/44.html"/>
    <updated>2013-04-22T10:54:00-04:00</updated>
    <id>tag:martinfowler.com,2013-04-22:photostream-44</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/44.html'&gt;&lt;img src = 'http://martinfowler.com/photos/44.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Himeji, Japan&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>A short statement on the Adria Richards / Pycon incident</title>
    <link href="http://martinfowler.com/snips/201304150952.html"/>
    <updated>2013-04-15T09:52:00-04:00</updated>
    <id>tag:martinfowler.com,2013-04-15:A-short-statement-on-the-Adria-Richards---Pycon-incident</id>
    <content type="html">
      &lt;p&gt;A few weeks ago I watched in depressed fascination at the internet explosion about Adria Richards and her reaction to offensive comments made in the audience of the Pycon conference. (If you would like more information on this incident I would suggest starting with the &lt;a href="http://www.guardian.co.uk/commentisfree/2013/mar/26/adria-richards-gets-rape-threats-for-speaking-out-about-workplace-sexism"&gt;Guardian article&lt;/a&gt;. ) Although I did contemplate writing something about it, I felt that I didn&#x2019;t have anything new or constructive to say. I don&#x2019;t really have anything terribly enlightening to say now, but I do feel the need to state my opinions.&lt;/p&gt;

      &lt;p&gt;For me, the supreme issue here is the appalling internet attacks on Ms Richards, which included a barrage of viciousness that included rape threats, death threats, publishing her private information, and a DDOS attack on her employer. In the discussion over these events, many people have spent energy discussing such things as whether the jokes that triggered all this were truly offensive, and whether Ms Richards&#x2019;s reaction was appropriate. Even if we were to accept that her action, a tweet including a photograph of the jokers, was an overreaction which violated reasonable etiquette - any wrong that she had done is insignificant compared to the wrong heaped upon her by those attacks.&lt;/p&gt;

      &lt;p&gt;I have long despaired of the &lt;a href="/bliki/NetNastiness.html"&gt;net nastiness&lt;/a&gt; that hangs over our profession and how its alienating atmosphere contributes to our &lt;a href="/bliki/DiversityImbalance.html"&gt;diversity imbalance&lt;/a&gt;. This incident sadly makes clear the misogynistic streak in the tech world and further deters women from speaking out against it. I have no solutions to offer, but will continue to listen to historically disadvantaged groups and  hope to be able to support those trying to correct these problems. I know that many of my colleagues at ThoughtWorks are also eager to see this disease eradicated and for our profession to actually approach being the meritocracy it likes to think it is.&lt;/p&gt;

      &lt;p&gt;I would also like to state a loud &#x201C;+1&#x201D; to Alexis Ohanian for &lt;a href="http://alexisohanian.com/dear-fellow-geeks-what-the-fuck"&gt;eloquently expressing much of my feelings&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 43</title>
    <link href="http://martinfowler.com/photos/43.html"/>
    <updated>2013-03-25T10:59:00-04:00</updated>
    <id>tag:martinfowler.com,2013-03-25:photostream-43</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/43.html'&gt;&lt;img src = 'http://martinfowler.com/photos/43.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Martindale, Cumbria, England&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Ruby Rogues Podcast on P of EAA</title>
    <link href="http://rubyrogues.com/097-rr-book-club-patterns-of-enterprise-architecture-with-martin-fowler/"/>
    <updated>2013-03-25T08:32:00-04:00</updated>
    <id>tag:martinfowler.com,2013-03-25:Ruby-Rogues-Podcast-on-P-of-EAA</id>
    <content type="html">
      &lt;p&gt;The Ruby Rogues are a popular podcast where a regular panel discusses topics in the Ruby programming community. They have a regular book club and recently selected &lt;a href="http://martinfowler.com/books/eaa.html"&gt;P of EAA&lt;/a&gt; as their featured book. Consequently they asked me to appear as a guest on their show to discuss the book and the patterns that it describes, in particular the interesting relationship between these patterns and the Rails framework.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: TypeInstanceHomonym</title>
    <link href="http://martinfowler.com/bliki/TypeInstanceHomonym.html"/>
    <updated>2013-03-19T09:25:00-04:00</updated>
    <id>tag:martinfowler.com,2013-03-19:Retreaded--TypeInstanceHomonym</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 11 Jan 2007&lt;/p&gt;

      &lt;blockquote&gt;
      &lt;p&gt;"'War and Peace' is a wonderful book.&lt;/p&gt;

      &lt;p&gt;"Let me see... pity this book has such a tattered cover"&lt;/p&gt;

      &lt;p class="quote-attribution"/&gt;
      &lt;/blockquote&gt;

      &lt;p&gt;Two sentences, each uses the word 'book'. We glance over
      combinations like this
      every day without remarking that the word 'book' means something
      completely different in each of those sentences.&lt;/p&gt;

      &lt;p&gt;In the first sentence 'book' refers to a literary work, one
      that's been with us for over a hundred years. In the second sentence
      'book' now refers to a physical object that's probably been around for
      a lot less. I can easily destroy the latter in my fire, but the former
      isn't touched by my flames and will doubtless last longer than I will.
      I can put the former on my hard disk with many siblings that
      collectively weigh less than the latter.&lt;/p&gt;

      &lt;p&gt;This particular ambiguity is startlingly common in natural
      language. Think about words like 'car', 'oak', and 'programmer'.
      Trying to straighten this out can easily lead you into the darker
      corners of semantics in philosophy. For the moment, I'll just explain
      how I think about this.&lt;/p&gt;

      &lt;p&gt;The word 'book' is a term that can refer to multiple
      concepts. The two sentences above illustrate two concepts that
      'book' refers to: the literary work and the physical copy. Since
      most of my readers are programmers I'll use a programming analogy
      and say that there are two distinct classes both of which are called
      'book'. We can disambiguate them by referring to them as the classes
      LiteraryWork and PhysicalCopy. When in the first sentence I
      say that 'War and Peace' is a book, I'm saying that 'War and Peace'
      is an instance of the class LiteraryWork. The second sentence refers
      to the properties of an instance of PhysicalCopy.&lt;/p&gt;

      &lt;p&gt;These two concepts are not independent. Unlike a homonym like
      right and right (the opposites of left and wrong), these two concepts
      have a close relationship &lt;a href="#footnote-polysemy"&gt;[1]&lt;/a&gt;. A book [PhysicalCopy] carries on it a
      rendering of the book [LiteraryWork]. So I might say that my War and
      Peace has a tattered cover. Similarly my Subaru Legacy [instance of
      physical car] has a relationship with Subaru Legacy [instance of car
      model]. Indeed we might say that the type of my car is Subaru Legacy
      [car model]. This kind of relationship is very common and is familiar to people
      who do any kind of object or data modeling. You often see similar
      structures involving things like Product and Product Type. I wouldn't
      use the terms Book and Book Type, but it's fundamentally the same relationship.
      &lt;/p&gt;

      &lt;p&gt;Spend time modeling, or programming, in almost any domain and you'll
      reach a point where you have to take some common term in that domain
      and realize it denotes two separate concepts which mean separate
      classes (or tables) with different names in your code. When you get
      homonyms in your domain language, it's often because the terms are
      used differently in different contexts - what Eric
      Evans calls Bounded Contexts. As Jim Odell liked to point out: "Mary
      had a little lamb" means quite different things to a veterinarian than
      to a restaurateur. The trouble with the type-instance homonym is
      that it occurs even within very tight bounded contexts.&lt;/p&gt;

      &lt;p&gt;My purpose here isn't to talk much further about modeling these
      kind of situations, that's quite a topic on its own, but to reflect
      on the ambiguity that this common type of homonym causes. The
      really interesting thing about this ambiguity is how &lt;i&gt;little&lt;/i&gt; trouble
      it causes. Humans seem to have no trouble at all switching between
      the multiple concepts and only rarely getting tripped up in the
      process. What's worse, if you actively try to use different terms in
      everyday conversation, it's nearly impossible to keep it up. I
      certainly tried, both in conversation and writing and quickly
      realized it was a lost cause. Not just did I not have the discipline
      but it made me sound like someone with some obscure mental
      condition. (The type-instance case isn't the only one with this
      property, as the phrase "go through the door we painted last
      week" suggests.)&lt;/p&gt;

      &lt;p&gt;There's a particularly fascinating case of this in my own
      specialty of object-oriented design. We often talk about things like
      "add a method to an object". Yet, of course, we don't add methods to
      objects, we add them to classes. At some point in your career you've
      been the pedant who's pointed that out in a meeting. You've also
      effortlessly glossed over that point in countless conversations since.&lt;/p&gt;

      &lt;p&gt;So I came to the conclusion that we absolutely have to be aware
      of this homonym. We need to represent the concepts separately and with
      different names in our software. But we shouldn't expect to make a
      distinction between them in our conversation unless we're in a context
      where there is a real danger of confusion, because most of the time
      our brains resolve the ambiguity automatically.&lt;/p&gt;

      &lt;p&gt;So what does this mean in the context of a
      &lt;a href="http://martinfowler.com/bliki/UbiquitousLanguage.html"&gt;UbiquitousLanguage&lt;/a&gt;? Firstly we have to do the modeling
      and realize we have different concepts (aware of the homonym). We
      then come up with names for the different concepts that we'll use in
      our Ubiquitous Language and thus in the software
      representation. When coming up with these names, I like to avoid the
      bare homonym: so I wouldn't use "book" in the library context,
      preferring something like 'Literary Work' and 'Physical Copy'. These
      disambiguating terms need to be comprehensible to the domain experts,
      as with anything else in the Ubiquitous Language. Therefore the
      domain experts need to be aware of the homonym and help come up with
      the new terms. We then use the new terms whenever we need the
      precision we gain. However we should be wary of trying to completely
      exorcise the homonym. It effectively becomes a synonym for each of
      the new terms. So if a domain person says "a book has authors" we
      might say "you mean a literary work there, right?" Remember that it
      will feel unnatural to everyone to not use the homonym term, so apply
      the precision with a light touch. Fortunately awareness is 90% of
      the battle here.&lt;/p&gt;

      &lt;p&gt;A further consequence of this homonym is that you should always
      have your antenna scanning for it - particularly in the early days of
      working in a new domain. Usually it occurs in terms that are
      absolutely central to that domain - as with books and
      libraries. I've liked using informal class diagrams to model a
      ubiquitous language and I've found it does a good job of rooting out
      these kinds of homonyms.&lt;/p&gt;

      &lt;div class="footnote-list"&gt;
      &lt;h2&gt;Notes&lt;/h2&gt;

      &lt;div class="footnote-list-item" id="footnote-polysemy"&gt;
      &lt;p&gt;&lt;span class="num"&gt;1: &lt;/span&gt;
      Jim White emailed me to let me know that in Linguistics, the
      term "polysemy" is sometimes used to indicate to indicate a word
      that has different, but related, meanings.
      &lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;

      &lt;p class="repost"&gt;reposted on 19 Mar 2013&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/TypeInstanceHomonym.html&amp;amp;text=Bliki: TypeInstanceHomonym" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/TypeInstanceHomonym.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/TypeInstanceHomonym.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Video of Introduction to NoSQL Talk</title>
    <link href="http://www.youtube.com/watch?v=qI_g07C_Q5I"/>
    <updated>2013-03-04T14:18:00-05:00</updated>
    <id>tag:martinfowler.com,2013-03-04:Video-of-Introduction-to-NoSQL-Talk</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.youtube.com/watch?v=qI_g07C_Q5I'&gt;&lt;img src = 'http://martinfowler.com/img/mf-goto-2013.png' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Last fall &lt;a href="http://gotocon.com/aarhus-2012"&gt;goto Aarhus&lt;/a&gt; continued its ongoing interest in new approaches to data with a track gathering together various experiences with &lt;a href="http://martinfowler.com/nosql.html"&gt;NoSQL databases&lt;/a&gt;. I was asked to kick off this track with an introductory talk for an hour giving an outline to the important issues in thinking about NoSQL. I talk about the origins of NoSQL, forms of NoSQL data models, the way many NoSQL databases consider the problem of consistency, and the importance of Polyglot Persistence. I was pretty happy with how this turned out and think it&#x2019;s a good way to spend an hour if you want to start a journey in understanding NoSQL.&lt;/p&gt;

      &lt;p&gt;There is also a video of a &lt;a href="http://www.youtube.com/watch?v=191kCkNya5Q&amp;amp;list=PLEx5khR4g7PJmH05qNUmmo8WzSSaJIzLj&amp;amp;index=7"&gt;panel of NoSQL vendors&lt;/a&gt; that I participated on. This wasn&#x2019;t a great discussion - lots of talking past each other, but maybe worth a look for people who are already into the NoSQL world.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 42</title>
    <link href="http://martinfowler.com/photos/42.html"/>
    <updated>2013-03-02T09:58:00-05:00</updated>
    <id>tag:martinfowler.com,2013-03-02:photostream-42</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/42.html'&gt;&lt;img src = 'http://martinfowler.com/photos/42.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Vieste, Puglia, Italy&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 41</title>
    <link href="http://martinfowler.com/photos/41.html"/>
    <updated>2013-02-23T14:35:00-05:00</updated>
    <id>tag:martinfowler.com,2013-02-23:photostream-41</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/41.html'&gt;&lt;img src = 'http://martinfowler.com/photos/41.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;William Ricketts Sanctuary, Victoria, Australia&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Talks on schemalessness, consistency in NoSQL, and economics of software design</title>
    <link href="http://www.youtube.com/watch?v=8kotnF6hfd8"/>
    <updated>2013-02-20T09:53:00-05:00</updated>
    <id>tag:martinfowler.com,2013-02-20:Talks-on-schemalessness--consistency-in-NoSQL--and-economics-of-software-design</id>
    <content type="html">
      &lt;p&gt;A couple of weeks ago I dodged the historic snowstorm in New England by heading over to San Francisco to talk at a ThoughtWorks event. As is my habit these days I did a &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;suite of talks&lt;/a&gt;, covering how and when to use schemaless data structures, why consistency in NoSQL databases is more than just ACID versus BASE, and the economic justification for well-designed software. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>An Appropriate Use of Metrics</title>
    <link href="http://martinfowler.com/articles/useOfMetrics.html"/>
    <updated>2013-02-19T09:41:00-05:00</updated>
    <id>tag:martinfowler.com,2013-02-19:An-Appropriate-Use-of-Metrics</id>
    <content type="html">
      &lt;p&gt;Like many of us, my colleague &lt;a href="http://thekua.com/atwork"&gt;Patrick Kua&lt;/a&gt; has seen a lot of use of metrics. Management love their metrics. The thinking goes something like this, &#x201C;We need a number to measure how we&#x2019;re doing. Numbers focus people and help us measure success.&#x201D; Whilst well intentioned, management by numbers unintuitively leads to problematic behavior and ultimately detracts from broader project and organizational goals. Metrics inherently aren&#x2019;t a bad thing; just often, inappropriately used. &lt;a href="http://martinfowler.com/articles/useOfMetrics.html"&gt;This essay&lt;/a&gt; demonstrates many of the issues caused by management&#x2019;s traditional use of metrics and offers an alternative to address these dysfunctions.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 40</title>
    <link href="http://martinfowler.com/photos/40.html"/>
    <updated>2013-02-19T09:28:00-05:00</updated>
    <id>tag:martinfowler.com,2013-02-19:photostream-40</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/40.html'&gt;&lt;img src = 'http://martinfowler.com/photos/40.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Block Island, RI&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>ThoughtWorks gets rid of sales commissions</title>
    <link href="http://martinfowler.com/articles/eliminatingSalesCommissions/"/>
    <updated>2013-02-18T10:05:00-05:00</updated>
    <id>tag:martinfowler.com,2013-02-18:ThoughtWorks-gets-rid-of-sales-commissions</id>
    <content type="html">
      &lt;p&gt;Sales commissions are almost universally used in the software business, as in all business sectors. In this short infodeck I explore why commissions are popular, the problems with them, and the thinking in ThoughtWorks that led us to getting rid of them in 2013.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 39</title>
    <link href="http://martinfowler.com/photos/39.html"/>
    <updated>2013-02-01T09:54:00-05:00</updated>
    <id>tag:martinfowler.com,2013-02-01:photostream-39</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/39.html'&gt;&lt;img src = 'http://martinfowler.com/photos/39.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Ross Island, Andaman Islands, India&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Infodeck on Big Data</title>
    <link href="http://martinfowler.com/articles/bigData/"/>
    <updated>2013-01-29T10:36:00-05:00</updated>
    <id>tag:martinfowler.com,2013-01-29:Infodeck-on-Big-Data</id>
    <content type="html">
      &lt;p&gt;&#x201C;Big Data&#x201D; has leapt rapidly into one of the most hyped terms in our industry, yet the hype should not blind people to the fact that this is a genuinely important shift about the role of data in the world. The amount, speed, and value of data sources is rapidly increasing. Data management has to change in five broad areas: extraction of data from a wider range of sources, changes to the logistics of data management with new database and integration approaches, the use of agile principles in running analytics projects, an emphasis on techniques for data interpretation to separate signal from noise, and the importance of well-designed visualization to make that signal more comprehensible. Summing up this means we don&#x2019;t need big analytics projects, instead we want the new data thinking to permeate our regular work. &lt;a href="http://martinfowler.com/articles/bigData"&gt;(go to the infodeck)&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking in San Francisco on Feb 7th</title>
    <link href="http://www.thoughtworks.com/events/software-design-21st-century-and-big-data"/>
    <updated>2013-01-22T16:53:00-05:00</updated>
    <id>tag:martinfowler.com,2013-01-22:Speaking-in-San-Francisco-on-Feb-7th</id>
    <content type="html">
      &lt;p&gt;I&#x2019;ll be giving a talk in San Francisco on February 7th. I don&#x2019;t know exactly what my topics will be, but it will be a &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;Suite of Talks&lt;/a&gt;. Also on the program is my colleague &lt;a href="http://theagilist.com"&gt;Ken Collier&lt;/a&gt;, who will be talking about whether Big Data is any more than a load of old hype.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 38</title>
    <link href="http://martinfowler.com/photos/38.html"/>
    <updated>2013-01-10T11:00:00-05:00</updated>
    <id>tag:martinfowler.com,2013-01-10:photostream-38</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/38.html'&gt;&lt;img src = 'http://martinfowler.com/photos/38.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Ironbridge, England&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Schemaless Data Structures</title>
    <link href="http://martinfowler.com/articles/schemaless/"/>
    <updated>2013-01-07T11:00:00-05:00</updated>
    <id>tag:martinfowler.com,2013-01-07:Schemaless-Data-Structures</id>
    <content type="html">
      &lt;p&gt;In recent years, there&#x2019;s been an increasing amount of talk about the advantages of schemaless data. Being schemaless is one of the main reasons for interest in NoSQL databases. This infodeck explores the subtleties involved in schemalessness, both with respect to databases and in-memory data structures. These subtleties are present both in the meaning of schemaless and in the advantages and disadvantages of using a schemaless approach.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Activity Update</title>
    <link href="http://martinfowler.com/snips/201212181413.html"/>
    <updated>2012-12-18T14:13:00-05:00</updated>
    <id>tag:martinfowler.com,2012-12-18:Activity-Update</id>
    <content type="html">
      &lt;p&gt;My site hasn&#x2019;t seen any updates for over a month, so I thought I&#x2019;d
      make a quick note of what I&#x2019;ve been up to. On the whole I&#x2019;m not
      someone who tries to make a regular schedule of site updates - I write
      as I have the time, energy, and inspiration to do so. Regular articles
      were important in the days of magazines, but in the online world with
      notifications via RSS and twitter, I don&#x2019;t see any reason to tie
      myself to a schedule.&lt;/p&gt;

      &lt;p&gt;Usually when I go quiet for a few weeks, it&#x2019;s due to travel. When I&#x2019;m
      on the grind of speaking I&#x2019;m too busy, tired, and grumpy to do any
      writing. But that&#x2019;s not the reason for my recent quiet period, as I&#x2019;ve
      been happily at home. Indeed I&#x2019;ve been working steadily at a couple
      more &lt;a href="http://martinfowler.com/bliki/Infodeck.html"&gt;infodecks&lt;/a&gt;, and this involves both working on the content of
      the infodecks and on the toolchain to build them. I&#x2019;ve added more
      features to the toolchain in addition to what I had for the
      &lt;a href="http://martinfowler.com/articles/multiMobile"&gt;multi-mobile deck&lt;/a&gt;, which should provide a more dynamic experience.
      I&#x2019;ve been enjoying the mix of writing and building tools to support
      that writing - and I expect to be publishing these infodecks after the
      Christmas/New Year slowdown.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 37</title>
    <link href="http://martinfowler.com/photos/37.html"/>
    <updated>2012-11-16T09:31:00-05:00</updated>
    <id>tag:martinfowler.com,2012-11-16:photostream-37</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/37.html'&gt;&lt;img src = 'http://martinfowler.com/photos/37.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Vancouver, BC&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>40% off Signature Series Promotion</title>
    <link href="http://martinfowler.com/snips/201211150922.html"/>
    <updated>2012-11-15T09:22:00-05:00</updated>
    <id>tag:martinfowler.com,2012-11-15:40--off-Signature-Series-Promotion</id>
    <content type="html">
      &lt;p&gt;Addison-Wesley is doing a &lt;a href="http://www.informit.com/promotions/promotion.aspx?promo=138302"&gt;promotion&lt;/a&gt; on books in their signature
      series. This includes all the books in &lt;a href="http://martinfowler.com/books/"&gt;my signature series&lt;/a&gt;, but also
      the other signers: Kent Beck and Mike Cohn. The deal is that if you buy two or
      more signature series books from &lt;a href="http://www.informit.com"&gt;InformIT&lt;/a&gt; you get 40% off. The offer
      is good for physical and electronic books and is on until the end of
      2012. To get the discount, use the discount code AWSS2012 during
      check-out. All my books pages have links to the relevant
      InformIT page - they do a &lt;a href="http://martinfowler.com/books/buying.html"&gt;good arrangement for multi-format ebooks&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 36</title>
    <link href="http://martinfowler.com/photos/36.html"/>
    <updated>2012-11-04T10:38:00-05:00</updated>
    <id>tag:martinfowler.com,2012-11-04:photostream-36</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/36.html'&gt;&lt;img src = 'http://martinfowler.com/photos/36.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Aurora, NY, Finger Lakes&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>New ThoughtWorks Technology Radar</title>
    <link href="http://www.thoughtworks.com/radar"/>
    <updated>2012-10-24T10:14:00-04:00</updated>
    <id>tag:martinfowler.com,2012-10-24:New-ThoughtWorks-Technology-Radar</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.thoughtworks.com/radar'&gt;&lt;img src = 'http://martinfowler.com/snips/tw-radar.jpg' width = '68' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The ThoughtWorks TAB has released the latest edition of our &lt;a href="http://www.thoughtworks.com/radar"&gt;technology
      radar&lt;/a&gt;. As usual this provides our current view on what
      technologies are interesting, generated by a mix of our technological
      curiosity and project experience. I&#x2019;ve also &lt;a href="http://martinfowler.com/articles/radar-faq.html"&gt;added a FAQ&lt;/a&gt; on my site to
      answer common questions about radar, such as who on earth the
      ThoughtWorks TAB is.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 35</title>
    <link href="http://martinfowler.com/photos/35.html"/>
    <updated>2012-10-19T15:01:00-04:00</updated>
    <id>tag:martinfowler.com,2012-10-19:photostream-35</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/35.html'&gt;&lt;img src = 'http://martinfowler.com/photos/35.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Chinon, France&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Calatrava</title>
    <link href="http://martinfowler.com/snips/201210151007.html"/>
    <updated>2012-10-15T10:07:00-04:00</updated>
    <id>tag:martinfowler.com,2012-10-15:Calatrava</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201210151007.html'&gt;&lt;img src = 'http://martinfowler.com/snips/calatrava-logo.png' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;A couple of months ago I wrote an &lt;a href="http://martinfowler.com/articles/multiMobile"&gt;infodeck about developing mobile
      applications for multiple devices&lt;/a&gt;. A core point of the deck is that
      for the best user-experience you need several native applications, but this
      is expensive. To reduce cost a mobile web application works on all
      suitable devices, but a web-app limits your user-interface. The result
      is an unavoidable choice between user-experience and cost.&lt;/p&gt;

      &lt;p&gt;While we can&#x2019;t make that trade-off go away, we can turn a binary
      choice into a more graduated scale by developing hybrid applications
      that mix web and native technologies. At ThoughtWorks we&#x2019;ve been
      pursuing this path on various client projects, with some success.
      We&#x2019;ve now developed enough understanding on how to approach a hybrid
      application to make it worth sharing some code, so we recently
      released Calatrava, which is a framework to enable this web-native
      interoperation.&lt;/p&gt;

      &lt;p&gt;Calatrava is suitable for applications with significant client-side
      domain logic and when the application a channel for your product
      rather than the product itself. It is not suitable if most of your
      code is UI code (such as a game) or if a web app provides a
      sufficiently good user-experience. Calatrava is probably most valuable
      when you want to pursue an incremental release strategy, such as
      &lt;a href="http://martinfowler.com/articles/mobileImplStrategy.html#cover-your-bases"&gt;cover-your-bases&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;For more information look at the &lt;a href="http://calatrava.github.com/"&gt;calatrava home page on github&lt;/a&gt;, and the
      &lt;a href="http://overwatering.org/blog/2012/10/announcing-calatrava/"&gt;launch announcement by maintainer Giles Alexander&lt;/a&gt;. There&#x2019;s also an
      overview on a &lt;a href="http://martinfowler.com/articles/multiMobile/#calatrava"&gt;single infodeck slide&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Appearing on Hanselminutes with Jez</title>
    <link href="http://www.hanselminutes.com/339/continuous-delivery-with-jez-humble-and-martin-fowler"/>
    <updated>2012-10-11T08:25:00-04:00</updated>
    <id>tag:martinfowler.com,2012-10-11:Appearing-on-Hanselminutes-with-Jez</id>
    <content type="html">
      &lt;p&gt;Last week I was at the &lt;a href="http://gotocon.com/aarhus-2012/"&gt;goto conference&lt;/a&gt; in Aarhus. Also there was &lt;a href="http://www.hanselman.com/blog/"&gt;Scott
      Hanselman&lt;/a&gt;, and wherever Scott goes, he takes his portable recording
      studio and his titanium arm-twister. So before long I found myself in
      a quiet room with him and Jez Humble to &lt;a href="http://www.hanselminutes.com/339/continuous-delivery-with-jez-humble-and-martin-fowler"&gt;talk about Continuous
      Delivery&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Key Points from NoSQL Distilled</title>
    <link href="http://martinfowler.com/articles/nosqlKeyPoints.html"/>
    <updated>2012-09-12T10:22:00-04:00</updated>
    <id>tag:martinfowler.com,2012-09-12:Key-Points-from-NoSQL-Distilled</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/nosqlKeyPoints.html'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;One the aspects of our design for NoSQL Distilled is that most
      chapters finish with a section of key points - short bullets that
      summarize the content of the chapter. I&#x2019;ve now turned these into a web
      page that thus provides a summary of the key points of the book -
      which can act is a quick refresher for those that have the book and an
      indication of the content of the book for those who are contemplating
      buying it.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Modern Mocking Tools and Black Magic</title>
    <link href="http://martinfowler.com/articles/modernMockingTools.html"/>
    <updated>2012-09-10T09:15:00-04:00</updated>
    <id>tag:martinfowler.com,2012-09-10:Modern-Mocking-Tools-and-Black-Magic</id>
    <content type="html">
      &lt;p&gt;Modern mocking tools, such as JMockIt,  have become extremely capable of interposing
      themselves into difficult places. As such they are able to
      deal with increasingly awkward legacy situations, allowing you to
      introduce seams to help get a code base under test. But in this article
      my colleague Brett Schuchert explores a dark side of this
      capability, one that casts serious concerns about using them in
      many situations. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 34</title>
    <link href="http://martinfowler.com/photos/34.html"/>
    <updated>2012-09-08T14:47:00-04:00</updated>
    <id>tag:martinfowler.com,2012-09-08:photostream-34</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/34.html'&gt;&lt;img src = 'http://martinfowler.com/photos/34.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Malhamdale, Yorkshire, England&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Proof-of-concept of using Google's BigQuery</title>
    <link href="http://martinfowler.com/articles/bigQueryPOC.html"/>
    <updated>2012-09-04T07:02:32-04:00</updated>
    <id>tag:martinfowler.com,2012-09-04:Proof-of-concept-of-using-Google-s-BigQuery</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/bigQueryPOC.html'&gt;&lt;img src = 'http://martinfowler.com/articles/ian-cartwright.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;My colleague Ian Cartwright has contributed a short write-up of a
      week-long proof-of-concept project we did with AutoTrader to assess
      the viability of using Google&#x2019;s BigQuery technology. The software
      produced 7-10 second response times for a dataset of 750 million rows.
      The article describes what they did and summarizes the lessons they
      learned from the experience.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 33</title>
    <link href="http://martinfowler.com/photos/33.html"/>
    <updated>2012-08-25T09:31:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-25:photostream-33</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/33.html'&gt;&lt;img src = 'http://martinfowler.com/photos/33.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Mount Champlain, Acadia N.P., ME&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>NoSQL Distilled ebook from InformIT</title>
    <link href="http://martinfowler.com/snips/201208241010.html"/>
    <updated>2012-08-24T10:10:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-24:NoSQL-Distilled-ebook-from-InformIT</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201208241010.html'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;InformIT now has ebooks available, so this means that &lt;a href="http://martinfowler.com/books/nosql.html"&gt;NoSQL Distilled&lt;/a&gt;
      is now available in all ebook formats. As all the formats get
      complicated, I&#x2019;ve written a &lt;a href="http://martinfowler.com/books/buying.html"&gt;brief note on some options for buying
      paper and electronic books&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;Some people have asked about when the paper books will reach other
      countries, including Amazon&#x2019;s non-US stores. I&#x2019;m afraid I have no
      information on that.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking in Aarhus and Berlin</title>
    <link href="http://martinfowler.com/snips/201208221547.html"/>
    <updated>2012-08-22T15:47:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-22:Speaking-in-Aarhus-and-Berlin</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201208221547.html'&gt;&lt;img src = 'http://martinfowler.com/bliki/images/goto2011/aarhus.jpg' width = '160' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;Next month I&#x2019;ll be spending a chunk of time in Europe. I have two
      talks lined up. Firstly I&#x2019;ll be turning up in Aarhus at &lt;a href="http://gotocon.com/aarhus-2012/"&gt;my favorite conference&lt;/a&gt;
      where I&#x2019;ll be kicking off the NoSQL track on October 3rd with &lt;a href="http://gotocon.com/aarhus-2012/presentation/Introduction%20to%20NoSQL"&gt;an introduction to
      NoSQL&lt;/a&gt; - roughly based on material from &lt;a href="http://martinfowler.com/books/nosql.html"&gt;NoSQL Distilled&lt;/a&gt;. &lt;/p&gt;

      &lt;p&gt;Then, on October 4, I&#x2019;ll be &lt;a href="http://www.thoughtworks.com/events/martin-fowler-jez-humble-berlin"&gt;speaking in Berlin at a ThoughtWorks event&lt;/a&gt;
      with &lt;a href="http://continuousdelivery.com/"&gt;Jez Humble&lt;/a&gt;. For that I&#x2019;ll do one of my usual &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;Suites of Talks&lt;/a&gt;.
      There will be some NoSQL in the suite, but probably mixed with some
      other material too. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Best-Selling SQL book</title>
    <link href="http://martinfowler.com/snips/201208221420.html"/>
    <updated>2012-08-22T14:20:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-22:Best-Selling-SQL-book</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201208221420.html'&gt;&lt;img src = 'http://martinfowler.com/snips/amazon1.png' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I love the irony.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>NoSQL Guide Page</title>
    <link href="http://martinfowler.com/nosql.html"/>
    <updated>2012-08-22T10:54:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-22:NoSQL-Guide-Page</id>
    <content type="html">
      &lt;p&gt;I&#x2019;ve added a &lt;a href="http://martinfowler.com/nosql.html"&gt;guide page on NoSQL&lt;/a&gt; to martinfowler.com. I&#x2019;ll
      use this to collect together links to material related to NoSQL, Polyglot
      Persistence, and other &lt;a href="http://www.infoq.com/presentations/The-Evolving-Panorama-of-Data"&gt;changes in the panorama of data&lt;/a&gt;. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>NoSQL Distilled Available on Kindle</title>
    <link href="http://martinfowler.com/snips/201208221033.html"/>
    <updated>2012-08-22T10:33:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-22:NoSQL-Distilled-Available-on-Kindle</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201208221033.html'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Amazon now has &lt;a href="http://martinfowler.com/books/nosql.html"&gt;NoSQL Distilled&lt;/a&gt; available on Kindle, so those of
      you who prefer that format can now get an instant fix of our deathless
      prose. If you prefer an epub ebook, then InformIT will have that soon,
      but they are still showing pre-order. I don&#x2019;t know why the ebook
      versions have been so laggardly - but I know enough to blame
      computers.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 32</title>
    <link href="http://martinfowler.com/photos/32.html"/>
    <updated>2012-08-18T10:33:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-18:photostream-32</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/32.html'&gt;&lt;img src = 'http://martinfowler.com/photos/32.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Jackson Lake Lodge, Grand Tetons N.P., WY&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>NoSQL Distilled Now Available</title>
    <link href="http://martinfowler.com/snips/201208171335.html"/>
    <updated>2012-08-17T13:35:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-17:NoSQL-Distilled-Now-Available</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201208171335.html'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;It&#x2019;s now August 17th, and &lt;a href="http://martinfowler.com/books/nosql.html"&gt;NoSQL Distilled&lt;/a&gt; is now officially available.
      My copy arrived a day or two ago, and it&#x2019;s good to see it in paper.
      Amazon has it available for order for physical copy. Currently they
      aren&#x2019;t showing it as available for Kindle, but that should change in
      the next few days. InformIT is still showing a pre-order status, but
      again that should change soon.&lt;/p&gt;

      &lt;p&gt;It also seems I made a mistake earlier with the page count, which actually is
      only 152 pages. So we only busted our budget by two pages after all.&lt;/p&gt;

      &lt;p&gt;(I&#x2019;ve updated my &lt;a href="http://martinfowler.com/books"&gt;books pages&lt;/a&gt; to add a new page for this book.)&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Mountain Lion and Nokogiri</title>
    <link href="http://martinfowler.com/snips/201208142012.html"/>
    <updated>2012-08-14T20:12:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-14:Mountain-Lion-and-Nokogiri</id>
    <content type="html">
      &lt;p&gt;Today was the day I attempted the upgrade to Mountain Lion. Upgrading
      all the way from Snow Leopard (long story). The tedious first step is
      making sure I have backups, usually multiple backups, in addition to
      the ones I keep by default. Computers hate me, so I&#x2019;ve learned to be
      paranoid.&lt;/p&gt;

      &lt;p&gt;My first serious hitch was with Aperture. I&#x2019;d bought a download ages
      ago, when the route was to download a trial version and buy a product
      key. I still have the key, but there&#x2019;s no place to download the trial
      version from. Fortunately there was a very helpful man on Apple&#x2019;s
      telephone support who solved that one. +1 to him for being so helpful,
      but -2 for Apple for making it hard in the first place.&lt;/p&gt;

      &lt;p&gt;My more serious trouble was with Nokogiri, ruby&#x2019;s XML processing
      library. Since almost all my website is XML transformed to HTML via
      Nokogiri and Ruby, this is rather crucial to me. But I had no end of
      trouble finding some way to get Nokogiri to install and work. Looking
      out on the web there are several pages of advice, with different
      combinations of animals to sacrifice in various orders. &lt;/p&gt;

      &lt;p&gt;In the end I got it working, but not in such a way that I have a
      confident trail for others to follow. I installed XCode command line
      tools, later the full XCode itself (don&#x2019;t know if that was a factor).
      I initially used homebrew for supporting libraries but without success. I tried using
      rvm, but it failed (and I backed it out). In the end I installed libxml2
      and libxslt using Macports and got it all working on the installed
      ruby 1.8.7.&lt;/p&gt;

      &lt;p&gt;I can only hope that this is just early days of Mountain Lion, but the
      situation is really too messy. It&#x2019;s very troubling that the default
      install of ruby is still the elderly 1.8.7. I do need to share my
      scripts from time to time with others who are not active rubyists. It
      would be nice if there was a simpler installation process for them
      than my worry-ridden afternoon. I find myself pining for
      the days of the one-click windows install. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 31</title>
    <link href="http://martinfowler.com/photos/31.html"/>
    <updated>2012-08-11T11:19:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-11:photostream-31</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/31.html'&gt;&lt;img src = 'http://martinfowler.com/photos/31.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Yellowstone N.P., WY&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Your Path through Agile Fluency</title>
    <link href="http://martinfowler.com/articles/agileFluency.html"/>
    <updated>2012-08-09T08:58:00-04:00</updated>
    <id>tag:martinfowler.com,2012-08-09:Your-Path-through-Agile-Fluency</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/agileFluency.html'&gt;&lt;img src = 'http://martinfowler.com/articles/images/agileFluency/path.png' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="http://futureworksconsulting.com/"&gt;Diana Larsen&lt;/a&gt; and &lt;a href="http://jamesshore.com/"&gt;James Shore&lt;/a&gt; were actively involved with agile
      methods before they were fashionable. They have spent many years helping
      organizations explore agile development and I&#x2019;ve always found their
      opinions worth listening to. When I get requests to review articles I rarely
      have time to read them, but a recent request by this pair piqued
      my interest.&lt;/p&gt;

      &lt;p&gt;When I read their draft on the stages of agile fluency, I immediately
      offerred to publish it on my site. The article looks at how teams
      pass through four stages of fluency with agile methods. Each stage
      brings benefits, but demands investment. Not all teams should go
      through all the stages. The model they&#x2019;ve come up with is nicely
      simple and resonates with tales told by my colleagues. I think it
      provides a good framework for thinking about the style of agile
      development you are at and where you want to be.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 30</title>
    <link href="http://martinfowler.com/photos/30.html"/>
    <updated>2012-07-29T10:17:00-04:00</updated>
    <id>tag:martinfowler.com,2012-07-29:photostream-30</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/30.html'&gt;&lt;img src = 'http://martinfowler.com/photos/30.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Yellowstone N.P., WY&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: RigorousAgile</title>
    <link href="http://martinfowler.com/bliki/RigorousAgile.html"/>
    <updated>2012-07-26T15:24:00-04:00</updated>
    <id>tag:martinfowler.com,2012-07-26:Retreaded--RigorousAgile</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 29 May 2005&lt;/p&gt;

      &lt;p&gt;I often run into a complaint that agile methods don't have a
      rigorous definition. The complainer may talk about how this means
      that you can't tell if a particular team is using an agile method or
      not. They may also say that this makes it hard to teach people how
      to do agile methods - what's the curriculum?&lt;/p&gt;

      &lt;p&gt;To some degree I do feel the pain of this complaint - but
      I accept there is no cure. This lack of rigorousness is part of the
      defining nature of agile methods, part of its core philosophy.&lt;/p&gt;

      &lt;p&gt;One of the fundamental problems of thought processes in general -
      and of software development in particular - is the very varied nature
      of the settings. Different kinds of systems have different kinds of
      pressures and forces, which makes it very difficult to come up with a
      rigorous statement of what to do that's sufficient to cover them. This
      effect is compounded by the fact that software development is such a
      people-oriented activity, and people are naturally &lt;a href="http://alistair.cockburn.us/Characterizing+people+as+non-linear%2c+first-order+components+in+software+development"&gt;inconsistent

      and highly variable&lt;/a&gt;. The conclusion that agilists made from this
      is that's its not effective to try and bind software development to a
      rigorous process, because that's ignoring the essential nature of the
      primary (human) components that will execute that process.&lt;/p&gt;

      &lt;p&gt;(It's probably because our profession is to work with computers
      is what leads us to want to program human systems the same way that
      we program computers - despite the fact that they are so different.)&lt;/p&gt;

      &lt;p&gt;The upshot of all this is that agile methods fundamentally expect
      teams to decide what process to follow and furthermore expect teams
      to actively and regularly change their process. Any attempt to
      define a rigorous process that can be tested for conformance runs
      contrary to this philosophy.&lt;/p&gt;

      &lt;p&gt;I can't deny that this is frustrating. How can you do a survey on
      whether agile methods are more effective that alternatives, or
      whether Extreme Programming is more effective than Scrum, when you
      can't get a clear definition of what Scrum is in the first place? If
      a client wants a system built using Extreme Programming how can they
      tell if it's really being done?. There is a sense of "I know it when
      I see it",  but it requires an
      experienced practitioner to have that sense and even then there's
      lots of room for such practitioners to disagree.&lt;/p&gt;

      &lt;p&gt;I don't have an answer to this conundrum. Indeed I don't think
      there &lt;i&gt;is&lt;/i&gt; an answer. It's a an unfortunate consequence of the
      activity itself, just as getting wet is an unavoidable consequence
      of swimming.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 26 Jul 2012&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/RigorousAgile.html&amp;amp;text=Bliki: RigorousAgile" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/RigorousAgile.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/RigorousAgile.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>NoSQL Distilled pre-order on InformIT with 35% discount</title>
    <link href="http://martinfowler.com/snips/201207261026.html"/>
    <updated>2012-07-26T10:26:00-04:00</updated>
    <id>tag:martinfowler.com,2012-07-26:NoSQL-Distilled-pre-order-on-InformIT-with-35--discount</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201207261026.html'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;ve been enjoying a brief vacation in Oregon (enjoying the excellent
      &lt;a href="http://www.osfashland.org/"&gt;Oregon Shakespeare Festival&lt;/a&gt; and a nice mix of hikes). So I&#x2019;m late in
      mentioning that &lt;a href="http://www.informit.com/store/product.aspx?isbn=0321826620"&gt;NoSQL Distilled is now available for pre-order on
      InformIT&lt;/a&gt;. Its ship date is August 17. &lt;/p&gt;

      &lt;p&gt;If you pre-order you can get 35% off by entering discount code
      FOWLER6626 during checkout (this offer expires on August 17). InformIT
      is also running an offer where you get a 30 day trial to
      Safari Books Online if you place an order on InformIT. &lt;/p&gt;

      &lt;p&gt;The book has now completed production and has gone off to the
      printers. As I understand it the final ebook will appear when the
      printed book appears on August 17. Until then Safari subscribers can
      still read the &lt;a href="http://my.safaribooksonline.com/9780133036138"&gt;rough cut&lt;/a&gt;, which includes the copy-edited text, but
      lacks the final layout and index.&lt;/p&gt;

      &lt;p&gt;The final book has 172 pages, which is sadly longer than we&#x2019;d
      hoped. We hope you&#x2019;ll forgive us for that.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 29</title>
    <link href="http://martinfowler.com/photos/29.html"/>
    <updated>2012-07-14T12:39:00-04:00</updated>
    <id>tag:martinfowler.com,2012-07-14:photostream-29</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/29.html'&gt;&lt;img src = 'http://martinfowler.com/photos/29.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Outside Imperial Palace, Tokyo, Japan&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: SemanticDiffusion</title>
    <link href="http://martinfowler.com/bliki/SemanticDiffusion.html"/>
    <updated>2012-07-11T18:48:00-04:00</updated>
    <id>tag:martinfowler.com,2012-07-11:Retreaded--SemanticDiffusion</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 14 Dec 2006&lt;/p&gt;

      &lt;p&gt;I have the habit of creating &lt;a href="http://martinfowler.com/bliki/Neologism.html"&gt;Neologism&lt;/a&gt;s to describe
      the things I see in software development. It's a common habit amongst
      writers in this field, for software development still lacks much useful
      jargon. One of the problems with building a jargon is that terms
      are vulnerable to losing their meaning, in a process of
      semantic diffusion - to use yet another potential addition to our
      jargon.&lt;/p&gt;

      &lt;p&gt;Semantic diffusion occurs when you have a word that is coined a
      person or group, often with a pretty good definition, but then gets
      spread through the wider community in a way that weakens that
      definition. This weakening risks losing the definition entirely -
      and with it any usefulness to the term.&lt;/p&gt;

      &lt;p&gt;I'm partly prompted to write this because I see this semantic
      diffusion happening very publicly to
      two terms at the moment: 'agile' and '&lt;a href="http://martinfowler.com/bliki/Web2.0.html"&gt;Web2.0&lt;/a&gt;'. Both were coined in the
      last few years and both come with lengthy definitions. (Agile has
      the &lt;a href="http://agilemanifesto.org/"&gt;agile manifesto&lt;/a&gt;,
      together with numerous books and &lt;a href="http://martinfowler.com/articles/newMethodology.html"&gt;articles&lt;/a&gt; by
      the authors of the manifesto. Web 2.0 has an excellent &lt;a href="http://www.oreillynet.com/pub/a/oreilly/tim/news/2005/09/30/what-is-web-20.html"&gt;definitional
      article&lt;/a&gt; by Tim O'Reilly.) Yet both of these face a lot of corruption
      in the field. I've run into people who think agile methods mean you
      shouldn't do any planning and those who think Web 2.0 is solely
      about using AJAX. (A more personal case is &lt;a href="http://martinfowler.com/bliki/RefactoringMalapropism.html"&gt;RefactoringMalapropism&lt;/a&gt;,
      but I'll leave that aside for the moment.)&lt;/p&gt;

      &lt;p&gt;Semantic diffusion is essentially a succession of Chinese
      whispers where a different group of people to the originators of a
      term  start talking about it without being careful about following the
      original definition. These people are listened to by a further group
      which then goes on to add their own distortions. After a few of these
      hand-offs it's easy to lose a lot of the key meaning of the term
      unless you make the point of going back to the originators. It's
      ironic that it's popular terms that tend to suffer from this the most.
      That's inevitable, of course, since unpopular terms have less people
      to create the Chinese whisper chains.&lt;/p&gt;

      &lt;p&gt;Semantic diffusion tends to coincide with hype phase of an idea.
      As an idea becomes attractive, lots of people are... well... attracted. Many
      of these followers talk about the term and teach about it.  If these
      people aren't careful to go back to the source, the Chinese whispers
      begin. Popular ideas also spread primarily though communication media
      that are more likely to lead to misunderstanding - such as
      writing. Many followers aren't fortunate enough to work directly with
      the originators and thus learn directly from them.&lt;/p&gt;

      &lt;p&gt;A related indicator to popularity is desirability. A word that
      sounds good may be more likely to suffer from semantic diffusion.
      'Agile' sounds like something you'd certainly want to be, the antonyms
      of agile aren't at all appealing. Who would want to still be merely
      1.0 of the web? Kent Beck noticed this effect and thus deliberately
      picked Extreme Programming as a name because it less inherently
      desirable: 'extreme' is often used as a pejorative. Using a less
      desirable term may reduce semantic diffusion, but I don't think it
      avoids the problem completely. After all we saw semantic diffusion
      occur to 'object-oriented' which is a neutral term.&lt;/p&gt;

      &lt;p&gt;Semantic diffusion is more likely to occur with things that are
      broad concepts rather than hard technologies. Ruby on Rails is
      getting a lot of hype at the moment, but since it's a concrete tool
      it's hard for its meaning to weaken. Extreme Programming's list of
      concrete practices may also reduce this problem compared to agile's
      broader list of values and principles.&lt;/p&gt;

      &lt;p&gt;Semantic diffusion is a painful process to watch, particularly
      for those who find the ideas useful. At the moment I see signs of despair
      for both of these terms, some people in the agile world are talking
      of ditching the word agile.&lt;/p&gt;

      &lt;p&gt;I'm more sanguine about all this, largely because I've seen it
      before. There was a time when almost any software tool or method was
      described as object-oriented. But now, years later, the essential
      meaning of OO is reasonably well understood. I saw the same thing
      happen with patterns. So terms do recover their semantic integrity and
      the current diffusion doesn't inevitably mean the terms will lose
      their meaning. I'm also less worried about it because I expected it,
      again having gone through this process before. I think it's an
      inevitable consequence of ideas becoming popular and despite its
      problems, I prefer the hype to ignorance. A final comforting thought
      is that once the equally inevitable backlash comes we get a refocusing
      on the original meaning. As I'm writing this I'm comforted by the fact
      that I can't think of a
      term that lost its meaning entirely, although I'm sure it's happened.
      (SOA doesn't count, as I don't think there ever was a commonly agreed
      meaning for that to start with.)&lt;/p&gt;

      &lt;p&gt;Whatever the eventual outcome we still have to cope with semantic
      diffusion as it happens. One option is abandonment, to drop the
      diffuse term and pick a new one. I don't like this option because a
      new term only adds to the confusion and even if you're successful you just
      end up repeating the process for the new term. So my preference is to keep
      re-articulating the current terminology, pointing to those who
      understand the true meaning.&lt;/p&gt;

      &lt;p&gt;A further complication is that these terms also shift. I'm sure
      if you asked the original seventeen authors of the agile manifesto,
      they would come up with a different document today. (Let alone the
      fact that that group wouldn't be the best group to speak for the
      movement today.) Again it's a responsibility for those who are
      identified as originators to point this out, both by talking about the
      way the ideas evolve and by pointing to new people who are playing an
      active role in that evolution. (I'm pleased that the original
      seventeen &lt;a href="http://martinfowler.com/articles/agileStory.html"&gt;"let the ship
      sail"&lt;/a&gt; to go its own way.) Let's not forget there's a tricky
      balance between holding to a clear definition and dogmatism. &lt;/p&gt;

      &lt;p&gt;All of this is hard work, but a good term is worth fighting for -
      particularly since the only bullets you need are words.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 11 Jul 2012&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/SemanticDiffusion.html&amp;amp;text=Bliki: SemanticDiffusion" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/SemanticDiffusion.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/SemanticDiffusion.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 28</title>
    <link href="http://martinfowler.com/photos/28.html"/>
    <updated>2012-06-21T20:03:00-04:00</updated>
    <id>tag:martinfowler.com,2012-06-21:photostream-28</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/28.html'&gt;&lt;img src = 'http://martinfowler.com/photos/28.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Portland Sea Dogs, Portland, ME&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Infodeck on handling multiple mobile devices</title>
    <link href="http://martinfowler.com/articles/multiMobile/"/>
    <updated>2012-06-19T10:43:00-04:00</updated>
    <id>tag:martinfowler.com,2012-06-19:Infodeck-on-handling-multiple-mobile-devices</id>
    <content type="html">
      &lt;p&gt;A common question for people in mobile development is to how to deal
      with the wide range of mobile devices available. Do we have to write
      native applications for every single device? Or is there a way to
      reuse code for similar applications. I&#x2019;ve written an infodeck to
      explore this problem and suggest how to think about dealing with it.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Facebook page for my tweets</title>
    <link href="http://www.facebook.com/martinFowlerThoughtWorks"/>
    <updated>2012-06-19T09:55:00-04:00</updated>
    <id>tag:martinfowler.com,2012-06-19:Facebook-page-for-my-tweets</id>
    <content type="html">
      &lt;p&gt;I&#x2019;ve &lt;a href="https://twitter.com/#!/martinfowler"&gt;been using Twitter&lt;/a&gt; for a few years to post about what
      I&#x2019;m up to, new activity on martinfowler.com, and other interesting
      things I find on the internets. Facebook has a facility to feed
      twitter activity to a Facebook page, which is handy for people who
      prefer tracking my posts on Facebook rather than Twitter. So I&#x2019;ve set
      up a &lt;a href="http://www.facebook.com/martinFowlerThoughtWorks"&gt;Facebook page to channel my tweets&lt;/a&gt;. If you &#x201C;like&#x201D;
      that page, Facebook will add my tweets to your Facebook news feed.&lt;/p&gt;

      &lt;p&gt;I don&#x2019;t intend to do anything more with this page than be a channel
      for my tweets, so this won&#x2019;t be anything new for people who
      use Twitter, but I&#x2019;m giving it a try to see if at least some people
      prefer to use Facebook.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>SE Radio podcast with Pramod on Agile Database Development</title>
    <link href="http://www.se-radio.net/2012/06/episode-186-martin-fowler-and-pramod-sadalage-on-agile-database-development/"/>
    <updated>2012-06-06T09:05:00-04:00</updated>
    <id>tag:martinfowler.com,2012-06-06:SE-Radio-podcast-with-Pramod-on-Agile-Database-Development</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.se-radio.net/2012/06/episode-186-martin-fowler-and-pramod-sadalage-on-agile-database-development/'&gt;&lt;img src = 'http://martinfowler.com/img/pramod.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;SE Radio has long been my favorite podcast on software development,
      so I&#x2019;m always happy to appear on it. I&#x2019;m extra-pleased this time,
      because it gives me the chance to highlight some valuable software development
      techniques that I feel are particularly under-used. &lt;/p&gt;

      &lt;p&gt;When we first started using agile methods at the beginning of this
      century, one of our biggest questions was how to handle database
      design in an agile way. Fortunately we had Pramod Sadalage around, a
      DBA who was determined to find a way to incorporate databases with the
      agile working style. He developed a set of techniques, including
      regular database refactoring and scripted migrations that are
      version-controlled with application code. These techniques have now
      becomes habitual for ThoughtWorks but have not been as widely adopted in
      the industry as I believe they should. This podcast provides an hour
      or so that outlines how this all works, which I&#x2019;m hoping will encourage
      greater usage of them.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 27</title>
    <link href="http://martinfowler.com/photos/27.html"/>
    <updated>2012-06-02T11:23:00-04:00</updated>
    <id>tag:martinfowler.com,2012-06-02:photostream-27</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/27.html'&gt;&lt;img src = 'http://martinfowler.com/photos/27.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Salem, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>NoSQL Distilled Rough Cut Now Visible</title>
    <link href="http://martinfowler.com/snips/201205310845.html"/>
    <updated>2012-05-31T09:45:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-31:NoSQL-Distilled-Rough-Cut-Now-Visible</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201205310845.html'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The &lt;a href="http://my.safaribooksonline.com/9780133036138"&gt;rough cut of NoSQL Distilled is now online&lt;/a&gt;. If you have a
      subscription that supports rough cuts you will see the whole book, if
      not you&#x2019;ll see a preview of the book with the table of contents and
      the first paragraph or two from each section. Remember this is a rough
      cut and has not been copy edited.&lt;/p&gt;

      &lt;p&gt;I was a bit hesitant to announce this, after my false sighting on
      Tuesday, but I&#x2019;ve had a few tweets now confirming that it&#x2019;s online.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>NoSQL Distilled rough cut available soon on Safari</title>
    <link href="http://martinfowler.com/snips/201205291040.html"/>
    <updated>2012-05-29T10:40:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-29:NoSQL-Distilled-rough-cut-available-soon-on-Safari</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201205291040.html'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;If you&#x2019;re a subscriber to Safari Books Online, you will soon see a
      copy of a &lt;a href="http://my.safaribooksonline.com/9780133036138"&gt;rough cut of NoSQL Distilled&lt;/a&gt;. This morning I said it
      was available, but I&#x2019;ve since learned that my Safari account has
      special privileges, so I was seeing it but others cannot. We expect it
      to be available in the next couple of days for everyone who has an
      account that includes rough cuts.&lt;/p&gt;

      &lt;p&gt;It&#x2019;s a rough cut, so it&#x2019;s still early in the production process, with
      few copy-edits done. But it gives you an early chance to take a look
      at the text and to pass on comments.&lt;/p&gt;

      &lt;p&gt;&lt;a href="http://www.safaribooksonline.com/"&gt;Safari Books Online&lt;/a&gt; is an online library that gives access
      to lots of software books, including those of Pearson and O&#x2019;Reilly.
      They have various levels of subscription, only some of which include
      rough cuts. For example there are two levels of individual
      subscription: bookshelf and library. Only the (more expensive) library
      individual subscription gives access to rough cuts.&lt;/p&gt;

      &lt;p&gt;I&#x2019;m sorry for any confusion I&#x2019;ve caused by my premature announcement.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: ServiceCustodian</title>
    <link href="http://martinfowler.com/bliki/ServiceCustodian.html"/>
    <updated>2012-05-24T09:01:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-24:Retreaded--ServiceCustodian</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 14 Nov 2008&lt;/p&gt;

      &lt;p&gt;Let's imagine a pretty world of SOA-happiness where the computing
      needs of an enterprise are split into many small applications that
      provide services to each other to allow effective collaboration. One
      fine morning a consumer service needs some information from a supplier
      service. The twist is that although the supplier service has the
      necessary data and processing logic to get this information, it
      doesn't yet expose that information through a service interface. The
      supplier has a potential service, but it isn't actually there yet.&lt;/p&gt;

      &lt;p&gt;In an ideal world the developers of the consumer service just asks
      the supplier service to develop the potential service and all is
      dandy. But life is not ideal - the sticking point here is that the
      developers of the supplier service have other things to do, usually
      things that are more important to their customer and management than
      helping out the consumer service team. &lt;/p&gt;

      &lt;p&gt;Recently I was chatting with my colleague Erik D&#xF6;rnenburg and he
      told me about an approach he saw a client use to deal with
      this problem. They took a leaf out of the open source play-book and
      made all their services into internal open source systems. This
      allows consumer service developers write the service themselves.&lt;/p&gt;

      &lt;p&gt;I'm sure many readers are rolling their eyes at the visions of
      chaos this would cause, but just as open source projects don't allow
      just anyone to edit anything; this client uses open-source-style control
      mechanisms. In particular each service has a couple of custodians -
      people whose responsibility it is to keep the service in a healthy
      state. In the normal course of events the consumer developer wouldn't
      actually commit changes to the supplier source tree directly,
      instead they send a patch to the custodian. Just like an open-source
      maintainer, the custodian receives the patch and reviews it to see
      if it's good enough to commit. If not there's a dialog with the
      consumer developer.&lt;/p&gt;

      &lt;p&gt;As Erik knows well from &lt;a href="http://erik.doernenburg.com/open-source-projects/"&gt;his own open
      source work&lt;/a&gt;, reviewing a patch is much less effort than making
      a change yourself. So although the custodian approach doesn't
      entirely eliminate the problem of consumer developers needing to wait
      on supplier developers, it does a lot to reduce the difficulty. And
      again following the open-source model, a consumer developer can be
      made a committer once the custodians are comfortable. This
      still means that commits can get reviewed by the custodians, but avoids
      the custodians becoming a bottleneck.&lt;/p&gt;

      &lt;p&gt;Related to this was their approach to a service registry. We've
      seen a lot of fancy products being sold to provide service registry
      capabilities so that people can lookup services and see how to use
      them. This client discarded them and used a
      &lt;a href="http://martinfowler.com/bliki/HumaneRegistry.html"&gt;HumaneRegistry&lt;/a&gt; instead.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 24 May 2012&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/ServiceCustodian.html&amp;amp;text=Bliki: ServiceCustodian" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/ServiceCustodian.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/ServiceCustodian.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 26</title>
    <link href="http://martinfowler.com/photos/26.html"/>
    <updated>2012-05-22T18:16:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-22:photostream-26</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/26.html'&gt;&lt;img src = 'http://martinfowler.com/photos/26.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Big Sur, CA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking in China</title>
    <link href="http://www.thoughtworks.com/events/software-design-21st-century-china-2012"/>
    <updated>2012-05-22T13:25:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-22:Speaking-in-China</id>
    <content type="html">
      &lt;p&gt;Here&#x2019;s the information on my talks in China (the page is in Chinese).
      I&#x2019;ll be giving talks in Chengdu &#x6210;&#x90FD; on the 10th and 11th, Wuhan &#x6B66;&#x6C49;
      on the 12th and Xi&#x2019;an &#x897F;&#x5B89; on the 13th. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking in Singapore</title>
    <link href="http://www.thoughtworks.com/events/software-design-21st-century-singapore-2012"/>
    <updated>2012-05-21T16:12:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-21:Speaking-in-Singapore</id>
    <content type="html">
      &lt;p&gt;Next month (June 7) I&#x2019;ll be speaking at a ThoughtWorks Quarterly briefing in
      Singapore. I&#x2019;ll be doing a &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;suite of talks&lt;/a&gt;, one of which I
      expect will be NoSQL-oriented. Also on the bill is Vivek Prahlad, a
      long-term colleague at ThoughtWorks, who I&#x2019;m looking forward to
      catching up with. This will be the my first time in Singapore
      (other than the airport).&lt;/p&gt;

      &lt;p&gt;I&#x2019;m then going on to talks in China: Chengdu, Wuhan, and Xi&#x2019;an. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Cover for NoSQL Distilled</title>
    <link href="http://martinfowler.com/snips/201205211610.html"/>
    <updated>2012-05-21T16:10:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-21:Cover-for-NoSQL-Distilled</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201205211610.html'&gt;&lt;img src = 'http://martinfowler.com/nosql.jpg' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Pramod and I now have a cover for our book &lt;a href="http://martinfowler.com/bliki/NosqlDistilled.html"&gt;NoSQL Distilled&lt;/a&gt;.
      Obsessive readers of my web site may &lt;a href="http://martinfowler.com/photos/12.html"&gt;recognize the photo&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Selecting a Mobile Implementation Strategy</title>
    <link href="http://martinfowler.com/articles/mobileImplStrategy.html"/>
    <updated>2012-05-21T09:21:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-21:Selecting-a-Mobile-Implementation-Strategy</id>
    <content type="html">
      &lt;p&gt;Over the last couple of years, we&#x2019;ve seen mobile development become an
      increasing part of our work at ThoughtWorks. One question that clients
      regularly have is how to make the decision about which devices to
      support and what proportion of effort should go to each device. In
      this article Giles Alexander outlines two opening gambits - laser and
      cover-your-bases - and how to choose between and build on these
      approaches.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 25</title>
    <link href="http://martinfowler.com/photos/25.html"/>
    <updated>2012-05-10T12:46:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-10:photostream-25</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/25.html'&gt;&lt;img src = 'http://martinfowler.com/photos/25.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Winterthur, DE&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: StandardStoryPoints</title>
    <link href="http://martinfowler.com/bliki/StandardStoryPoints.html"/>
    <updated>2012-05-10T12:30:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-10:Retreaded--StandardStoryPoints</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 06 Sep 2004&lt;/p&gt;

      &lt;p&gt;I've heard a couple of questions recently about coming up with a
      standard story point mechanism for multiple teams using extreme
      programming's planning approach. The hope is have several teams all
      using equivalent story points, so that three story points of effort
      on one team is the same as on another.&lt;/p&gt;

      &lt;p&gt;I think trying to come up with this at best of limited value, and
      at worst dangerous.&lt;/p&gt;

      &lt;p&gt;The estimating system of extreme programming is based on
      &lt;a href="http://martinfowler.com/bliki/XpVelocity.html"&gt;XpVelocity&lt;/a&gt; and &lt;a href="http://martinfowler.com/bliki/YesterdaysWeather.html"&gt;YesterdaysWeather&lt;/a&gt;. Inherent
      in this is the idea that when you make estimates, the actual units
      you estimate aren't important - what's important is you estimate
      by rough comparative value and use &lt;a href="http://martinfowler.com/bliki/YesterdaysWeather.html"&gt;YesterdaysWeather&lt;/a&gt;
      for calibration. &lt;/p&gt;

      &lt;p&gt;In this situation the story points act as an anchor for the
      feedback loop that Yesterday's Weather provides - nothing more.
      Baked into them are all sorts of assumptions about the nature of
      the team's task, the capability of the team, and whether the team
      are optimistic or pessimistic estimators. Once you try to come up
      with a standard across teams you are trying to normalize all of
      these factors. Trying to do this sounds very hard to me, and I'm
      not aware of anyone who has done this effectively. This doesn't
      mean its impossible, it just means it's hard.&lt;/p&gt;

      &lt;p&gt;The dangerous aspect comes from once you have a standard unit for
      measurement across teams, someone is inevitably going to use it to
      compare the performance of teams. Even if everyone swears till they
      are blue in the face that they won't use it for cross team
      measurement, there will always be the suspicion that this will
      happen eventually. This will cause teams to distort their
      measurements so that it seems that they get more story points
      done. My fear is that this will break the feedback loop of
      yesterday's weather and knock the planning process off kilter. I'm
      always suspicious about these things because while it would be
      incredibly valuable to have a way to measure productivity I think
      the nature of software is such that we &lt;a href="http://martinfowler.com/bliki/CannotMeasureProductivity.html"&gt;CannotMeasureProductivity&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;So to be worth trying, this has to yield some valuable benefits -
      but I don't see any. One reason that I've heard is to help people
      move onto teams and estimate more quickly. But you can't estimate on
      a new team until you get reasonably familiar with the problem and
      the current code base. As you do that you'll also get a feel for the
      relative sizes of story points on that team. We move people around
      between projects at ThoughtWorks and I've never heard anyone
      complain about difficulty of estimating when coming onto a new team
      due to differences in story points.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 10 May 2012&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/StandardStoryPoints.html&amp;amp;text=Bliki: StandardStoryPoints" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/StandardStoryPoints.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/StandardStoryPoints.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 24</title>
    <link href="http://martinfowler.com/photos/24.html"/>
    <updated>2012-05-05T10:04:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-05:photostream-24</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/24.html'&gt;&lt;img src = 'http://martinfowler.com/photos/24.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Boston, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: PublishedInterface</title>
    <link href="http://martinfowler.com/bliki/PublishedInterface.html"/>
    <updated>2012-05-03T10:18:00-04:00</updated>
    <id>tag:martinfowler.com,2012-05-03:Retreaded--PublishedInterface</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 26 Dec 2003&lt;/p&gt;

      &lt;p&gt;&lt;i&gt;Published Interface&lt;/i&gt; is a term I used (first in &lt;a href="http://martinfowler.com/books/refactoring.html"&gt;Refactoring&lt;/a&gt;)
      to refer to a class interface that's used outside the code base that
      it's defined in. As such it means more than public in Java and indeed
      even more than a non-internal public in C#. In my column for IEEE
      Software I argued
      that &lt;a href="http://martinfowler.com/ieeeSoftware/published.pdf"&gt;the distinction between published and public is actually more
      important than that between public and private.&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;The reason is that with a non-published interface you can change
      it and update the calling code since it is all within a single code
      base. Such things as renames can be done, and done easily with modern
      refactoring tools. But anything published so you can't reach the
      calling code needs more complicated treatment.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 03 May 2012&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/PublishedInterface.html&amp;amp;text=Bliki: PublishedInterface" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/PublishedInterface.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/PublishedInterface.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 23</title>
    <link href="http://martinfowler.com/photos/23.html"/>
    <updated>2012-04-27T21:10:00-04:00</updated>
    <id>tag:martinfowler.com,2012-04-27:photostream-23</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/23.html'&gt;&lt;img src = 'http://martinfowler.com/photos/23.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Middleton Place, Charleston, SC&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>An English Literature Podcast</title>
    <link href="http://martinfowler.com/snips/201204261902.html"/>
    <updated>2012-04-26T19:02:00-04:00</updated>
    <id>tag:martinfowler.com,2012-04-26:An-English-Literature-Podcast</id>
    <content type="html">
      &lt;p&gt;I&#x2019;ve added another &lt;a href="http://martinfowler.com/bliki/Podcasts.html"&gt;recommended podcast to my list&lt;/a&gt;, this
      one a is a treasure if you enjoy good fiction. &lt;a href="http://www.reallylikethisbook.com/"&gt;Why I Really Like This
      Book&lt;/a&gt; is a quirky sail through the lesser known waters of English
      Literature. The pilot is Kate Macdonald, who teaches English
      Literature but was frustrated at the limited range of books she could
      cover. Each podcast spends ten minutes or so exploring a single
      suggested book. Her first series was a random alphabetical wander, now
      she&#x2019;s taken to talking about sets of five books with a common theme. Recent
      sets include Five Appalling Fictional Women and Five Classic Detective
      Novels. If you&#x2019;re looking for ideas for books to curl up with, this is
      an excellent source of suggestions.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: CustomerAffinity</title>
    <link href="http://martinfowler.com/bliki/CustomerAffinity.html"/>
    <updated>2012-04-26T09:55:00-04:00</updated>
    <id>tag:martinfowler.com,2012-04-26:Retreaded--CustomerAffinity</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 28 Jul 2006&lt;/p&gt;

      &lt;p&gt;When someone is looking at what makes up a top-class enterprise
      software developer, often the conversation may turn to knowledge of
      frameworks and languages, or perhaps the ability to understand
      complicated algorithms and data structures. For me, one of the most
      important traits in a programmer, or indeed in a development team,
      is something that I'll call Customer Affinity. This is the interest
      and closeness that the developers have in the business problem that
      the software is addressing, and in the people who live in that
      business world.&lt;/p&gt;

      &lt;p&gt;There are many aspects to customer affinity. The first one is
      just the interest in the business, its processes and rules. I've
      always been fascinated by domains I've worked in: health care,
      derivatives, payroll, leasing - are all examples of really
      interesting domain problems with a lot of complexity that has to be
      organized and understood. For me aspects of a project such as
      object-relational mapping, remote process communication - what I
      think of as the plumbing of enterprise systems, don't have that same
      interest.&lt;/p&gt;

      &lt;p&gt;It's important that a team has the plumbing working and under
      control, but I believe that the more energy goes into the business
      problem, the more effective at providing value a team will be. Which
      is a good reason to use frameworks that solve and simplify as much of
      the plumbing as possible.&lt;/p&gt;

      &lt;p&gt;Another aspect of customer affinity is the ability to
      collaborate with domain experts. I don't think that detailed
      knowledge of the domain is an important thing for programmers to
      have; useful yes, but not important. What's more critical than
      knowledge is the ability to collaborate with those that have the
      knowledge.&lt;/p&gt;

      &lt;p&gt;My high regard for customer affinity is one the main reasons why
      I'm such a fan of Extreme Programming and other agile methods. I
      found it very significant that when Kent Beck summarized XP to his
      agile peers at the snowbird workshop which coined 'agile', he chose
      to describe not the technical elements of XP, but his desire to
      change the nature of the customer/developer interaction.&lt;/p&gt;

      &lt;p&gt;I've often heard this relationship mis-characterized. In
      particular there is a belief in some quarters that the customer team
      just comes up with stories which they throw at the developers. This
      characterization is rather like the notion that requirements are just
      lying out there to be gathered. Either way that's
      not much of a collaboration. Instead developers need to work together
      with domain people to
      generate ideas with developers learning a lot about the business in
      the process. &lt;/p&gt;

      &lt;p&gt;One of Kent's suggested names for 'Agile' was
      &lt;i&gt;conversational&lt;/i&gt; software development - the point being that it's
      a two way communication. This isn't something like a telecoms protocol
      that you can define, but the back and forth discussions about how
      software can enhance the business are where the real value
      lives. Much of this conversation is of half-baked ideas, some of which
      grow into valuable features - often ones that aren't things that the
      customer originally thought of.&lt;/p&gt;

      &lt;p&gt;One of the things that frustrates me is how organizations often
      try to squelch customer affinity. It's not something people admit to
      doing, but it's a common consequence of other
      decisions. Organizational barriers can contribute to squelching -
      I've come across places where
      you have to get your manager to arrange with another manager just so
      you can have a conversation with someone on the business side. That
      hardly encourages you to get inside the workings of the business.&lt;/p&gt;

      &lt;p&gt;I've often heard it said that enterprise software is boring, just
      shuffling data around, that people of talent will do "real" software
      that requires fancy algorithms, hardware hacks, or plenty of
      math. I feel that this usually  happens
      due to a lack of customer affinity. The real intellectual challenge
      of business software is figuring out what the real
      contribution of software can be to a business. You need both good
      technical and business knowledge to find that.  Working closely with
      business people to develop this knowledge, and
      &lt;a href="http://martinfowler.com/bliki/PleasingTheCustomer.html"&gt;PleasingTheCustomer&lt;/a&gt; as you do it, is  what makes
      enterprise software development fun - and motivation is the key to good
      and productive work.&lt;/p&gt;

      &lt;p&gt;There are plenty of bright and capable people who want to learn
      about the businesses they write software for. Too often
      organizations make it hard for them to do so. Until that changes,
      our profession will continue to under-deliver on our potential.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 26 Apr 2012&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/CustomerAffinity.html&amp;amp;text=Bliki: CustomerAffinity" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/CustomerAffinity.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/CustomerAffinity.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 22</title>
    <link href="http://martinfowler.com/photos/22.html"/>
    <updated>2012-04-17T15:35:00-04:00</updated>
    <id>tag:martinfowler.com,2012-04-17:photostream-22</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/22.html'&gt;&lt;img src = 'http://martinfowler.com/photos/22.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;London&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Progress on NoSQL Distilled</title>
    <link href="http://martinfowler.com/snips/201204171042.html"/>
    <updated>2012-04-17T10:42:00-04:00</updated>
    <id>tag:martinfowler.com,2012-04-17:Progress-on-NoSQL-Distilled</id>
    <content type="html">
      &lt;p&gt;Time for a progress report on &lt;a href="http://martinfowler.com/bliki/NosqlDistilled.html"&gt;NoSQL Distilled&lt;/a&gt;. We&#x2019;ve done a
      round of technical review and are now pretty happy with the text,
      happy enough to move it into production. &lt;/p&gt;

      &lt;p&gt;Production for a book these days is both more complicated and more
      responsive than it used to be. The next step on the book text is to do
      copy-editing and indexing. It sounds like we are going to get the &lt;a href="http://www.kirsanov.com/"&gt;same
      people&lt;/a&gt; I worked with on &lt;a href="http://martinfowler.com/books/dsl.html"&gt;my DSL book&lt;/a&gt;, which will be
      excellent news since they did a good job and were happy to work directly
      on the XML source in my repository. This simplifies and speeds up the
      whole process. They will also do the book design and convert the book
      in camera-ready for printing the physical books.&lt;/p&gt;

      &lt;p&gt;I suspect, however, that this book will see more electronic copies
      than physical ones. In parallel with the copy-editing we&#x2019;ll be
      preparing the electronic copies. We intend to do a rough-cut version
      of the book as soon as we can. This should be available through
      &lt;a href="http://www.informit.com/authors/bio.aspx?a=8877bf0c-92bd-4d0d-8317-d67fe8b88eee"&gt;InformIT&lt;/a&gt;, Amazon, and &lt;a href="http://my.safaribooksonline.com"&gt;Safari&lt;/a&gt;. I&#x2019;ll make further announcements here
      as these become visible. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Rebecca Parsons and I speak on The Evolving Panorama of Data</title>
    <link href="http://www.infoq.com/presentations/The-Evolving-Panorama-of-Data"/>
    <updated>2012-04-16T10:57:00-04:00</updated>
    <id>tag:martinfowler.com,2012-04-16:Rebecca-Parsons-and-I-speak-on-The-Evolving-Panorama-of-Data</id>
    <content type="html">
      &lt;p&gt;Our keynote at QCon London 2012 looks at the role data is playing in
      our lives (and that it&#x2019;s doing more than just getting bigger).&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;How the world of data is changing: its
      growing, becoming more distributed and connected. &lt;/li&gt;
      &lt;li&gt;The industry&#x2019;s response: the rise of NoSQL, the shift to service
      integration, the appearance of event sourcing, the impact of clouds
      and new analytics with a greater role for visualization. &lt;/li&gt;
      &lt;li&gt;How data is being used now, with a particular emphasis from Rebecca on
      data in the developing world. &lt;/li&gt;
      &lt;li&gt;What does all this
      mean to our personal responsibilities as software professionals.&lt;/li&gt;
      &lt;/ul&gt;
    </content>
  </entry>
  <entry>
    <title>Jez Humble and I speak on Continuous Delivery at YOW</title>
    <link href="http://yow.eventer.com/events/1004/talks/1062"/>
    <updated>2012-02-14T15:46:00-05:00</updated>
    <id>tag:martinfowler.com,2012-02-14:Jez-Humble-and-I-speak-on-Continuous-Delivery-at-YOW</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://yow.eventer.com/events/1004/talks/1062'&gt;&lt;img src = 'http://martinfowler.com/img/yow-snap.png' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Video of the one-hour overview presentation that Jez and I gave at YOW
      at the end of last year. We cover the rationale for Continuous
      Delivery, the deployment pipeline, continuous integration, devops, and
      deployment strategies. The highlight is Jez&#x2019;s personification of a
      release candidate as a hero in a greek myth.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 21</title>
    <link href="http://martinfowler.com/photos/21.html"/>
    <updated>2012-02-12T18:32:00-05:00</updated>
    <id>tag:martinfowler.com,2012-02-12:photostream-21</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/21.html'&gt;&lt;img src = 'http://martinfowler.com/photos/21.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;E&#x300;ze, France&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>ThoughtWorks recruiting event in New York</title>
    <link href="http://www.thoughtworks.com/events/get-hired-new-york-minute"/>
    <updated>2012-02-07T15:17:00-05:00</updated>
    <id>tag:martinfowler.com,2012-02-07:ThoughtWorks-recruiting-event-in-New-York</id>
    <content type="html">
      &lt;p&gt;This weekend, ThoughtWorks is hold a recruiting event in New York
      City. The idea is to compress the whole recruiting cycle down to a
      single weekend. The coding problem will be on Saturday, and those that
      pass that hurdle will be invited back for interviews on Sunday. The
      idea is that we&#x2019;ll get job offers to any successful candidates by
      Sunday evening. I&#x2019;ll be there for the first couple of hours on
      Saturday.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Infodeck on NoSQL and Polyglot Persistence</title>
    <link href="http://martinfowler.com/articles/nosql-intro"/>
    <updated>2012-02-07T10:26:00-05:00</updated>
    <id>tag:martinfowler.com,2012-02-07:Infodeck-on-NoSQL-and-Polyglot-Persistence</id>
    <content type="html">
      &lt;p&gt;Pramod and I have put together a short &lt;a href="http://martinfowler.com/articles/nosql-intro"&gt;infodeck&lt;/a&gt; (pdf) outlining the reasons
      why NoSQL databases are an important new dish on the software
      development menu. It&#x2019;s directed at non-technical managers and
      customers to provide an outline of why the data world has seen this
      new entrant and some direction as to the kinds of projects which
      should give them a closer look.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 20</title>
    <link href="http://martinfowler.com/photos/20.html"/>
    <updated>2012-02-04T16:54:00-05:00</updated>
    <id>tag:martinfowler.com,2012-02-04:photostream-20</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/20.html'&gt;&lt;img src = 'http://martinfowler.com/photos/20.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Stowe, VT&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Rebecca and I will be Keynoting at QCon London</title>
    <link href="http://martinfowler.com/snips/201201261024.html"/>
    <updated>2012-01-26T10:24:00-05:00</updated>
    <id>tag:martinfowler.com,2012-01-26:Rebecca-and-I-will-be-Keynoting-at-QCon-London</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201201261024.html'&gt;&lt;img src = 'http://martinfowler.com/snips/rebecca.jpg' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;QCon invited &lt;a href="http://www.thoughtworks.com/rebecca-parsons"&gt;Rebecca&lt;/a&gt; and I to do a &lt;a href="http://qconlondon.com/london-2012/presentation/The%20Data%20Panorama"&gt;keynote at QCon London&lt;/a&gt; (March
      7). Over the last year or so we&#x2019;ve been seeing more and more of a
      change in how organizations think about data, so that seems a natural
      choice to talk about. Our clients are seeing larger volumes of data,
      that they need to analyze more quickly and more cleverly. We&#x2019;re seeing
      &lt;a href="http://martinfowler.com/bliki/NosqlDefinition.html"&gt;different technologies for data storage&lt;/a&gt; that have loosened the
      vice-like grip of relational databases. And we find our profession
      needs to start thinking about what our responsibilities are in
      managing all of this information. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Rebecca and I talk about DSLs on Software Engineering Radio</title>
    <link href="http://www.se-radio.net/2012/01/episode-182-domain-specific-languages-with-martin-fowler-and-rebecca-parsons/"/>
    <updated>2012-01-26T09:36:00-05:00</updated>
    <id>tag:martinfowler.com,2012-01-26:Rebecca-and-I-talk-about-DSLs-on-Software-Engineering-Radio</id>
    <content type="html">
      &lt;p&gt;I&#x2019;ve long been a fan of the podcast series &lt;a href="http://www.se-radio.net/"&gt;Software Engineering
      Radio&lt;/a&gt;. The team there have built an excellent series of podcasts
      on various aspects of software development and I often listen to them
      while taking my afternoon walk. So I&#x2019;m glad to get a spot on there
      myself. In this episode I&#x2019;m on the program with Rebecca Parsons, my
      colleague and co-author of my &lt;a href="http://martinfowler.com/books/dsl.html"&gt;DSL book&lt;/a&gt; to talk about DSLs. We talk
      about what DSLs are, the differences between internal and external
      DSLs, and when you should (and shouldn&#x2019;t use DSLs). The episode is
      hosted by &lt;a href="http://www.voelter.de/"&gt;Markus V&#xF6;lter&lt;/a&gt;, who, of course, is a considerable expert on DSLs too
      - so it&#x2019;s really a three way conversation on the topic.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 19</title>
    <link href="http://martinfowler.com/photos/19.html"/>
    <updated>2012-01-22T19:49:00-05:00</updated>
    <id>tag:martinfowler.com,2012-01-22:photostream-19</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/19.html'&gt;&lt;img src = 'http://martinfowler.com/photos/19.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Boston, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>An open letter to Pearson opposing their support of SOPA and PIPA</title>
    <link href="http://martinfowler.com/articles/pearson-sopa.html"/>
    <updated>2012-01-12T14:04:00-05:00</updated>
    <id>tag:martinfowler.com,2012-01-12:An-open-letter-to-Pearson-opposing-their-support-of-SOPA-and-PIPA</id>
    <content type="html">
      &lt;p&gt;&lt;a href="http://continuousdelivery.com/"&gt;Jez Humble&lt;/a&gt; and I have written an open letter to Pearson opposing their support of the SOPA and PIPA bills currently under consideration from the US congress. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 18</title>
    <link href="http://martinfowler.com/photos/18.html"/>
    <updated>2012-01-10T18:25:00-05:00</updated>
    <id>tag:martinfowler.com,2012-01-10:photostream-18</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/18.html'&gt;&lt;img src = 'http://martinfowler.com/photos/18.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Lindau, Germany&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 17</title>
    <link href="http://martinfowler.com/photos/17.html"/>
    <updated>2011-11-22T17:35:00-05:00</updated>
    <id>tag:martinfowler.com,2011-11-22:photostream-17</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/17.html'&gt;&lt;img src = 'http://martinfowler.com/photos/17.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Wachusett Meadow, Princeton, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: SpecificationByExample</title>
    <link href="http://martinfowler.com/bliki/SpecificationByExample.html"/>
    <updated>2011-11-17T08:38:00-05:00</updated>
    <id>tag:martinfowler.com,2011-11-17:Retreaded--SpecificationByExample</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 18 Mar 2004&lt;/p&gt;

      &lt;p&gt;I was attending a workshop at XP/Agile Universe in 2002 when the
      phrase 'Specification By Example' struck me as a way to describe one
      of roles of testing in &lt;a href="http://martinfowler.com/articles/newMethodology.html#xp"&gt;XP&lt;/a&gt;.
      &lt;/p&gt;

      &lt;p&gt;(These days it's terribly unfashionable to talk about Test Driven
      Development (TDD) having anything to do with testing, but like &lt;a href="http://blogs.codehaus.org/people/tirsen/archives/000582_tdd_is_about_testing.html"&gt;Jon&lt;/a&gt; I do think that having a comprehensive automated test suite
      is more valuable than the term 'side-effect' implies. Rather like if
      someone offered me a million dollars to hike up a mountain. I may say
      that the main purpose of the hike is the enjoyment of nature, but the
      side-effect to my wallet is hardly trivial....)&lt;/p&gt;

      &lt;p&gt;Specification By Example isn't the way most of us have been
      brought up to think of specifications. Specifications are supposed to
      be general, to cover all cases. Examples only highlight a few points,
      you have to infer the generalizations yourself. This does mean that
      Specification By Example can't be the only requirements technique you
      use, but it doesn't mean that it can't take a leading role.&lt;/p&gt;

      &lt;p&gt;So far the dominant idea with rigorous specifications, that is
      those that can be clearly judged to be passed or failed, is to use pre
      and post conditions. These techniques dominate in formal methods, and
      also underpin &lt;a href="http://archive.eiffel.com/doc/manuals/technology/contract/"&gt;Design

      by Contract&lt;/a&gt;. These techniques have their place, but they aren't
      ideal. The pre-post conditions can be very easy to write in some
      situations, but others can be very tricky. I've tried to use them in a
      number enterprise application settings, and I've found that in many
      situations it's as hard to write the pre and post conditions as it is
      to write the solution. One of the great things about specification by
      example is that examples are usually much easier to come up with,
      particularly for the non-nerds who we write the software for. (&lt;a href="http://www.amazon.com/gp/product/0201824191?ie=UTF8&amp;amp;tag=martinfowlerc-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0201824191"&gt;Timothy Budd&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=martinfowlerc-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=0321601912" width="1" height="1" border="0" alt="" style="width: 1px !important; height: 1px !important; border:none !important; margin:0px !important;"/&gt; pointed out that while you can
      show a lot of stack behavior with pre and post conditions, it's very
      tricky to write pre and post conditions that show the LIFO
      property.)&lt;/p&gt;

      &lt;p&gt;An important property of TDD tests is that they involve a
      double-check. In fact this highlights an amusing little lie of the XP
      community. They make a very strong point of saying things Once and
      Only Once, but in fact they always say things twice: once in the code
      and once in the tests. Kent has pointed out that this double-check
      principle is a vital principle, and it's certainly one that humans use
      all the time. The value of the double check is very much tied into
      using different methods for each side of the double check. Combining
      Specification By Example with production code means that you have both
      things said quite differently, which increases their ability to find
      errors.&lt;/p&gt;

      &lt;p&gt;The formal specification community have constantly had trouble
      verifying that a design satisfies a specification, particularly in
      doing this without error prone humans. For Specification By Example,
      this is easy. Another case of Specification By Example being less
      valuable in theory but more valuable in practice.&lt;/p&gt;

      &lt;p&gt;One Design by Contract fan pointed out that if you write a
      specification in terms of tests, then the supplier could satisfy the
      specification by just returning hard-coded responses to the specific
      test inputs. My flippant answer to this is that if you are concerned
      about this then the issue of tests versus Design by Contract is the
      least of your worries. But there is a serious point here. Tests are
      always going to be incomplete, so they always have to be backed up
      with other mechanisms. Being the twisted mind that I am, I actually
      see this as a plus. Since it's clear that Specification By Example
      isn't enough, it's clear that you need to do more to ensure that
      everything is properly communicated. One of the most dangerous things
      about a traditional requirements specification is when people think
      that once they've written it they are done communicating.&lt;/p&gt;

      &lt;p&gt;Specification By Example only works in the context of a working
      relationship where both sides are collaborating and not fighting. The
      examples trigger abstractions in the design team while keeping the
      abstractions grounded. You do need more - things like regular
      conversation, techniques like &lt;a href="http://www.amazon.com/gp/product/0321125215?ie=UTF8&amp;amp;tag=martinfowlerc-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0321125215"&gt;Domain Driven
      Design&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=martinfowlerc-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=0321601912" width="1" height="1" border="0" alt="" style="width: 1px !important; height: 1px !important; border:none !important; margin:0px !important;"/&gt;, indeed even doses of Design by Contract. While I've
      never had the opportunity to use Design by Contract fully (i.e. with
      Eiffel) I regularly think about interfaces in contractual terms.
      Specification By Example is a powerful tool, perhaps my most used
      tool, but never my only tool.&lt;/p&gt;

      &lt;p&gt;(For more thinking on Specification By Example, if not by that
      name, take a look at &lt;a href="http://www.exampler.com/blog/"&gt;Brian Marick's&lt;/a&gt;
      writings. Somewhere on his site there probably is one super page that
      sums up his view on it. Of course finding it is less valuable than
      reading all the stuff there while you're trying) &lt;/p&gt;

      &lt;div id="SomeLaterComments"&gt;&lt;hr class="topSection"/&gt;
      &lt;h2&gt;Some Later Comments&lt;/h2&gt;

      &lt;p&gt;A couple of years after I first wrote this, there was a &lt;a href="http://beust.com/weblog/archives/000392.html"&gt;post by Cedric
      Beust&lt;/a&gt; that was critical of agile methods that
      caused a minor blog spat. There were rebuttals by &lt;a href="http://www.langrsoft.com/blog/2006/06/open-note-to-google-i-thank-google-one.html"&gt;Jeff Langr&lt;/a&gt; and &lt;a href="http://butunclebob.com/ArticleS.UncleBob.AgilePeopleStillDontGetIt"&gt;Bob
      Martin&lt;/a&gt;, and I sent this post through the feed again.  Jeff Langr
      later added a &lt;a href="http://www.langrsoft.com/blog/2006/06/are-tests-specs-ive-presented-tdd.html"&gt;nice
      example&lt;/a&gt; using using tests as specification by example for Java's
      Math.pow function.&lt;/p&gt;
      &lt;/div&gt;

      &lt;p class="repost"&gt;reposted on 17 Nov 2011&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/SpecificationByExample.html&amp;amp;text=Bliki: SpecificationByExample" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/SpecificationByExample.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/SpecificationByExample.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 16</title>
    <link href="http://martinfowler.com/photos/16.html"/>
    <updated>2011-11-11T09:22:00-05:00</updated>
    <id>tag:martinfowler.com,2011-11-11:photostream-16</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/16.html'&gt;&lt;img src = 'http://martinfowler.com/photos/16.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Boston, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>New series book - Service Design Patterns</title>
    <link href="http://martinfowler.com/books/sdp.html"/>
    <updated>2011-11-10T10:38:00-05:00</updated>
    <id>tag:martinfowler.com,2011-11-10:New-series-book---Service-Design-Patterns</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/books/sdp.html'&gt;&lt;img src = 'http://martinfowler.com/daigneau.jpg' width = '100' height = '133' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Addison-Wesley has published a new book in my Signature Series. It&#x2019;s
      by Robert Daigneau and it&#x2019;s called Service Design Patterns. It&#x2019;s a topic
      that&#x2019;s already had too many books on it, but I added this one to the
      series because I think Robert has done a particularly good job of
      collecting together the best advice on the topic and organizing it into
      a useful handbook.  This is the book that I think ought to become the
      standard book on the topic.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Retreaded: ContextualValidation</title>
    <link href="http://martinfowler.com/bliki/ContextualValidation.html"/>
    <updated>2011-11-03T11:00:00-04:00</updated>
    <id>tag:martinfowler.com,2011-11-03:Retreaded--ContextualValidation</id>
    <content type="html">
      &lt;p class = 'original'&gt;&lt;a href = 'http://martinfowler.com/bliki/Retread.html'&gt;Retread&lt;/a&gt; of post orginally made on 07 Dec 2005&lt;/p&gt;

      &lt;p&gt;In my writing endeavors, I've long intended to write a chunk of
      material on validation. It's an area that leads to a lot of
      confusion and it would be good to get some solid description of some
      of the techniques that work well. However life is full of things to
      write about, rather more than time allows.&lt;/p&gt;

      &lt;p&gt;Some recent readings made me think about saying a few
      preliminary things on the topic. One common thing I see people do
      is to develop validation routines for objects. These routines come
      in various ways, they may be in the object or external, they may
      return a boolean or throw an exception to indicate failure. But one
      thing that I think constantly trips people up is when they think
      object validity on a context independent way such as an &lt;code&gt;isValid&lt;/code&gt;
      method implies.&lt;/p&gt;

      &lt;p&gt;I think it's much more useful to think of validation as something
      that's bound to a context - typically an action that you want to do.
      Is this order valid to be filled, is this customer valid to check in
      to the hotel. So rather than have methods like &lt;code&gt;isValid&lt;/code&gt;
      have methods like &lt;code&gt;isValidForCheckIn&lt;/code&gt;. &lt;/p&gt;

      &lt;p&gt;One of the consequences of this is that saving an object to a
      database is itself an action. Thinking about it that way raises some
      important questions. Often when people talk about a context-free
      validity, they mean it in terms of saving to a database. But the
      various validity checks that make this up should be interrogated
      with the question "should failing this test prevent saving?"&lt;/p&gt;

      &lt;p&gt;In &lt;a href="http://www.amazon.com/gp/product/1568843224?ie=UTF8&amp;amp;tag=martinfowlerc-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1568843224"&gt;About Face&lt;/a&gt;&lt;img src="http://www.assoc-amazon.com/e/ir?t=martinfowlerc-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=0321601912" width="1" height="1" border="0" alt="" style="width: 1px !important; height: 1px !important; border:none !important; margin:0px !important;"/&gt; Alan Cooper advocated that we shouldn't let
      our ideas of valid states prevent a user from entering (and saving)
      incomplete information. I was reminded by this a few days ago when
      reading a draft of a book that &lt;a href="http://www.jnsk.se/weblog/rss.xml"&gt;Jimmy Nilsson&lt;/a&gt; is working
      on. He stated a principle that you should always be able to save an
      object, even if it has errors in it. While I'm not convinced that this
      should be an absolute rule, I do think people tend to prevent saving
      more than they ought. Thinking about the context for validation may
      help prevent that.&lt;/p&gt;

      &lt;p class="repost"&gt;reposted on 03 Nov 2011&lt;/p&gt;

      &lt;p class="shares"&gt;&lt;span class="label"&gt;Share: &lt;/span&gt;&lt;a href="https://twitter.com/intent/tweet?url=http://martinfowler.com/bliki/ContextualValidation.html&amp;amp;text=Bliki: ContextualValidation" title="Share on Twitter"&gt;&lt;img src="/t_mini-a.png"/&gt;&lt;/a&gt;&lt;a href="https://facebook.com/sharer.php?u=http://martinfowler.com/bliki/ContextualValidation.html" title="Share on Facebook"&gt;&lt;img src="/fb-icon-20.png"/&gt;&lt;/a&gt;&lt;a href="https://plus.google.com/share?url=http://martinfowler.com/bliki/ContextualValidation.html" title="Share on Google Plus"&gt;&lt;img src="/gplus-16.png"/&gt;&lt;/a&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>ThoughtWorks Agile East</title>
    <link href="http://www.thoughtworks.com/events/agile-east-conference-2011"/>
    <updated>2011-10-13T10:20:00-04:00</updated>
    <id>tag:martinfowler.com,2011-10-13:ThoughtWorks-Agile-East</id>
    <content type="html">
      &lt;p&gt;ThoughtWorks is organizing an &lt;a href="http://www.thoughtworks.com/events/spend-day-martin-fowler-neal-ford-other-agile-thought-leaders"&gt;Agile East&lt;/a&gt; event: a one day
      conference that we&#x2019;re holding in New York (November 2) and Atlanta
      (November 7). I&#x2019;ll be speaking, doing my usual &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;suite of
      talks&lt;/a&gt;. More importantly there&#x2019;s an impressive line up of my
      colleagues - the people whose ideas I clip and package up into those
      talks. So this is a great opportunity to listen to:&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;Graham and Andy talk from their experiences in the
      technical leadership of agile projects&lt;/li&gt;
      &lt;li&gt;project management lessons from Joe Z&lt;/li&gt;
      &lt;li&gt;hot devops and continuous delivery juice from Rolf and Jez&lt;/li&gt;
      &lt;li&gt;Ross&#x2019;s advice on IT budgeting&lt;/li&gt;
      &lt;li&gt;Linda&#x2019;s take on integrating UX with an agile project&lt;/li&gt;
      &lt;li&gt;Matt on using offshore teams for agile (he played a big role
      in building our offshore teams)&lt;/li&gt;
      &lt;li&gt;a trio of talks on the gnarly topic of organizational change from Tiffany, Greg and Manu&lt;/li&gt;
      &lt;li&gt;Chad explaining how to avoid the pitfalls of automated tests&lt;/li&gt;
      &lt;/ul&gt;

      &lt;p&gt;and a special guest in New York who will make all our
      talks seem pedestrian.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 15</title>
    <link href="http://martinfowler.com/photos/15.html"/>
    <updated>2011-09-17T15:55:00-04:00</updated>
    <id>tag:martinfowler.com,2011-09-17:photostream-15</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/15.html'&gt;&lt;img src = 'http://martinfowler.com/photos/15.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Miyajima, Japan&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Interviewed about Agile in 2001 by Jim Highsmith</title>
    <link href="http://www.jimhighsmith.com/2011/09/14/interview-with-martin-fowler-circa-2001/"/>
    <updated>2011-09-16T08:20:00-04:00</updated>
    <id>tag:martinfowler.com,2011-09-16:Interviewed-about-Agile-in-2001-by-Jim-Highsmith</id>
    <content type="html">
      &lt;p&gt;When I went to Snowbird in 2001 for the meeting that led to the &lt;a href="http://agilemanifesto.org/"&gt;Manifesto&lt;/a&gt;,
      Jim interviewed me for the book he was writing on &lt;a href="http://www.amazon.com/Agile-Software-Development-Ecosystems-Highsmith/dp/0201760436/"&gt;Agile Software
      Development Ecosystems&lt;/a&gt;. It provides a snapshot on my thinking
      on extreme programming and this thing that a few days later we called
      agile software development.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 14</title>
    <link href="http://martinfowler.com/photos/14.html"/>
    <updated>2011-09-07T19:01:00-04:00</updated>
    <id>tag:martinfowler.com,2011-09-07:photostream-14</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/14.html'&gt;&lt;img src = 'http://martinfowler.com/photos/14.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Gourdon, France&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking in Frankfurt and Berlin in October</title>
    <link href="http://continuous-delivery.thoughtworks.com/events/software-design-21st-century-frankfurt-berlin-2011"/>
    <updated>2011-09-06T09:04:00-04:00</updated>
    <id>tag:martinfowler.com,2011-09-06:Speaking-in-Frankfurt-and-Berlin-in-October</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://continuous-delivery.thoughtworks.com/events/software-design-21st-century-frankfurt-berlin-2011'&gt;&lt;img src = 'http://martinfowler.com/snips/tw-de.png' width = '150' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;I&#x2019;ll be taking part in a couple of &lt;a href="http://continuous-delivery.thoughtworks.com/events/software-design-21st-century-frankfurt-berlin-2011"&gt;ThoughtWorks events in Germany&lt;/a&gt;
      during October. They are both evening events (Oct 17 Frankfurt and Oct
      18 Berlin). I shall do my usual &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;suite of talks&lt;/a&gt; on
      some mix of topics. I&#x2019;ll be joined by two of my colleagues: Wolf
      Schlegel, who will be talking about continuous delivery and Erik
      D&#xF6;rnenburg who will be talking about using lean techniques with
      enterprise architecture. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 13</title>
    <link href="http://martinfowler.com/photos/13.html"/>
    <updated>2011-08-31T22:29:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-31:photostream-13</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/13.html'&gt;&lt;img src = 'http://martinfowler.com/photos/13.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Highgate, London&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Update of "It's Not Just Standing Up"</title>
    <link href="http://martinfowler.com/articles/itsNotJustStandingUp.html"/>
    <updated>2011-08-29T09:21:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-29:Update-of--It-s-Not-Just-Standing-Up-</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/articles/itsNotJustStandingUp.html'&gt;&lt;img src = 'http://martinfowler.com/snips/jyip.jpg' width = '100' height = '' alt = 'Jason Yip' title = 'Jason Yip'/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Short daily &#x201C;stand-up&#x201D; meetings are a regular feature of agile projects. Done
      well they allow frequent communication across the team with a high
      signal to noise ratio. Done badly, they can be pretty grim. For
      several years, this article by Jason Yip has become the definitive
      source of information on how to make them better. Jason has just finished a
      comprehensive revision of the article, so if you&#x2019;re looking to get the
      best from your stand-ups, you should take a good look at the tips in here.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking at goto Aarhus</title>
    <link href="http://martinfowler.com/snips/201108290912.html"/>
    <updated>2011-08-29T09:12:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-29:Speaking-at-goto-Aarhus</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201108290912.html'&gt;&lt;img src = 'http://martinfowler.com/snips/goto_logo.png' width = '100' height = '' alt = '' title = ''/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;As in so many previous years, I&#x2019;ll be speaking at the the &lt;a href="http://gotocon.com/aarhus-2011/"&gt;goto
      conference&lt;/a&gt; (formerly known as JAOO) in early October. This is an
      excellent conference with a good range of material across both
      technology and process. This year I&#x2019;ll be participating in a pair of
      tutorials.&lt;/p&gt;

      &lt;p&gt;On Oct 9 I&#x2019;ll be with Jez Humble doing our full-day tutorial on
      Continuous Delivery, the first time we&#x2019;ve brought this tutorial to
      Aarhus. This will cover much of the ground in Jez and Dave&#x2019;s award
      winning book including the business case for Continuous Delivery,
      deployment pipelines, testing strategies, version control
      organization, and recipes for going live. We&#x2019;ve had a lot of good
      feedback on this tutorial so far, so I&#x2019;m glad to finally bring this to
      my favorite conference.&lt;/p&gt;

      &lt;p&gt;On Oct 13 I&#x2019;ll join Rebecca Parsons to talk about Evolutionary
      Architecture. Rebecca&#x2019;s long been our chief technical firefighter on
      difficult projects, which often have complicated dependencies to
      enterprise architecture. I&#x2019;ve long been urging her to talk more about
      her experiences and techniques for handling these issues, so it will
      be good to work with her on this tutorial.&lt;/p&gt;

      &lt;p&gt;In between I&#x2019;ll be hanging around the conference catching up on all
      the good pickings that will be available.&lt;/p&gt;

      &lt;p&gt;(If you want to register, using the discount code &#x201C;fowl1250&#x201D; will get
      you a worthwhile discount.)&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Neal Ford's video workshop on agile engineering</title>
    <link href="http://martinfowler.com/snips/201108261000.html"/>
    <updated>2011-08-26T10:00:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-26:Neal-Ford-s-video-workshop-on-agile-engineering</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201108261000.html'&gt;&lt;img src = 'http://martinfowler.com/snips/neal.jpg' width = '100' height = '103' alt = 'Neal Ford' title = 'Neal Ford'/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;My colleague Neal Ford is a frequent writer and speaker who shares
      many of my interests and opinions (and is an excellent source of ideas
      for me to clip). In 2009-10 he wrote a &lt;a href="http://www.ibm.com/developerworks/java/library/j-eaed1/index.html"&gt;series of fifteen
      articles&lt;/a&gt; for IBM developerWorks which dug deeper into the
      question of evolutionary architecture and design. His topics included
      Test Driven Development, leveraging reusable code, refactoring towards
      design and Domain-Specific Languages.&lt;/p&gt;

      &lt;p&gt;Now he&#x2019;s followed on from this and recorded a &lt;a href="http://my.safaribooksonline.com/video/-/9781449314439"&gt;video workshop on Agile
      Engineering Practices&lt;/a&gt; for
      O&#x2019;Reilly that&#x2019;s available on safari books online. These cover much of
      the topics that make evolutionary design possible, including
      Test-Driven Design, automation, and testing strategies.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 12</title>
    <link href="http://martinfowler.com/photos/12.html"/>
    <updated>2011-08-25T15:35:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-25:photostream-12</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/12.html'&gt;&lt;img src = 'http://martinfowler.com/photos/12.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Mesa Arch, Canyonlands N.P., Utah&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>ThoughtWorks Microsite on Continuous Delivery</title>
    <link href="http://continuous-delivery.thoughtworks.com"/>
    <updated>2011-08-24T10:02:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-24:ThoughtWorks-Microsite-on-Continuous-Delivery</id>
    <content type="html">
      &lt;p&gt;ThoughtWorks has launched a &lt;a href="http://continuous-delivery.thoughtworks.com/"&gt;microsite devoted to Continuous
      Delivery&lt;/a&gt;. At the moment you&#x2019;ll find some short videos from the
      ThoughtWorks Live event we did in May, plus links to recent writing by
      Jez Humble (oops, now I have to call him the &lt;a href="http://drdobbs.com/joltawards/231500080?pgno=7"&gt;award-winning&lt;/a&gt; Jez
      Humble). We also post details of our upcoming events in the field of
      Continuous Delivery and Devops.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Beaten Again</title>
    <link href="http://martinfowler.com/snips/201108240949.html"/>
    <updated>2011-08-24T09:49:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-24:Beaten-Again</id>
    <content type="html">
      &lt;p&gt;In the software world, we have the &lt;a href="http://drdobbs.com/joltawards"&gt;Jolt awards&lt;/a&gt;. These were
      originally run by Software Development magazine and are now run by Dr
      Dobbs magazine. My books have won a couple of &#x2018;productivity awards&#x2019; -
      which are essentially the runner-up awards - but I&#x2019;ve never snagged to
      top award (now called the &#x2018;excellence award&#x2019;). This year my [DSL book][]
      was up for an award and [won a &#x2018;finalist award&#x2019;][dsl jolt] (essentially this means
      I was runner-up to the runner-ups). &lt;/p&gt;

      &lt;p&gt;So I failed again, but this year I would have been very annoyed if
      I had won. I&#x2019;ve argued all year that Jez and Dave&#x2019;s book on [Continuous
      Delivery][cd book] was the most important book released this year, and so I&#x2019;m
      glad that Dr Dobbs [agreed with me][cd jolt] and gave them the excellence award.
      Congratulations to Jez and Dave in joining the long list of people who
      have kept me away from this award.&lt;/p&gt;

      &lt;p&gt;Although I keep missing the top prize, my signature series has a very
      good record with these awards. The 10 books in my series so far have
      picked up 1 finalist, 4 productivity and 2
      excellence awards. Not a bad hit rate.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 11</title>
    <link href="http://martinfowler.com/photos/11.html"/>
    <updated>2011-08-03T18:14:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-03:photostream-11</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/11.html'&gt;&lt;img src = 'http://martinfowler.com/photos/11.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Villa Rufolo, Ravello, Italy&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>ThoughtWorks Technology Radar</title>
    <link href="http://www.thoughtworks.com/radar"/>
    <updated>2011-08-02T10:58:00-04:00</updated>
    <id>tag:martinfowler.com,2011-08-02:ThoughtWorks-Technology-Radar</id>
    <content type="html">
      &lt;p&gt;We have now released the latest version of the ThoughtWorks Technology
      Radar. This is where a bunch of my colleagues get together and discuss
      the technologies that they think are worth keeping an eye on. It&#x2019;s not
      intended to be some comprehensively researched list, as it&#x2019;s just the
      aggregation of the opinions of the small group of people that create
      it. But since that group is an experienced group of ThoughtWorks
      consultants, I think it&#x2019;s a useful pointer to things to pay attention
      to in enterprise software.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 10</title>
    <link href="http://martinfowler.com/photos/10.html"/>
    <updated>2011-07-12T19:56:00-04:00</updated>
    <id>tag:martinfowler.com,2011-07-12:photostream-10</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/10.html'&gt;&lt;img src = 'http://martinfowler.com/photos/10.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Canterbury Cathedral, Canterbury, England&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>The LMAX Architecture</title>
    <link href="http://martinfowler.com/articles/lmax.html"/>
    <updated>2011-07-12T09:43:00-04:00</updated>
    <id>tag:martinfowler.com,2011-07-12:The-LMAX-Architecture</id>
    <content type="html">
      &lt;p&gt;When I was at QCon London last year, there was much buzz around a talk
      about a new retail trading system. The thing that got people&#x2019;s
      attention was its approach to achieving its high performance needs -
      reaching 6 million TPS. It does this by running all its business logic
      on a single JVM thread, getting high speed without all the
      complications of concurrent programming. This article describes the
      architecture they use to pull this off.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 9</title>
    <link href="http://martinfowler.com/photos/9.html"/>
    <updated>2011-07-06T18:45:00-04:00</updated>
    <id>tag:martinfowler.com,2011-07-06:photostream-9</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/9.html'&gt;&lt;img src = 'http://martinfowler.com/photos/9.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Gloucester, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Mike Mason and I talk about Feature Branching</title>
    <link href="http://www.thoughtworks.com/perspectives/30-06-2011-continuous-delivery"/>
    <updated>2011-07-05T10:05:00-04:00</updated>
    <id>tag:martinfowler.com,2011-07-05:Mike-Mason-and-I-talk-about-Feature-Branching</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.thoughtworks.com/perspectives/30-06-2011-continuous-delivery'&gt;&lt;img src = 'http://martinfowler.com/snips/mike-and-mf.jpg' width = '159' height = '88' alt = 'Mike Mason and Martin Fowler' title = 'Mike Mason and Martin Fowler'/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;In this video (12 minutes) &lt;a href="http://mikemason.ca/blog/"&gt;Mike Mason&lt;/a&gt; and I talk about the
      perils of &lt;a href="http://martinfowler.com/bliki/FeatureBranch.html"&gt;Feature Branching&lt;/a&gt; and its alternatives. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 8</title>
    <link href="http://martinfowler.com/photos/8.html"/>
    <updated>2011-06-23T19:41:00-04:00</updated>
    <id>tag:martinfowler.com,2011-06-23:photostream-8</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/8.html'&gt;&lt;img src = 'http://martinfowler.com/photos/8.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Boscastle, Cornwall&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Sam Newman talks about Continuous Delivery</title>
    <link href="http://www.thoughtworks.com/events/push-the-button"/>
    <updated>2011-06-21T09:37:00-04:00</updated>
    <id>tag:martinfowler.com,2011-06-21:Sam-Newman-talks-about-Continuous-Delivery</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://www.thoughtworks.com/events/push-the-button'&gt;&lt;img src = 'http://martinfowler.com/snips/sam-cd.jpg' width = '116' height = '116' alt = 'Sam Newman' title = 'Sam Newman'/&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="http://www.samnewman.org"&gt;Sam Newman&lt;/a&gt; is one of our Principal Consultants based in London
      who has been heavily involved in the development of our approaches to
      &lt;a href="http://martinfowler.com/delivery.html"&gt;Continuous Delivery&lt;/a&gt;. Recently he gave a series of QTB (Quarterly
      Technology Briefing) talks and &lt;a href="http://www.thoughtworks.com/events/push-the-button"&gt;one of these was videoed&lt;/a&gt; and
      put on the ThoughtWorks site. It&#x2019;s an excellent overview of why it&#x2019;s
      important to learn how to do Continuous Delivery on the modern web,
      together with an overview of the practices needed to achieve it.&lt;/p&gt;

      &lt;!--
      still of Sam taken from frame 9169 of video
      --&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 7</title>
    <link href="http://martinfowler.com/photos/7.html"/>
    <updated>2011-05-28T09:54:00-04:00</updated>
    <id>tag:martinfowler.com,2011-05-28:photostream-7</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/7.html'&gt;&lt;img src = 'http://martinfowler.com/photos/7.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Jordan Pond, Acadia N.P., ME&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Reference pages for DSL patterns</title>
    <link href="http://martinfowler.com/dslCatalog"/>
    <updated>2011-05-13T09:35:00-04:00</updated>
    <id>tag:martinfowler.com,2011-05-13:Reference-pages-for-DSL-patterns</id>
    <content type="html">
      &lt;p&gt;I&#x2019;ve been very tardy in doing this, but I&#x2019;ve finally put up a set of
      reference pages for the patterns in the &lt;a href="http://martinfowler.com/books/dsl.html"&gt;DSL Book&lt;/a&gt;. There&#x2019;s not much
      on each page, just the intent, chapter reference, and sometimes some
      summary text. I&#x2019;ve primarily put these up to give them a stable URI
      for reference purposes. There&#x2019;s a chance I&#x2019;ll put supplemental
      material up there too, but I&#x2019;ve had that intention before without
      anything happening. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 6</title>
    <link href="http://martinfowler.com/photos/6.html"/>
    <updated>2011-05-12T20:41:00-04:00</updated>
    <id>tag:martinfowler.com,2011-05-12:photostream-6</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/6.html'&gt;&lt;img src = 'http://martinfowler.com/photos/6.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;St Malo, Brittany, France&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 5</title>
    <link href="http://martinfowler.com/photos/5.html"/>
    <updated>2011-05-07T18:07:00-04:00</updated>
    <id>tag:martinfowler.com,2011-05-07:photostream-5</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/5.html'&gt;&lt;img src = 'http://martinfowler.com/photos/5.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Castle Hill, Ipswich, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Musings on ebooks</title>
    <link href="http://martinfowler.com/articles/ebook.html"/>
    <updated>2011-05-05T09:18:00-04:00</updated>
    <id>tag:martinfowler.com,2011-05-05:Musings-on-ebooks</id>
    <content type="html">
      &lt;p&gt;It&#x2019;s only just over a year since I got my first ebook reader. Now I
      only buy paper books when I really have to. I wrote my last book
      thinking of it primarily as a paper book, but that will be the last
      time, in the future electronic forms will be at the front of my
      mind. It&#x2019;s clear ebooks will change the book industry in a dramatic
      way, but it&#x2019;s not clear exactly how. Here are my current thoughts on
      what&#x2019;s happening.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Tutorial on Continuous Delivery at goto; Aarhus</title>
    <link href="http://martinfowler.com/snips/201105031617.html"/>
    <updated>2011-05-03T16:17:00-04:00</updated>
    <id>tag:martinfowler.com,2011-05-03:Tutorial-on-Continuous-Delivery-at-goto--Aarhus</id>
    <content type="html">
      &lt;div class = 'img'&gt;&lt;a href = 'http://martinfowler.com/snips/201105031617.html'&gt;&lt;img src = 'http://martinfowler.com/snips/jez.jpg' width = '116' height = '125' alt = 'Jez Humble' title = 'Jez Humble'/&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;p&gt;I&#x2019;ll be joining my colleague Jez Humble to give another of our
      tutorials on Continuous Delivery at &lt;a href="http://gotocon.com/aarhus-2011/presentations/show_presentation.jsp?oid=3172"&gt;goto; Aarhus&lt;/a&gt;. This is the
      rebranded incarnation of JAOO - which has been my favorite conference for a long time now. This will be our first time doing the full day continuous delivery tutorial in Aarhus.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Reflections on 10 years since the agile manifesto at SD Times</title>
    <link href="http://www.sdtimes.com/link/35489"/>
    <updated>2011-05-03T13:05:00-04:00</updated>
    <id>tag:martinfowler.com,2011-05-03:Reflections-on-10-years-since-the-agile-manifesto-at-SD-Times</id>
    <content type="html">
      &lt;p&gt;SD Times has published an interview with me on my thoughts on ten
      years since the Agile Manifesto. I answer questions about what brought
      me to the meeting, whether I think the manifesto should be changed,
      and what I see in the next five years of the agile movement.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 4</title>
    <link href="http://martinfowler.com/photos/4.html"/>
    <updated>2011-05-02T14:17:00-04:00</updated>
    <id>tag:martinfowler.com,2011-05-02:photostream-4</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/4.html'&gt;&lt;img src = 'http://martinfowler.com/photos/4.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Kumarakom, Kerala, India&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Signature Series 40% off until May 15</title>
    <link href="http://martinfowler.com/snips/201104281449.html"/>
    <updated>2011-04-28T14:49:00-04:00</updated>
    <id>tag:martinfowler.com,2011-04-28:Signature-Series-40--off-until-May-15</id>
    <content type="html">
      &lt;p&gt;It&#x2019;s been going on for a bit, but I&#x2019;ve been tardy in letting people
      know. Addison-Wesley are currently having &lt;a href="http://www.informit.com/promotions/promotion.aspx?promo=138302"&gt;a promotion on signature series
      books&lt;/a&gt;. You get 40% off if you buy through informIT and buy at
      least two books in any of the series (ie mine, Kent&#x2019;s or Mike&#x2019;s). &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Adding photos to my feed</title>
    <link href="http://martinfowler.com/snips/201104231610.html"/>
    <updated>2011-04-23T16:10:00-04:00</updated>
    <id>tag:martinfowler.com,2011-04-23:Adding-photos-to-my-feed</id>
    <content type="html">
      &lt;p&gt;You may have noticed some photos cropping up in my news feed. Like
      many geeks I indulge in photography. So far this has been a harmless
      personal diversion, but I&#x2019;ve reached the point where I&#x2019;m feeling a
      desire to share some of my photos with the Internet - just in case we
      have a shortage. So you&#x2019;ll see photos appear in my photostream from
      time to time. I intend to post no more than one or two a week.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 3</title>
    <link href="http://martinfowler.com/photos/3.html"/>
    <updated>2011-04-23T15:12:00-04:00</updated>
    <id>tag:martinfowler.com,2011-04-23:photostream-3</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/3.html'&gt;&lt;img src = 'http://martinfowler.com/photos/3.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Mont Saint-Michel, Normandy, France&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 2</title>
    <link href="http://martinfowler.com/photos/2.html"/>
    <updated>2011-04-23T15:11:00-04:00</updated>
    <id>tag:martinfowler.com,2011-04-23:photostream-2</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/2.html'&gt;&lt;img src = 'http://martinfowler.com/photos/2.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;Charlestown, MA&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>photostream 1</title>
    <link href="http://martinfowler.com/photos/1.html"/>
    <updated>2011-04-23T15:10:00-04:00</updated>
    <id>tag:martinfowler.com,2011-04-23:photostream-1</id>
    <content type="html">
      &lt;p&gt;&lt;a href = 'http://martinfowler.com/photos/1.html'&gt;&lt;img src = 'http://martinfowler.com/photos/1.jpg'&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;/p&gt;

      &lt;p&gt;401 Trail, Crested Butte, CO&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Going Beyond Curly Braces</title>
    <link href="http://martinfowler.com/snips/201104191654.html"/>
    <updated>2011-04-19T16:54:00-04:00</updated>
    <id>tag:martinfowler.com,2011-04-19:Going-Beyond-Curly-Braces</id>
    <content type="html">
      &lt;p&gt;On my long flight down to Australia recently I dug into a copy of
      &lt;a href="http://pragprog.com/titles/btlang/seven-languages-in-seven-weeks"&gt;Seven Languages in Seven Weeks&lt;/a&gt;. I spent less than seven hours
      on it, but found it a worthwhile read. He takes a lightening tour
      through seven languages. It&#x2019;s not enough to go into much depth on any
      them, but it is enough to get a rough feel what&#x2019;s interesting about
      them. I&#x2019;d particularly recommend it if you are just starting to
      explore beyond the curly-brace languages that dominate so much of
      current programming.&lt;/p&gt;

      &lt;p&gt;One thing I particularly appreciate about pragprog books is that you
      get access to electronic versions in multiple formats. This book
      worked very well on the Kindle, despite the small screen.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Article on Non-Determinism in Tests</title>
    <link href="http://martinfowler.com/articles/nonDeterminism.html"/>
    <updated>2011-04-14T09:19:00-04:00</updated>
    <id>tag:martinfowler.com,2011-04-14:Article-on-Non-Determinism-in-Tests</id>
    <content type="html">
      &lt;p&gt;In conversations with project teams, I&#x2019;ve heard a lot about problems
      with flaky, unreliable tests. These non-deterministic tests are a
      serious problem with testing efforts. So I&#x2019;ve written an article that
      talks about how to deal with these non-determinisms, discussing how to
      cope with some common causes: lack of isolation, asynchronous
      behavior, remote services, time, and resource leaks.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Q&amp;A on Story Points</title>
    <link href="http://blog.anandvishwanath.in/2011/03/questioning-story-points.html"/>
    <updated>2011-03-29T08:57:00-04:00</updated>
    <id>tag:martinfowler.com,2011-03-29:Q-A-on-Story-Points</id>
    <content type="html">
      &lt;p&gt;My colleague &lt;a href="http://blog.anandvishwanath.in/"&gt;Anand Vishwanath&lt;/a&gt; has
      put together a nice Q&amp;amp;A on the role Story Points play on a project.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>InfoQ interviews Jez Humble and me about Continuous Delivery</title>
    <link href="http://martinfowler.com/snips/201102181539.html"/>
    <updated>2011-02-18T15:39:00-05:00</updated>
    <id>tag:martinfowler.com,2011-02-18:InfoQ-interviews-Jez-Humble-and-me-about-Continuous-Delivery</id>
    <content type="html">
      &lt;p&gt;After our tutorial at QCon San Francisco last year, the InfoQ people
      sat us down for an &lt;a href="http://www.infoq.com/interviews/jez-humble-martin-fowler-cd"&gt;interview on Continuous Delivery&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Update on malware issue with ThoughtWorks web sites</title>
    <link href="http://martinfowler.com/snips/201102181119.html"/>
    <updated>2011-02-18T11:19:00-05:00</updated>
    <id>tag:martinfowler.com,2011-02-18:Update-on-malware-issue-with-ThoughtWorks-web-sites</id>
    <content type="html">
      &lt;p&gt;I&#x2019;ve posted &lt;a href="../articles/malware.html"&gt;an article detailing our malware attack&lt;/a&gt;. The
      short form is that we believe our sites are clear, but we currently
      have to operate them with reduced functionality. The malware only
      attacks a small proportion of visitors (which is part of what makes it
      difficult to deal with). However if you have visited our sites since
      Christmas with a windows machine, you should read more.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking at ThoughtWorks Australia QTB</title>
    <link href="http://martinfowler.com/snips/201102171401.html"/>
    <updated>2011-02-17T14:01:00-05:00</updated>
    <id>tag:martinfowler.com,2011-02-17:Speaking-at-ThoughtWorks-Australia-QTB</id>
    <content type="html">
      &lt;p&gt;Next week I&#x2019;m heading off to spend some time in Australia (thankfully
      away from all this snow-shovelling). While I&#x2019;m there I&#x2019;ll be
      participating in a series of &lt;a href="http://www.thoughtworks.com/events/thoughtworks-quarterly-briefing-continuous-delivery"&gt;Quarterly Technology Briefings&lt;/a&gt;. These
      will take the form of a panel Q&amp;amp;A on &lt;a href="http://martinfowler.com/delivery.html"&gt;Continuous Delivery&lt;/a&gt;. On the
      panel I shall be over-shadowed by &lt;a href="http://memeagora.blogspot.com/"&gt;Neal Ford&lt;/a&gt; and we will both be
      over-shadowed by &lt;a href="http://evan.bottch.com/"&gt;Evan Bottcher&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Investigating ThoughtWorks in Vancouver</title>
    <link href="http://martinfowler.com/snips/201102081553.html"/>
    <updated>2011-02-08T15:53:00-05:00</updated>
    <id>tag:martinfowler.com,2011-02-08:Investigating-ThoughtWorks-in-Vancouver</id>
    <content type="html">
      &lt;p&gt;&lt;a href="http://www.linkedin.com/in/sidpinney"&gt;Sid Pinney&lt;/a&gt; often takes on the job of investigating new locations for
      ThoughtWorks offices. He&#x2019;s been one of the first to help start our
      offices in England, China, and Brazil. Last week I got an email saying
      he&#x2019;s investigating possibilities in Vancouver. He&#x2019;s looking for people
      to talk to: so if you&#x2019;re a prospective client, possible employee, or
      are just friendly and looking to have Sid buy you a free food - get in
      touch with him by &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#115;&amp;#103;&amp;#112;&amp;#105;&amp;#110;&amp;#110;&amp;#101;&amp;#121;&amp;#064;&amp;#116;&amp;#104;&amp;#111;&amp;#117;&amp;#103;&amp;#104;&amp;#116;&amp;#119;&amp;#111;&amp;#114;&amp;#107;&amp;#115;&amp;#046;&amp;#099;&amp;#111;&amp;#109;"&gt;email&lt;/a&gt; or &lt;a href="http://twitter.com/twsidpinney"&gt;twitter&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Malware alert on thoughtworks.com</title>
    <link href="http://martinfowler.com/snips/201102031714.html"/>
    <updated>2011-02-03T12:14:00-05:00</updated>
    <id>tag:martinfowler.com,2011-02-03:Malware-alert-on-thoughtworks-com</id>
    <content type="html">
      &lt;p&gt;We seem to have a shy but annoying piece of malware hanging out on thoughtworks.com. As far as we can tell, it manifests itself as a hidden iframe that redirects you to a site that hosts malware. We&#x2019;re a bit vague on this, as it only appears rarely so only a couple of people have seen it.&lt;/p&gt;

      &lt;p&gt;Our biggest sign of it is via google. Google reported our site on Jan 7th as having problems, we looked into it, didn&#x2019;t find anything, and Google&#x2019;s complaint went away very quickly. The flag went up again on Jan 31st and this time they emailed our webmaster. We looked again for a problem, without any success, so we asked them to re-review our site. Since then various Google diagnostics have raising and lowering the suspicious flag at a dizzying rate. As I write this the site is considered safe, but given the volatility of the opinion, we aren&#x2019;t sure about how things will go. (If you&#x2019;re concerned you can check &lt;a href="http://safebrowsing.clients.google.com/safebrowsing/diagnostic?site=www.thoughtworks.com"&gt;Google&#x2019;s safebrowsing link&lt;/a&gt;.)&lt;/p&gt;

      &lt;p&gt;Clearly this is a bit of malware that&#x2019;s set to only show itself occasionally, which makes it harder to deal with. The tricky bit is to find how it&#x2019;s getting into the site. We&#x2019;ve checked all our content and not found anything suspicious, but it could be third party javascript libraries, could be our Drupal instance, could even be a problem with our apache installation - but we don&#x2019;t know for sure. &lt;/p&gt;

      &lt;p&gt;We&#x2019;re investigating this further (including following the recommendations of &lt;a href="http://www.stopbadware.org/home/security"&gt;stopbadware&lt;/a&gt;) but haven&#x2019;t yet found the root cause, although we do have some strong suspects. If you see anything suspicious on our site or would like to pass on any suggestions, please contact &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#119;&amp;#101;&amp;#098;&amp;#109;&amp;#097;&amp;#115;&amp;#116;&amp;#101;&amp;#114;&amp;#064;&amp;#116;&amp;#104;&amp;#111;&amp;#117;&amp;#103;&amp;#104;&amp;#116;&amp;#119;&amp;#111;&amp;#114;&amp;#107;&amp;#115;&amp;#046;&amp;#099;&amp;#111;&amp;#109;"&gt;Andy Yates&lt;/a&gt;. &lt;/p&gt;

      &lt;p&gt;As far as I know, this problem &lt;a href="http://safebrowsing.clients.google.com/safebrowsing/diagnostic?site=martinfowler.com"&gt;does not affect&lt;/a&gt; martinfowler.com - which is a static site built with my custom scripts, so is less likely to attract such a problem. But do let me know if you see anything.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Video of Wikileaks panel</title>
    <link href="http://martinfowler.com/snips/201101211118.html"/>
    <updated>2011-01-21T11:18:00-05:00</updated>
    <id>tag:martinfowler.com,2011-01-21:Video-of-Wikileaks-panel</id>
    <content type="html">
      &lt;p&gt;I enjoyed the Churchill Club panel discussion on wikileaks on
      Wednesday. It&#x2019;s thoughtful and well worth watching &lt;a href="http://fora.tv/2011/01/19/WikiLeaks_Why_It_Matters_Why_It_Doesnt"&gt;the video&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;I particularly appreciated Daniel Ellsberg&#x2019;s picture of the climate of
      government secrecy and Roy&#x2019;s call to follow the example of librarians
      resisting secret gag orders. (There was a bit were it threatens to sink
      deep into the nature of libertarianism, but fortunately that didn&#x2019;t
      last long.) While my thoughts on wikileaks are
      complicated (and I&#x2019;ve not had the energy to write about them) I think
      the incident raises some very serious issues around the contending
      forces of privacy and openness. This panel provides a useful briefing
      on some of these perspectives.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Cindy is doing the Avon Walk for Breast Cancer</title>
    <link href="http://martinfowler.com/snips/201101201043.html"/>
    <updated>2011-01-20T10:43:00-05:00</updated>
    <id>tag:martinfowler.com,2011-01-20:Cindy-is-doing-the-Avon-Walk-for-Breast-Cancer</id>
    <content type="html">
      &lt;p&gt;Last year Cindy, my wife, did Boston&#x2019;s Avon walk to raise money for
      breast cancer research. She decided to it again this year. Last year a
      good proportion of the money she raised came from my readers, and
      we&#x2019;re hoping we can get another round of support from you this
      year. If you&#x2019;d like to donate, please go to her &lt;a href="http://avonwalk.org/goto/Cindy.Chabot"&gt;walk
      page&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>Speaking event in Hamburg</title>
    <link href="http://martinfowler.com/snips/201101180928.html"/>
    <updated>2011-01-18T09:28:00-05:00</updated>
    <id>tag:martinfowler.com,2011-01-18:Speaking-event-in-Hamburg</id>
    <content type="html">
      &lt;p&gt;I&#x2019;m going to Germany next week and we&#x2019;ve added a third speaking event
      to my trip. As well as speaking at &lt;a href="http://www.sigs-datacom.de/oop2011/oop2011-eng/latest-news.html"&gt;OOP&lt;/a&gt; in Munich and in &lt;a href="http://jugcologne.eu/"&gt;Cologne&lt;/a&gt;,
      ThoughtWorks has organized a &lt;a href="http://www.thoughtworks.com/events/software-design-21st-century-deutschland"&gt;speaking event in Hamburg&lt;/a&gt; on Jan
      31st. My colleagues Erik D&#xF6;ernenburg and Wolf Schlegel will give a
      talk on Continuous Deployment and I&#x2019;ll follow with my usual
      &lt;a href="http://martinfowler.com/bliki/SuiteOfTalks.html"&gt;SuiteOfTalks&lt;/a&gt;. &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <title>WikiLeaks:  Why it Matters. Why it Doesn&#x2019;t?</title>
    <link href="http://martinfowler.com/snips/201101171156.html"/>
    <updated>2011-01-17T11:56:00-05:00</updated>
    <id>tag:martinfowler.com,2011-01-17:WikiLeaks---Why-it-Matters--Why-it-Doesn-t-</id>
    <content type="html">
      &lt;p&gt;ThoughtWorks and The Churchill Club are presenting a &lt;a href="http://www.thoughtworks.com/events/wikileaks-why-it-matters-why-it-doesnt"&gt;panel discussion
      on Wikileaks&lt;/a&gt; which will explore the consequences of this saga
      on the freedom of the internet. The panel features:&lt;/p&gt;

      &lt;ul&gt;
      &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Daniel_Ellsberg"&gt;Daniel Ellsberg&lt;/a&gt; (of Pentagon Papers fame)&lt;/li&gt;
      &lt;li&gt;&lt;a href="http://www.shirky.com/"&gt;Clay Shirky&lt;/a&gt; (thoughtful writer about the internet)&lt;/li&gt;
      &lt;li&gt;&lt;a href="http://www.thoughtworks.com/roy-singham"&gt;Roy Singham&lt;/a&gt; (ThoughtWorks&#x2019;s founder)&lt;/li&gt;
      &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Peter_Thiel"&gt;Peter Thiel&lt;/a&gt; (co-founder of PayPal)&lt;/li&gt;
      &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Jonathan_Zittrain"&gt;Jonathan Zittrain&lt;/a&gt; (law professor at Harvard).&lt;/li&gt;
      &lt;/ul&gt;

      &lt;p&gt;The panel is moderated by &lt;a href="http://en.wikipedia.org/wiki/Paul_Jay"&gt;Paul Jay&lt;/a&gt; from The Real News Network.&lt;/p&gt;

      &lt;p&gt;It&#x2019;s being held at 5.30 PST on Wednesday January 19th at the Santa
      Clara Marriott. You can also watch the event live on &lt;a href="http://fora.tv/live/churchill_club/Wikileaks_Why_it_Matters"&gt;Fora.tv&lt;/a&gt; and
      &lt;a href="http://therealnews.com/t2/about-us/events"&gt;The Real News Network&lt;/a&gt;. Streaming starts at 7pm PST.&lt;/p&gt;
    </content>
  </entry>
</feed>
